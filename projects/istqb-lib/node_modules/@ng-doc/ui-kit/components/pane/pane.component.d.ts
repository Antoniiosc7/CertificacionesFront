import { ChangeDetectorRef, ElementRef, NgZone, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NgDocPaneFrontDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocPaneFrontDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgDocPaneFrontDirective, "[ngDocPaneFront]", never, {}, {}, never, never, true, never>;
}
export declare class NgDocPaneBackDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocPaneBackDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgDocPaneBackDirective, "[ngDocPaneBack]", never, {}, {}, never, never, true, never>;
}
export declare class NgDocPaneComponent implements OnChanges {
    private readonly document;
    private readonly changeDetectorRef;
    private readonly elementRef;
    private readonly ngZone;
    expanded: boolean;
    resizer?: ElementRef<HTMLElement>;
    width: string;
    dragging: boolean;
    constructor(document: Document, changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<HTMLElement>, ngZone: NgZone);
    ngOnChanges({ expanded }: SimpleChanges): void;
    toggle(): void;
    private addDelta;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocPaneComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocPaneComponent, "ng-doc-pane", never, { "expanded": { "alias": "expanded"; "required": false; }; }, {}, never, ["[ngDocPaneBack]", "[ngDocPaneFront]"], true, never>;
}
