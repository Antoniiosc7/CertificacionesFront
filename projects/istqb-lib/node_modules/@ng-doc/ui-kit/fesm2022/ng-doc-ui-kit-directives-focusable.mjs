import * as i0 from '@angular/core';
import { Directive, Input, HostBinding } from '@angular/core';

class NgDocFocusableDirective {
    constructor() {
        this.focusable = true;
    }
    get tabIndex() {
        return this.focusable ? 0 : -1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocFocusableDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocFocusableDirective, isStandalone: true, selector: "[ngDocFocusable]", inputs: { focusable: ["ngDocFocusable", "focusable"] }, host: { properties: { "attr.tabIndex": "this.tabIndex" } }, exportAs: ["ngDocFocusable"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocFocusableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocFocusable]',
                    exportAs: 'ngDocFocusable',
                    standalone: true,
                }]
        }], propDecorators: { focusable: [{
                type: Input,
                args: ['ngDocFocusable']
            }], tabIndex: [{
                type: HostBinding,
                args: ['attr.tabIndex']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocFocusableDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-focusable.mjs.map
