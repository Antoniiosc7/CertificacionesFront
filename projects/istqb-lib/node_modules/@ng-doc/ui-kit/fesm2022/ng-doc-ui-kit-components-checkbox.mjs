import { NgIf } from '@angular/common';
import * as i0 from '@angular/core';
import { inject, Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';
import { NgDocIconComponent } from '@ng-doc/ui-kit/components/icon';
import { NgDocCheckedChangeDirective } from '@ng-doc/ui-kit/directives/checked-change';
import { NgDocFocusableDirective } from '@ng-doc/ui-kit/directives/focusable';
import { DIStateControl, injectHostControl, DICompareHost } from 'di-controls';

class NgDocCheckboxComponent extends DIStateControl {
    constructor() {
        super({
            host: injectHostControl({ optional: true }),
            compareHost: inject(DICompareHost, { optional: true }),
        });
        this.color = 'primary';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocCheckboxComponent, isStandalone: true, selector: "ng-doc-checkbox", inputs: { color: "color" }, host: { properties: { "attr.data-lu-color": "this.color" } }, usesInheritance: true, ngImport: i0, template: "<label class=\"ng-doc-checkbox-wrapper\">\n\t<div class=\"ng-doc-checkbox\">\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[ngDocChecked]=\"checked()\"\n\t\t\t(ngDocCheckedChange)=\"toggle(); touch()\"\n\t\t\t(blur)=\"touch()\"\n\t\t\t[ngDocFocusable]=\"false\" />\n\t\t<ng-doc-icon icon=\"minus\" *ngIf=\"isIntermediate\"></ng-doc-icon>\n\t\t<ng-doc-icon icon=\"check\" *ngIf=\"checked()\"></ng-doc-icon>\n\t</div>\n\t<div class=\"ng-doc-checkbox-content\">\n\t\t<span class=\"ng-doc-checkbox-icons\">\n\t\t\t<ng-content select=\"ng-doc-icon\"></ng-content>\n\t\t</span>\n\t\t<div class=\"ng-doc-checkbox-text\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</label>\n", styles: [":host{display:inline-flex;align-items:flex-start;flex-direction:column;font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight)}:host:not(:last-of-type){margin-bottom:var(--ng-doc-list-element-vertical-space);margin-right:var(--ng-doc-list-element-horizontal-space)}:host:hover:not([data-checked=true]) .ng-doc-checkbox{border:var(--ng-doc-checkbox-border-hover)}:host:not([data-disabled=true]) .ng-doc-checkbox-wrapper{cursor:pointer}:host[data-checked=true] .ng-doc-checkbox{background-color:var(--ng-doc-checkbox-color);--ng-doc-checkbox-border: var(--ng-doc-checkbox-color);--ng-doc-checkbox-border-hover: var(--ng-doc-checkbox-color);--ng-doc-icon-color: var(--ng-doc-checkbox-color-text)}input{position:absolute;bottom:0;left:50%;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;outline:0}.ng-doc-checkbox-wrapper{display:flex}.ng-doc-checkbox{position:relative;display:flex;align-items:center;justify-content:center;width:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);border:var(--ng-doc-checkbox-border);flex:0 0 calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);background-color:var(--ng-doc-base-0);transition:background-color var(--ng-doc-transition);box-sizing:border-box;border-radius:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-content{display:flex;align-items:flex-start}.ng-doc-checkbox-icons{display:flex;margin-left:var(--ng-doc-base-gutter);margin-top:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-icons:empty{display:none}.ng-doc-checkbox-text{margin-left:var(--ng-doc-base-gutter);line-height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-text:empty{display:none}\n"], dependencies: [{ kind: "directive", type: NgDocCheckedChangeDirective, selector: "input[ngDocChecked], input[ngDocCheckedChange]", inputs: ["ngDocChecked"], outputs: ["ngDocCheckedChange"] }, { kind: "directive", type: NgDocFocusableDirective, selector: "[ngDocFocusable]", inputs: ["ngDocFocusable"], exportAs: ["ngDocFocusable"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-checkbox', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgDocCheckedChangeDirective, NgDocFocusableDirective, NgIf, NgDocIconComponent], template: "<label class=\"ng-doc-checkbox-wrapper\">\n\t<div class=\"ng-doc-checkbox\">\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[ngDocChecked]=\"checked()\"\n\t\t\t(ngDocCheckedChange)=\"toggle(); touch()\"\n\t\t\t(blur)=\"touch()\"\n\t\t\t[ngDocFocusable]=\"false\" />\n\t\t<ng-doc-icon icon=\"minus\" *ngIf=\"isIntermediate\"></ng-doc-icon>\n\t\t<ng-doc-icon icon=\"check\" *ngIf=\"checked()\"></ng-doc-icon>\n\t</div>\n\t<div class=\"ng-doc-checkbox-content\">\n\t\t<span class=\"ng-doc-checkbox-icons\">\n\t\t\t<ng-content select=\"ng-doc-icon\"></ng-content>\n\t\t</span>\n\t\t<div class=\"ng-doc-checkbox-text\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</label>\n", styles: [":host{display:inline-flex;align-items:flex-start;flex-direction:column;font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight)}:host:not(:last-of-type){margin-bottom:var(--ng-doc-list-element-vertical-space);margin-right:var(--ng-doc-list-element-horizontal-space)}:host:hover:not([data-checked=true]) .ng-doc-checkbox{border:var(--ng-doc-checkbox-border-hover)}:host:not([data-disabled=true]) .ng-doc-checkbox-wrapper{cursor:pointer}:host[data-checked=true] .ng-doc-checkbox{background-color:var(--ng-doc-checkbox-color);--ng-doc-checkbox-border: var(--ng-doc-checkbox-color);--ng-doc-checkbox-border-hover: var(--ng-doc-checkbox-color);--ng-doc-icon-color: var(--ng-doc-checkbox-color-text)}input{position:absolute;bottom:0;left:50%;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;outline:0}.ng-doc-checkbox-wrapper{display:flex}.ng-doc-checkbox{position:relative;display:flex;align-items:center;justify-content:center;width:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);border:var(--ng-doc-checkbox-border);flex:0 0 calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);background-color:var(--ng-doc-base-0);transition:background-color var(--ng-doc-transition);box-sizing:border-box;border-radius:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-content{display:flex;align-items:flex-start}.ng-doc-checkbox-icons{display:flex;margin-left:var(--ng-doc-base-gutter);margin-top:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-icons:empty{display:none}.ng-doc-checkbox-text{margin-left:var(--ng-doc-base-gutter);line-height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-text:empty{display:none}\n"] }]
        }], ctorParameters: () => [], propDecorators: { color: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-lu-color']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocCheckboxComponent };
//# sourceMappingURL=ng-doc-ui-kit-components-checkbox.mjs.map
