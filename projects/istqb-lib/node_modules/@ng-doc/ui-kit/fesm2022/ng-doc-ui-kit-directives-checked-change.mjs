import * as i0 from '@angular/core';
import { EventEmitter, Directive, Input, Output, HostListener } from '@angular/core';

class NgDocCheckedChangeDirective {
    set ngDocChecked(checked) {
        this.updateProperty('checked', checked || false);
        this.updateProperty('indeterminate', checked === null);
    }
    constructor(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.ngDocCheckedChange = new EventEmitter();
        this.updateProperty('checked', false);
    }
    onChange({ checked }) {
        this.updateProperty('indeterminate', false);
        this.ngDocCheckedChange.emit(checked);
    }
    updateProperty(property, value) {
        this.renderer.setProperty(this.element.nativeElement, property, value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckedChangeDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocCheckedChangeDirective, isStandalone: true, selector: "input[ngDocChecked], input[ngDocCheckedChange]", inputs: { ngDocChecked: "ngDocChecked" }, outputs: { ngDocCheckedChange: "ngDocCheckedChange" }, host: { listeners: { "change": "onChange($event.target)" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckedChangeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[ngDocChecked], input[ngDocCheckedChange]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }], propDecorators: { ngDocChecked: [{
                type: Input
            }], ngDocCheckedChange: [{
                type: Output
            }], onChange: [{
                type: HostListener,
                args: ['change', ['$event.target']]
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocCheckedChangeDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-checked-change.mjs.map
