import { trigger, state, style, transition, animate } from '@angular/animations';
import { NgIf } from '@angular/common';
import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Input, HostBinding, Output } from '@angular/core';
import * as i1 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

class NgDocSidenavComponent {
    constructor() {
        /**
         * Content of the sidenav.
         */
        this.sidebar = '';
        /**
         * Align of the sidenav.
         */
        this.align = 'left';
        /**
         * Indicates whether the sidenav is over the page content or not.
         * Which means that the sidenav is not part of the page content.
         */
        this.over = false;
        /**
         * Indicates whether the sidenav is opened or not.
         * This is used to trigger the animation.
         */
        this.opened = true;
        /**
         * Indicates whether the sidenav has a backdrop or not.
         */
        this.hasBackdrop = true;
        this.openedChange = new EventEmitter();
        this.closeEvent = new EventEmitter();
        this.beforeOpen = new EventEmitter();
        this.beforeClose = new EventEmitter();
        this.afterOpen = new EventEmitter();
        this.afterClose = new EventEmitter();
    }
    get backdrop() {
        return this.over && this.opened && this.hasBackdrop;
    }
    animationStart(event) {
        !!event.toState ? this.beforeOpen.emit() : this.beforeClose.emit();
    }
    animationDone(event) {
        !!event.toState ? this.afterOpen.emit() : this.afterClose.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSidenavComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSidenavComponent, isStandalone: true, selector: "ng-doc-sidenav", inputs: { sidebar: "sidebar", align: "align", over: "over", opened: "opened", hasBackdrop: "hasBackdrop" }, outputs: { openedChange: "openedChange", closeEvent: "closeEvent", beforeOpen: "beforeOpen", beforeClose: "beforeClose", afterOpen: "afterOpen", afterClose: "afterClose" }, host: { properties: { "attr.data-ng-doc-align": "this.align", "attr.data-ng-doc-over": "this.over", "attr.data-ng-doc-opened": "this.opened" } }, ngImport: i0, template: "<div class=\"ng-doc-sidenav-wrapper\">\n\t<div\n\t\tclass=\"ng-doc-sidenav\"\n\t\t[@sidenavAnimation]=\"opened ? align : false\"\n\t\t(@sidenavAnimation.start)=\"animationStart($event)\"\n\t\t(@sidenavAnimation.done)=\"animationDone($event)\">\n\t\t<ng-container *polymorpheusOutlet=\"sidebar\"></ng-container>\n\t</div>\n\t<div class=\"ng-doc-sidenav-content\" [@sidenavContentAnimation]=\"!over ? opened : false\">\n\t\t<div class=\"ng-doc-backdrop\" @backdropFade *ngIf=\"backdrop\" (click)=\"closeEvent.emit()\"></div>\n\t\t<ng-content></ng-content>\n\t</div>\n</div>\n", styles: [":host{width:100%}:host[data-ng-doc-align=right] .ng-doc-sidenav-wrapper{flex-direction:row-reverse}:host[data-ng-doc-over=true] .ng-doc-sidenav-content{min-width:100%}:host[data-ng-doc-over=true][data-ng-doc-align=left] .ng-doc-sidenav{--ng-doc-sidebar-shadow: var(--ng-doc-shadow-color) -5px 5px 20px -5px}:host[data-ng-doc-over=true][data-ng-doc-align=right] .ng-doc-sidenav{--ng-doc-sidebar-shadow: var(--ng-doc-shadow-color) 0px 5px 20px -5px}:host .ng-doc-sidenav-wrapper{position:relative;display:flex;width:100%}:host .ng-doc-sidenav{position:fixed;top:var(--ng-doc-sidenav-top, 0);width:var(--ng-doc-sidenav-width);flex-shrink:0;z-index:5;transition:box-shadow var(--ng-doc-transition)}:host .ng-doc-sidenav-content{width:100%;padding:var(--ng-doc-sidenav-content-padding)}:host .ng-doc-backdrop{position:fixed!important;left:0;top:0;width:100%;height:100%;z-index:1}:host .ng-doc-backdrop:not(nothing){-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px)}:host .ng-doc-backdrop:not(nothing){position:relative}:host .ng-doc-backdrop:not(nothing):before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:#0003;opacity:.6;border-radius:inherit;overflow:hidden;pointer-events:none}@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)){:host .ng-doc-backdrop{background-color:#0003}}:host .ng-doc-backdropnothing{background-color:#0003}\n"], dependencies: [{ kind: "ngmodule", type: PolymorpheusModule }, { kind: "directive", type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [
            trigger('sidenavAnimation', [
                state('false', style({ display: 'none' })),
                transition('left => false', [
                    style({ transform: 'translateX(0)', opacity: 1 }),
                    animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                        transform: 'translateX(-100%)',
                        opacity: 0,
                    })),
                ]),
                transition('false => left', [
                    style({ transform: 'translateX(-100%)', opacity: 0, display: 'block' }),
                    animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                        transform: 'translateX(0)',
                        opacity: 1,
                    })),
                ]),
                transition('right => false', [
                    style({ transform: 'translateX(0)', opacity: 1 }),
                    animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                        transform: 'translateX(100%)',
                        opacity: 0,
                    })),
                ]),
                transition('false => right', [
                    style({ transform: 'translateX(100%)', opacity: 0, display: 'block' }),
                    animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                        transform: 'translateX(0)',
                        opacity: 1,
                    })),
                ]),
            ]),
            trigger('sidenavContentAnimation', [
                state('true', style({
                    'margin-left': 'var(--ng-doc-sidenav-width)',
                    width: 'calc(100% - var(--ng-doc-sidenav-width))',
                })),
                state('false', style({ 'margin-left': '0', width: '100%' })),
                transition('true => false', animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
                transition('false => true', animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
            ]),
            trigger('backdropFade', [
                transition(':enter', [
                    style({ opacity: 0 }),
                    animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ opacity: 1 })),
                ]),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSidenavComponent, decorators: [{
            type: Component,
            args: [{ animations: [
                        trigger('sidenavAnimation', [
                            state('false', style({ display: 'none' })),
                            transition('left => false', [
                                style({ transform: 'translateX(0)', opacity: 1 }),
                                animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                                    transform: 'translateX(-100%)',
                                    opacity: 0,
                                })),
                            ]),
                            transition('false => left', [
                                style({ transform: 'translateX(-100%)', opacity: 0, display: 'block' }),
                                animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                                    transform: 'translateX(0)',
                                    opacity: 1,
                                })),
                            ]),
                            transition('right => false', [
                                style({ transform: 'translateX(0)', opacity: 1 }),
                                animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                                    transform: 'translateX(100%)',
                                    opacity: 0,
                                })),
                            ]),
                            transition('false => right', [
                                style({ transform: 'translateX(100%)', opacity: 0, display: 'block' }),
                                animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({
                                    transform: 'translateX(0)',
                                    opacity: 1,
                                })),
                            ]),
                        ]),
                        trigger('sidenavContentAnimation', [
                            state('true', style({
                                'margin-left': 'var(--ng-doc-sidenav-width)',
                                width: 'calc(100% - var(--ng-doc-sidenav-width))',
                            })),
                            state('false', style({ 'margin-left': '0', width: '100%' })),
                            transition('true => false', animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
                            transition('false => true', animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
                        ]),
                        trigger('backdropFade', [
                            transition(':enter', [
                                style({ opacity: 0 }),
                                animate('220ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ opacity: 1 })),
                            ]),
                        ]),
                    ], selector: 'ng-doc-sidenav', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [PolymorpheusModule, NgIf], template: "<div class=\"ng-doc-sidenav-wrapper\">\n\t<div\n\t\tclass=\"ng-doc-sidenav\"\n\t\t[@sidenavAnimation]=\"opened ? align : false\"\n\t\t(@sidenavAnimation.start)=\"animationStart($event)\"\n\t\t(@sidenavAnimation.done)=\"animationDone($event)\">\n\t\t<ng-container *polymorpheusOutlet=\"sidebar\"></ng-container>\n\t</div>\n\t<div class=\"ng-doc-sidenav-content\" [@sidenavContentAnimation]=\"!over ? opened : false\">\n\t\t<div class=\"ng-doc-backdrop\" @backdropFade *ngIf=\"backdrop\" (click)=\"closeEvent.emit()\"></div>\n\t\t<ng-content></ng-content>\n\t</div>\n</div>\n", styles: [":host{width:100%}:host[data-ng-doc-align=right] .ng-doc-sidenav-wrapper{flex-direction:row-reverse}:host[data-ng-doc-over=true] .ng-doc-sidenav-content{min-width:100%}:host[data-ng-doc-over=true][data-ng-doc-align=left] .ng-doc-sidenav{--ng-doc-sidebar-shadow: var(--ng-doc-shadow-color) -5px 5px 20px -5px}:host[data-ng-doc-over=true][data-ng-doc-align=right] .ng-doc-sidenav{--ng-doc-sidebar-shadow: var(--ng-doc-shadow-color) 0px 5px 20px -5px}:host .ng-doc-sidenav-wrapper{position:relative;display:flex;width:100%}:host .ng-doc-sidenav{position:fixed;top:var(--ng-doc-sidenav-top, 0);width:var(--ng-doc-sidenav-width);flex-shrink:0;z-index:5;transition:box-shadow var(--ng-doc-transition)}:host .ng-doc-sidenav-content{width:100%;padding:var(--ng-doc-sidenav-content-padding)}:host .ng-doc-backdrop{position:fixed!important;left:0;top:0;width:100%;height:100%;z-index:1}:host .ng-doc-backdrop:not(nothing){-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px)}:host .ng-doc-backdrop:not(nothing){position:relative}:host .ng-doc-backdrop:not(nothing):before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:#0003;opacity:.6;border-radius:inherit;overflow:hidden;pointer-events:none}@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)){:host .ng-doc-backdrop{background-color:#0003}}:host .ng-doc-backdropnothing{background-color:#0003}\n"] }]
        }], propDecorators: { sidebar: [{
                type: Input
            }], align: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-align']
            }], over: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-over']
            }], opened: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-opened']
            }], hasBackdrop: [{
                type: Input
            }], openedChange: [{
                type: Output
            }], closeEvent: [{
                type: Output
            }], beforeOpen: [{
                type: Output
            }], beforeClose: [{
                type: Output
            }], afterOpen: [{
                type: Output
            }], afterClose: [{
                type: Output
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocSidenavComponent };
//# sourceMappingURL=ng-doc-ui-kit-components-sidenav.mjs.map
