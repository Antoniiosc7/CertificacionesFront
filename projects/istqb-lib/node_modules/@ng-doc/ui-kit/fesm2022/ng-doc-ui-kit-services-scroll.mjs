import * as i1 from '@angular/cdk/overlay';
import { BlockScrollStrategy } from '@angular/cdk/overlay';
import { DOCUMENT } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, Inject } from '@angular/core';

class NgDocScrollService {
    constructor(document, viewportRuler) {
        this.document = document;
        this.viewportRuler = viewportRuler;
        this.scrollStrategy = new BlockScrollStrategy(this.viewportRuler, this.document);
    }
    /**
     * Block global scroll
     */
    block() {
        this.scrollStrategy.enable();
    }
    /**
     * Unblock global scroll
     */
    unblock() {
        this.scrollStrategy.disable();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocScrollService, deps: [{ token: DOCUMENT }, { token: i1.ViewportRuler }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocScrollService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocScrollService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: () => [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i1.ViewportRuler }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocScrollService };
//# sourceMappingURL=ng-doc-ui-kit-services-scroll.mjs.map
