import { __decorate, __metadata } from 'tslib';
import * as i0 from '@angular/core';
import { ElementRef, NgZone, Directive, Input } from '@angular/core';
import { asArray } from '@ng-doc/core/helpers/as-array';
import { toElement } from '@ng-doc/ui-kit/helpers';
import { ngDocZoneDetach } from '@ng-doc/ui-kit/observables';
import { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';
import { merge, fromEvent } from 'rxjs';

let NgDocEventSwitcherDirective = class NgDocEventSwitcherDirective {
    constructor(elementRef, ngZone) {
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.switchTo = null;
        this.events = [];
    }
    ngOnInit() {
        merge(...asArray(this.events).map((eventName) => fromEvent(this.elementRef.nativeElement, eventName)))
            .pipe(ngDocZoneDetach(this.ngZone), untilDestroyed(this))
            .subscribe((event) => {
            if (this.switchTo && !event.defaultPrevented && event.bubbles) {
                event.stopPropagation();
                this.makeEvent(event, toElement(this.switchTo));
            }
        });
    }
    makeEvent(from, target) {
        const eventConstructor = from.constructor;
        target.dispatchEvent(new eventConstructor(from.type, from));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocEventSwitcherDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocEventSwitcherDirective, isStandalone: true, selector: "[ngDocEventSwitcher]", inputs: { switchTo: ["ngDocEventSwitcher", "switchTo"], events: "events" }, ngImport: i0 }); }
};
NgDocEventSwitcherDirective = __decorate([
    UntilDestroy(),
    __metadata("design:paramtypes", [ElementRef, NgZone])
], NgDocEventSwitcherDirective);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocEventSwitcherDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocEventSwitcher]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { switchTo: [{
                type: Input,
                args: ['ngDocEventSwitcher']
            }], events: [{
                type: Input
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocEventSwitcherDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-event-switcher.mjs.map
