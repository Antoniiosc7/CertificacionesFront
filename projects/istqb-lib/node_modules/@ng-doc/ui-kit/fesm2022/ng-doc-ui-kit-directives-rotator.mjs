import * as i0 from '@angular/core';
import { Directive, Input } from '@angular/core';

/** Directive rotates host with transition */
class NgDocRotatorDirective {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        /** Rotator state */
        this.rotated = false;
        /** Start position angle */
        this.from = 0;
        /** End position anle */
        this.to = 90;
    }
    ngOnChanges({ rotated, to }) {
        if (rotated) {
            this.rotate(this.rotated ? this.to : this.from, true);
        }
    }
    ngOnInit() {
        this.rotate(this.rotated ? this.to : this.from);
    }
    rotate(degree, animated) {
        if (animated) {
            this.renderer.setStyle(this.elementRef.nativeElement, `transition`, `var(--ng-doc-transition)`);
        }
        this.renderer.setStyle(this.elementRef.nativeElement, `transform`, `rotateZ(${degree}deg`);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocRotatorDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocRotatorDirective, isStandalone: true, selector: "[ngDocRotator]", inputs: { rotated: ["ngDocRotator", "rotated"], from: "from", to: "to" }, usesOnChanges: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocRotatorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocRotator]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }], propDecorators: { rotated: [{
                type: Input,
                args: ['ngDocRotator']
            }], from: [{
                type: Input
            }], to: [{
                type: Input
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocRotatorDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-rotator.mjs.map
