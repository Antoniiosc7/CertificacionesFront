import { __decorate, __metadata } from 'tslib';
import { NgIf, NgFor } from '@angular/common';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { asArray } from '@ng-doc/core/helpers/as-array';
import { NgDocListComponent } from '@ng-doc/ui-kit/components/list';
import { NgDocOptionComponent } from '@ng-doc/ui-kit/components/option';
import { NgDocTextComponent } from '@ng-doc/ui-kit/components/text';
import { NG_DOC_DEFAULT_STRINGIFY, NG_DOC_ALWAYS_FALSE_HANDLER, NG_DOC_DEFAULT_HANDLER } from '@ng-doc/ui-kit/constants';
import { ngDocMakePure } from '@ng-doc/ui-kit/decorators';
import * as i1 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

class NgDocDataListComponent {
    constructor() {
        this.autofocus = true;
        this.items = [];
        this.itemContent = ({ $implicit, }) => NG_DOC_DEFAULT_STRINGIFY($implicit);
        this.emptyContent = '';
        this.itemDisabledFn = NG_DOC_ALWAYS_FALSE_HANDLER;
        this.defineValueFn = NG_DOC_DEFAULT_HANDLER;
        this.trackByFn = (_index, item) => item;
    }
    getContext($implicit) {
        return { $implicit };
    }
    getItems() {
        return asArray(this.items);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDataListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocDataListComponent, isStandalone: true, selector: "ng-doc-data-list", inputs: { autofocus: "autofocus", items: "items", itemContent: "itemContent", emptyContent: "emptyContent", itemDisabledFn: "itemDisabledFn", defineValueFn: "defineValueFn", trackByFn: "trackByFn" }, ngImport: i0, template: "<ng-doc-list>\n\t<ng-container *ngIf=\"items && items.length; else emptyTemplate\">\n\t\t<ng-doc-option\n\t\t\t*ngFor=\"let item of items; trackBy: trackByFn\"\n\t\t\t[value]=\"defineValueFn(item)\"\n\t\t\t[disabled]=\"itemDisabledFn(item)\">\n\t\t\t<ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item)\">\n\t\t\t\t{{ text }}\n\t\t\t</ng-container>\n\t\t</ng-doc-option>\n\t</ng-container>\n\n\t<ng-template #emptyTemplate>\n\t\t<div class=\"ng-doc-empty-message\" ng-doc-text>\n\t\t\t<ng-container *ngIf=\"emptyContent\">\n\t\t\t\t<ng-container *polymorpheusOutlet=\"emptyContent as text\"> {{ text }} </ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</ng-doc-list>\n", styles: [":host{display:block;height:100%;overflow:auto;max-height:var(--ng-doc-list-size)}.ng-doc-empty-message{padding:var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2);--ng-doc-font-size: 13px;--ng-doc-line-height: 22px}ng-doc-checkbox{pointer-events:none}\n"], dependencies: [{ kind: "component", type: NgDocListComponent, selector: "ng-doc-list" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocOptionComponent, selector: "ng-doc-option" }, { kind: "ngmodule", type: PolymorpheusModule }, { kind: "directive", type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: NgDocTextComponent, selector: "[ng-doc-text]", inputs: ["size", "color", "align", "absoluteContent"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    ngDocMakePure,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Object)
], NgDocDataListComponent.prototype, "getContext", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDataListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-data-list', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocListComponent,
                        NgIf,
                        NgFor,
                        NgDocOptionComponent,
                        PolymorpheusModule,
                        NgDocTextComponent,
                    ], template: "<ng-doc-list>\n\t<ng-container *ngIf=\"items && items.length; else emptyTemplate\">\n\t\t<ng-doc-option\n\t\t\t*ngFor=\"let item of items; trackBy: trackByFn\"\n\t\t\t[value]=\"defineValueFn(item)\"\n\t\t\t[disabled]=\"itemDisabledFn(item)\">\n\t\t\t<ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item)\">\n\t\t\t\t{{ text }}\n\t\t\t</ng-container>\n\t\t</ng-doc-option>\n\t</ng-container>\n\n\t<ng-template #emptyTemplate>\n\t\t<div class=\"ng-doc-empty-message\" ng-doc-text>\n\t\t\t<ng-container *ngIf=\"emptyContent\">\n\t\t\t\t<ng-container *polymorpheusOutlet=\"emptyContent as text\"> {{ text }} </ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</ng-doc-list>\n", styles: [":host{display:block;height:100%;overflow:auto;max-height:var(--ng-doc-list-size)}.ng-doc-empty-message{padding:var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2);--ng-doc-font-size: 13px;--ng-doc-line-height: 22px}ng-doc-checkbox{pointer-events:none}\n"] }]
        }], propDecorators: { autofocus: [{
                type: Input
            }], items: [{
                type: Input
            }], itemContent: [{
                type: Input
            }], emptyContent: [{
                type: Input
            }], itemDisabledFn: [{
                type: Input
            }], defineValueFn: [{
                type: Input
            }], trackByFn: [{
                type: Input
            }], getContext: [] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocDataListComponent };
//# sourceMappingURL=ng-doc-ui-kit-components-data-list.mjs.map
