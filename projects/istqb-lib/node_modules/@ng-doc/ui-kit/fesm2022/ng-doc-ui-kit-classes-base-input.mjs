import * as i0 from '@angular/core';
import { inject, ElementRef, Directive, HostBinding } from '@angular/core';
import { isBrowser } from '@ng-doc/core';
import { DIControl, injectHostControl } from 'di-controls';
import { Subject } from 'rxjs';

class NgDocBaseInput extends DIControl {
    constructor(config) {
        super({
            host: injectHostControl({ optional: true }),
            ...config,
        });
        this.elementRef = inject(ElementRef);
        this.changes = new Subject();
    }
    get hostClasses() {
        return 'ng-doc-input';
    }
    get placeholder() {
        return this.elementRef.nativeElement.placeholder || '';
    }
    get isFocused() {
        return isBrowser ? document.activeElement === this.elementRef.nativeElement : false;
    }
    get isReadonly() {
        return this.elementRef.nativeElement.readOnly;
    }
    get value() {
        return this.elementRef.nativeElement.value;
    }
    focus() {
        this.elementRef.nativeElement.focus();
    }
    blink() {
        this.renderer.removeClass(this.elementRef.nativeElement, '-blink');
        // eslint-disable-next-line @typescript-eslint/no-unused-expressions
        this.elementRef.nativeElement.offsetWidth;
        this.renderer.addClass(this.elementRef.nativeElement, '-blink');
    }
    updateModel(value) {
        super.updateModel(value);
        this.changes.next();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBaseInput, deps: "invalid", target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocBaseInput, host: { properties: { "class": "this.hostClasses" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBaseInput, decorators: [{
            type: Directive
        }], ctorParameters: () => [{ type: undefined }], propDecorators: { hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocBaseInput };
//# sourceMappingURL=ng-doc-ui-kit-classes-base-input.mjs.map
