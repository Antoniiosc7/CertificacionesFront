import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, inject, } from '@angular/core';
import { NgDocListItem } from '@ng-doc/ui-kit/classes/list-item';
import { NgDocListComponent } from '@ng-doc/ui-kit/components/list';
import { DICompareHost, DIStateControl, injectHostControl } from 'di-controls';
import * as i0 from "@angular/core";
export class NgDocOptionComponent extends DIStateControl {
    constructor() {
        super({
            host: injectHostControl({ optional: true }),
            compareHost: inject(DICompareHost, { optional: true }),
        });
        this.hovered = false;
        this.elementRef = inject(ElementRef);
        this.list = inject(NgDocListComponent, {
            optional: true,
        });
        this.list?.registerItem(this);
    }
    clickEvent() {
        this.check();
    }
    selectByUser() {
        const anchor = this.elementRef.nativeElement.querySelector('a');
        anchor ? anchor.click() : this.check();
    }
    setActiveStyles() {
        this.hovered = true;
        this.changeDetectorRef.markForCheck();
    }
    setInactiveStyles() {
        this.hovered = false;
        this.changeDetectorRef.markForCheck();
    }
    ngOnDestroy() {
        this.list?.unregisterItem(this);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocOptionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocOptionComponent, isStandalone: true, selector: "ng-doc-option", host: { listeners: { "click": "clickEvent()" }, properties: { "attr.data-ng-doc-hover": "this.hovered" } }, providers: [
            {
                provide: NgDocListItem,
                useExisting: NgDocOptionComponent,
            },
        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);display:block;padding:var(--ng-doc-option-padding, var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2))}:host:hover:not([data-disabled=true]),:host[data-ng-doc-hover=true]:not([data-disabled=true]){background:var(--ng-doc-hover-background);cursor:pointer}:host[data-checked=true]{background-color:rgba(var(--ng-doc-primary-rgb),.2)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocOptionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-option', template: '<ng-content></ng-content>', providers: [
                        {
                            provide: NgDocListItem,
                            useExisting: NgDocOptionComponent,
                        },
                    ], changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [":host{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);display:block;padding:var(--ng-doc-option-padding, var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2))}:host:hover:not([data-disabled=true]),:host[data-ng-doc-hover=true]:not([data-disabled=true]){background:var(--ng-doc-hover-background);cursor:pointer}:host[data-checked=true]{background-color:rgba(var(--ng-doc-primary-rgb),.2)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { hovered: [{
                type: HostBinding,
                args: ['attr.data-ng-doc-hover']
            }], clickEvent: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkta2l0L2NvbXBvbmVudHMvb3B0aW9uL29wdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxZQUFZLEVBQ1osTUFBTSxHQUVOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7QUFlL0UsTUFBTSxPQUFPLG9CQUF3QixTQUFRLGNBQWlCO0lBUzdEO1FBQ0MsS0FBSyxDQUFDO1lBQ0wsSUFBSSxFQUFFLGlCQUFpQixDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO1lBQzNDLFdBQVcsRUFBRSxNQUFNLENBQUMsYUFBYSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO1NBQ3RELENBQUMsQ0FBQztRQVhNLFlBQU8sR0FBWSxLQUFLLENBQUM7UUFFakIsZUFBVSxHQUE0QixNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEQsU0FBSSxHQUE4QixNQUFNLENBQUMsa0JBQWtCLEVBQUU7WUFDL0UsUUFBUSxFQUFFLElBQUk7U0FDZCxDQUFDLENBQUM7UUFRRixJQUFJLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBR0QsVUFBVTtRQUNULElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFRCxZQUFZO1FBQ1gsTUFBTSxNQUFNLEdBQTZCLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUxRixNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxlQUFlO1FBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxpQkFBaUI7UUFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxXQUFXO1FBQ1YsSUFBSSxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQzs4R0F6Q1csb0JBQW9CO2tHQUFwQixvQkFBb0Isd0tBVHJCO1lBQ1Y7Z0JBQ0MsT0FBTyxFQUFFLGFBQWE7Z0JBQ3RCLFdBQVcsRUFBRSxvQkFBb0I7YUFDakM7U0FDRCxpREFQUywyQkFBMkI7OzJGQVd6QixvQkFBb0I7a0JBYmhDLFNBQVM7K0JBQ0MsZUFBZSxZQUNmLDJCQUEyQixhQUUxQjt3QkFDVjs0QkFDQyxPQUFPLEVBQUUsYUFBYTs0QkFDdEIsV0FBVyxzQkFBc0I7eUJBQ2pDO3FCQUNELG1CQUNnQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUk7d0RBSU4sT0FBTztzQkFEaEIsV0FBVzt1QkFBQyx3QkFBd0I7Z0JBa0JyQyxVQUFVO3NCQURULFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuXHRDb21wb25lbnQsXG5cdEVsZW1lbnRSZWYsXG5cdEhvc3RCaW5kaW5nLFxuXHRIb3N0TGlzdGVuZXIsXG5cdGluamVjdCxcblx0T25EZXN0cm95LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nRG9jTGlzdEl0ZW0gfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jbGFzc2VzL2xpc3QtaXRlbSc7XG5pbXBvcnQgeyBOZ0RvY0xpc3RDb21wb25lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jb21wb25lbnRzL2xpc3QnO1xuaW1wb3J0IHsgRElDb21wYXJlSG9zdCwgRElTdGF0ZUNvbnRyb2wsIGluamVjdEhvc3RDb250cm9sIH0gZnJvbSAnZGktY29udHJvbHMnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICduZy1kb2Mtb3B0aW9uJyxcblx0dGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+Jyxcblx0c3R5bGVVcmxzOiBbJy4vb3B0aW9uLmNvbXBvbmVudC5zY3NzJ10sXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IE5nRG9jTGlzdEl0ZW0sXG5cdFx0XHR1c2VFeGlzdGluZzogTmdEb2NPcHRpb25Db21wb25lbnQsXG5cdFx0fSxcblx0XSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jT3B0aW9uQ29tcG9uZW50PFQ+IGV4dGVuZHMgRElTdGF0ZUNvbnRyb2w8VD4gaW1wbGVtZW50cyBOZ0RvY0xpc3RJdGVtLCBPbkRlc3Ryb3kge1xuXHRASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1uZy1kb2MtaG92ZXInKVxuXHRwcm90ZWN0ZWQgaG92ZXJlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG5cdG92ZXJyaWRlIHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+ID0gaW5qZWN0KEVsZW1lbnRSZWYpO1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgbGlzdDogTmdEb2NMaXN0Q29tcG9uZW50IHwgbnVsbCA9IGluamVjdChOZ0RvY0xpc3RDb21wb25lbnQsIHtcblx0XHRvcHRpb25hbDogdHJ1ZSxcblx0fSk7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoe1xuXHRcdFx0aG9zdDogaW5qZWN0SG9zdENvbnRyb2woeyBvcHRpb25hbDogdHJ1ZSB9KSxcblx0XHRcdGNvbXBhcmVIb3N0OiBpbmplY3QoRElDb21wYXJlSG9zdCwgeyBvcHRpb25hbDogdHJ1ZSB9KSxcblx0XHR9KTtcblxuXHRcdHRoaXMubGlzdD8ucmVnaXN0ZXJJdGVtKHRoaXMpO1xuXHR9XG5cblx0QEhvc3RMaXN0ZW5lcignY2xpY2snKVxuXHRjbGlja0V2ZW50KCk6IHZvaWQge1xuXHRcdHRoaXMuY2hlY2soKTtcblx0fVxuXG5cdHNlbGVjdEJ5VXNlcigpOiB2b2lkIHtcblx0XHRjb25zdCBhbmNob3I6IEhUTUxBbmNob3JFbGVtZW50IHwgbnVsbCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2EnKTtcblxuXHRcdGFuY2hvciA/IGFuY2hvci5jbGljaygpIDogdGhpcy5jaGVjaygpO1xuXHR9XG5cblx0c2V0QWN0aXZlU3R5bGVzKCk6IHZvaWQge1xuXHRcdHRoaXMuaG92ZXJlZCA9IHRydWU7XG5cdFx0dGhpcy5jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcblx0fVxuXG5cdHNldEluYWN0aXZlU3R5bGVzKCk6IHZvaWQge1xuXHRcdHRoaXMuaG92ZXJlZCA9IGZhbHNlO1xuXHRcdHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG5cdH1cblxuXHRuZ09uRGVzdHJveSgpOiB2b2lkIHtcblx0XHR0aGlzLmxpc3Q/LnVucmVnaXN0ZXJJdGVtKHRoaXMpO1xuXHR9XG59XG4iXX0=