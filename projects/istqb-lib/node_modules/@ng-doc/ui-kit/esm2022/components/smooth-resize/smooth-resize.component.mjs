import { animate, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, } from '@angular/core';
import * as i0 from "@angular/core";
export class NgDocSmoothResizeComponent {
    constructor(element) {
        this.element = element;
        this.animateOpacity = true;
        this.resizeAnimation = {
            value: 0,
            params: { startHeight: 0, startWidth: 0 },
        };
    }
    ngOnChanges() {
        this.resizeAnimation = {
            value: this.trigger,
            params: {
                startHeight: this.element.nativeElement.clientHeight || 0,
                startWidth: this.element.nativeElement.clientWidth || 0,
            },
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSmoothResizeComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSmoothResizeComponent, isStandalone: true, selector: "ng-doc-smooth-resize", inputs: { trigger: "trigger", animateOpacity: "animateOpacity" }, host: { properties: { "@resizeAnimation": "this.resizeAnimation" } }, usesOnChanges: true, ngImport: i0, template: ` <ng-content></ng-content>`, isInline: true, styles: [":host{display:block;overflow:hidden;height:var(--ng-doc-smooth-resize-height);max-height:var(--ng-doc-smooth-resize-max-height)}\n"], animations: [
            trigger('resizeAnimation', [
                transition('void <=> *', []),
                transition('* <=> *', [
                    style({ height: '{{startHeight}}px', width: '{{startWidth}}px' }),
                    animate('.225s ease-in-out'),
                ]),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSmoothResizeComponent, decorators: [{
            type: Component,
            args: [{ animations: [
                        trigger('resizeAnimation', [
                            transition('void <=> *', []),
                            transition('* <=> *', [
                                style({ height: '{{startHeight}}px', width: '{{startWidth}}px' }),
                                animate('.225s ease-in-out'),
                            ]),
                        ]),
                    ], selector: 'ng-doc-smooth-resize', template: ` <ng-content></ng-content>`, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [":host{display:block;overflow:hidden;height:var(--ng-doc-smooth-resize-height);max-height:var(--ng-doc-smooth-resize-max-height)}\n"] }]
        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { trigger: [{
                type: Input,
                args: [{ required: true }]
            }], animateOpacity: [{
                type: Input
            }], resizeAnimation: [{
                type: HostBinding,
                args: ['@resizeAnimation']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21vb3RoLXJlc2l6ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL3Ntb290aC1yZXNpemUvc21vb3RoLXJlc2l6ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFFLE9BQU8sRUFDTix1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsS0FBSyxHQUVMLE1BQU0sZUFBZSxDQUFDOztBQTJCdkIsTUFBTSxPQUFPLDBCQUEwQjtJQWdCdEMsWUFBNkIsT0FBZ0M7UUFBaEMsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7UUFYN0QsbUJBQWMsR0FBWSxJQUFJLENBQUM7UUFHL0Isb0JBQWUsR0FHWDtZQUNILEtBQUssRUFBRSxDQUFDO1lBQ1IsTUFBTSxFQUFFLEVBQUUsV0FBVyxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFO1NBQ3pDLENBQUM7SUFFOEQsQ0FBQztJQUVqRSxXQUFXO1FBQ1YsSUFBSSxDQUFDLGVBQWUsR0FBRztZQUN0QixLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDbkIsTUFBTSxFQUFFO2dCQUNQLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxZQUFZLElBQUksQ0FBQztnQkFDekQsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFdBQVcsSUFBSSxDQUFDO2FBQ3ZEO1NBQ0QsQ0FBQztJQUNILENBQUM7OEdBMUJXLDBCQUEwQjtrR0FBMUIsMEJBQTBCLDZPQWQ1Qiw0QkFBNEIsOEtBVjFCO1lBQ1gsT0FBTyxDQUFDLGlCQUFpQixFQUFFO2dCQUMxQixVQUFVLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQztnQkFDNUIsVUFBVSxDQUFDLFNBQVMsRUFBRTtvQkFDckIsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSxrQkFBa0IsRUFBRSxDQUFDO29CQUNqRSxPQUFPLENBQUMsbUJBQW1CLENBQUM7aUJBQzVCLENBQUM7YUFDRixDQUFDO1NBQ0Y7OzJGQWdCVywwQkFBMEI7a0JBekJ0QyxTQUFTO2lDQUNHO3dCQUNYLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTs0QkFDMUIsVUFBVSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUM7NEJBQzVCLFVBQVUsQ0FBQyxTQUFTLEVBQUU7Z0NBQ3JCLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQztnQ0FDakUsT0FBTyxDQUFDLG1CQUFtQixDQUFDOzZCQUM1QixDQUFDO3lCQUNGLENBQUM7cUJBQ0YsWUFDUyxzQkFBc0IsWUFDdEIsNEJBQTRCLG1CQVdyQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUk7K0VBSWhCLE9BQU87c0JBRE4sS0FBSzt1QkFBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUU7Z0JBSXpCLGNBQWM7c0JBRGIsS0FBSztnQkFJTixlQUFlO3NCQURkLFdBQVc7dUJBQUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW5pbWF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7XG5cdENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuXHRDb21wb25lbnQsXG5cdEVsZW1lbnRSZWYsXG5cdEhvc3RCaW5kaW5nLFxuXHRJbnB1dCxcblx0T25DaGFuZ2VzLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG5cdGFuaW1hdGlvbnM6IFtcblx0XHR0cmlnZ2VyKCdyZXNpemVBbmltYXRpb24nLCBbXG5cdFx0XHR0cmFuc2l0aW9uKCd2b2lkIDw9PiAqJywgW10pLFxuXHRcdFx0dHJhbnNpdGlvbignKiA8PT4gKicsIFtcblx0XHRcdFx0c3R5bGUoeyBoZWlnaHQ6ICd7e3N0YXJ0SGVpZ2h0fX1weCcsIHdpZHRoOiAne3tzdGFydFdpZHRofX1weCcgfSksXG5cdFx0XHRcdGFuaW1hdGUoJy4yMjVzIGVhc2UtaW4tb3V0JyksXG5cdFx0XHRdKSxcblx0XHRdKSxcblx0XSxcblx0c2VsZWN0b3I6ICduZy1kb2Mtc21vb3RoLXJlc2l6ZScsXG5cdHRlbXBsYXRlOiBgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5gLFxuXHRzdHlsZXM6IFtcblx0XHRgXG5cdFx0XHQ6aG9zdCB7XG5cdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdFx0XHRoZWlnaHQ6IHZhcigtLW5nLWRvYy1zbW9vdGgtcmVzaXplLWhlaWdodCk7XG5cdFx0XHRcdG1heC1oZWlnaHQ6IHZhcigtLW5nLWRvYy1zbW9vdGgtcmVzaXplLW1heC1oZWlnaHQpO1xuXHRcdFx0fVxuXHRcdGAsXG5cdF0sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0RvY1Ntb290aFJlc2l6ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG5cdEBJbnB1dCh7IHJlcXVpcmVkOiB0cnVlIH0pXG5cdHRyaWdnZXI6IHVua25vd247XG5cblx0QElucHV0KClcblx0YW5pbWF0ZU9wYWNpdHk6IGJvb2xlYW4gPSB0cnVlO1xuXG5cdEBIb3N0QmluZGluZygnQHJlc2l6ZUFuaW1hdGlvbicpXG5cdHJlc2l6ZUFuaW1hdGlvbj86IHtcblx0XHR2YWx1ZTogdW5rbm93bjtcblx0XHRwYXJhbXM6IHsgc3RhcnRIZWlnaHQ6IG51bWJlcjsgc3RhcnRXaWR0aDogbnVtYmVyIH07XG5cdH0gPSB7XG5cdFx0dmFsdWU6IDAsXG5cdFx0cGFyYW1zOiB7IHN0YXJ0SGVpZ2h0OiAwLCBzdGFydFdpZHRoOiAwIH0sXG5cdH07XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pikge31cblxuXHRuZ09uQ2hhbmdlcygpOiB2b2lkIHtcblx0XHR0aGlzLnJlc2l6ZUFuaW1hdGlvbiA9IHtcblx0XHRcdHZhbHVlOiB0aGlzLnRyaWdnZXIsXG5cdFx0XHRwYXJhbXM6IHtcblx0XHRcdFx0c3RhcnRIZWlnaHQ6IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LmNsaWVudEhlaWdodCB8fCAwLFxuXHRcdFx0XHRzdGFydFdpZHRoOiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aCB8fCAwLFxuXHRcdFx0fSxcblx0XHR9O1xuXHR9XG59XG4iXX0=