import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { expandCollapseAnimation, preventInitialChildAnimations } from '@ng-doc/ui-kit/animations';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
/** Component helps to expand or collapse content */
export class NgDocExpanderComponent {
    constructor() {
        /** Change expand state */
        this.expanded = false;
        /** Expander content */
        this.content = '';
        /** Closed height could be used to show preview of the content */
        this.from = 0;
    }
    toggle() {
        this.expanded = !this.expanded;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocExpanderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocExpanderComponent, isStandalone: true, selector: "ng-doc-expander", inputs: { expanded: "expanded", content: "content", from: "from" }, host: { properties: { "@preventInitialChild": "this.preventInitialChild" } }, ngImport: i0, template: "<div\n\t*ngIf=\"expanded || from\"\n\t[@expandCollapse]=\"{ value: expanded, params: { from: from + 'px', opacity: from ? 1 : 0 } }\">\n\t<ng-container *polymorpheusOutlet=\"content as text\">{{ text }}</ng-container>\n</div>\n", styles: [":host{display:block}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: PolymorpheusModule }, { kind: "directive", type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [preventInitialChildAnimations, expandCollapseAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocExpanderComponent, decorators: [{
            type: Component,
            args: [{ animations: [preventInitialChildAnimations, expandCollapseAnimation], selector: 'ng-doc-expander', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgIf, PolymorpheusModule], template: "<div\n\t*ngIf=\"expanded || from\"\n\t[@expandCollapse]=\"{ value: expanded, params: { from: from + 'px', opacity: from ? 1 : 0 } }\">\n\t<ng-container *polymorpheusOutlet=\"content as text\">{{ text }}</ng-container>\n</div>\n", styles: [":host{display:block}\n"] }]
        }], propDecorators: { expanded: [{
                type: Input
            }], content: [{
                type: Input
            }], from: [{
                type: Input
            }], preventInitialChild: [{
                type: HostBinding,
                args: ['@preventInitialChild']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1raXQvY29tcG9uZW50cy9leHBhbmRlci9leHBhbmRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL2V4cGFuZGVyL2V4cGFuZGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUNyQyxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLHVCQUF1QixFQUFFLDZCQUE2QixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFFakcsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7OztBQUU1RCxvREFBb0Q7QUFVcEQsTUFBTSxPQUFPLHNCQUFzQjtJQVRuQztRQVVDLDBCQUEwQjtRQUUxQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCLHVCQUF1QjtRQUV2QixZQUFPLEdBQWlCLEVBQUUsQ0FBQztRQUUzQixpRUFBaUU7UUFFakUsU0FBSSxHQUFXLENBQUMsQ0FBQztLQVFqQjtJQUhBLE1BQU07UUFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNoQyxDQUFDOzhHQWxCVyxzQkFBc0I7a0dBQXRCLHNCQUFzQiw2TkNoQm5DLHFPQUtBLGdGRFNXLElBQUksNEZBQUUsa0JBQWtCLDZLQU50QixDQUFDLDZCQUE2QixFQUFFLHVCQUF1QixDQUFDOzsyRkFReEQsc0JBQXNCO2tCQVRsQyxTQUFTO2lDQUNHLENBQUMsNkJBQTZCLEVBQUUsdUJBQXVCLENBQUMsWUFDMUQsaUJBQWlCLG1CQUdWLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDOzhCQUtuQyxRQUFRO3NCQURQLEtBQUs7Z0JBS04sT0FBTztzQkFETixLQUFLO2dCQUtOLElBQUk7c0JBREgsS0FBSztnQkFJTixtQkFBbUI7c0JBRGxCLFdBQVc7dUJBQUMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ0lmfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtleHBhbmRDb2xsYXBzZUFuaW1hdGlvbiwgcHJldmVudEluaXRpYWxDaGlsZEFuaW1hdGlvbnN9IGZyb20gJ0BuZy1kb2MvdWkta2l0L2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtOZ0RvY0NvbnRlbnR9IGZyb20gJ0BuZy1kb2MvdWkta2l0L3R5cGVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzTW9kdWxlfSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuXG4vKiogQ29tcG9uZW50IGhlbHBzIHRvIGV4cGFuZCBvciBjb2xsYXBzZSBjb250ZW50ICovXG5AQ29tcG9uZW50KHtcblx0YW5pbWF0aW9uczogW3ByZXZlbnRJbml0aWFsQ2hpbGRBbmltYXRpb25zLCBleHBhbmRDb2xsYXBzZUFuaW1hdGlvbl0sXG5cdHNlbGVjdG9yOiAnbmctZG9jLWV4cGFuZGVyJyxcblx0dGVtcGxhdGVVcmw6ICcuL2V4cGFuZGVyLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vZXhwYW5kZXIuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtOZ0lmLCBQb2x5bW9ycGhldXNNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0RvY0V4cGFuZGVyQ29tcG9uZW50IHtcblx0LyoqIENoYW5nZSBleHBhbmQgc3RhdGUgKi9cblx0QElucHV0KClcblx0ZXhwYW5kZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHQvKiogRXhwYW5kZXIgY29udGVudCAqL1xuXHRASW5wdXQoKVxuXHRjb250ZW50OiBOZ0RvY0NvbnRlbnQgPSAnJztcblxuXHQvKiogQ2xvc2VkIGhlaWdodCBjb3VsZCBiZSB1c2VkIHRvIHNob3cgcHJldmlldyBvZiB0aGUgY29udGVudCAqL1xuXHRASW5wdXQoKVxuXHRmcm9tOiBudW1iZXIgPSAwO1xuXG5cdEBIb3N0QmluZGluZygnQHByZXZlbnRJbml0aWFsQ2hpbGQnKVxuXHRwcmV2ZW50SW5pdGlhbENoaWxkPzogbmV2ZXI7XG5cblx0dG9nZ2xlKCk6IHZvaWQge1xuXHRcdHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcblx0fVxufVxuIiwiPGRpdlxuXHQqbmdJZj1cImV4cGFuZGVkIHx8IGZyb21cIlxuXHRbQGV4cGFuZENvbGxhcHNlXT1cInsgdmFsdWU6IGV4cGFuZGVkLCBwYXJhbXM6IHsgZnJvbTogZnJvbSArICdweCcsIG9wYWNpdHk6IGZyb20gPyAxIDogMCB9IH1cIj5cblx0PG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiY29udGVudCBhcyB0ZXh0XCI+e3sgdGV4dCB9fTwvbmctY29udGFpbmVyPlxuPC9kaXY+XG4iXX0=