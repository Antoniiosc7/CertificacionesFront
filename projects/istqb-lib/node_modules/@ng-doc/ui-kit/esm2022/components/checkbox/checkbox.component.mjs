import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, inject, Input } from '@angular/core';
import { NgDocIconComponent } from '@ng-doc/ui-kit/components/icon';
import { NgDocCheckedChangeDirective } from '@ng-doc/ui-kit/directives/checked-change';
import { NgDocFocusableDirective } from '@ng-doc/ui-kit/directives/focusable';
import { DICompareHost, DIStateControl, injectHostControl } from 'di-controls';
import * as i0 from "@angular/core";
export class NgDocCheckboxComponent extends DIStateControl {
    constructor() {
        super({
            host: injectHostControl({ optional: true }),
            compareHost: inject(DICompareHost, { optional: true }),
        });
        this.color = 'primary';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocCheckboxComponent, isStandalone: true, selector: "ng-doc-checkbox", inputs: { color: "color" }, host: { properties: { "attr.data-lu-color": "this.color" } }, usesInheritance: true, ngImport: i0, template: "<label class=\"ng-doc-checkbox-wrapper\">\n\t<div class=\"ng-doc-checkbox\">\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[ngDocChecked]=\"checked()\"\n\t\t\t(ngDocCheckedChange)=\"toggle(); touch()\"\n\t\t\t(blur)=\"touch()\"\n\t\t\t[ngDocFocusable]=\"false\" />\n\t\t<ng-doc-icon icon=\"minus\" *ngIf=\"isIntermediate\"></ng-doc-icon>\n\t\t<ng-doc-icon icon=\"check\" *ngIf=\"checked()\"></ng-doc-icon>\n\t</div>\n\t<div class=\"ng-doc-checkbox-content\">\n\t\t<span class=\"ng-doc-checkbox-icons\">\n\t\t\t<ng-content select=\"ng-doc-icon\"></ng-content>\n\t\t</span>\n\t\t<div class=\"ng-doc-checkbox-text\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</label>\n", styles: [":host{display:inline-flex;align-items:flex-start;flex-direction:column;font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight)}:host:not(:last-of-type){margin-bottom:var(--ng-doc-list-element-vertical-space);margin-right:var(--ng-doc-list-element-horizontal-space)}:host:hover:not([data-checked=true]) .ng-doc-checkbox{border:var(--ng-doc-checkbox-border-hover)}:host:not([data-disabled=true]) .ng-doc-checkbox-wrapper{cursor:pointer}:host[data-checked=true] .ng-doc-checkbox{background-color:var(--ng-doc-checkbox-color);--ng-doc-checkbox-border: var(--ng-doc-checkbox-color);--ng-doc-checkbox-border-hover: var(--ng-doc-checkbox-color);--ng-doc-icon-color: var(--ng-doc-checkbox-color-text)}input{position:absolute;bottom:0;left:50%;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;outline:0}.ng-doc-checkbox-wrapper{display:flex}.ng-doc-checkbox{position:relative;display:flex;align-items:center;justify-content:center;width:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);border:var(--ng-doc-checkbox-border);flex:0 0 calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);background-color:var(--ng-doc-base-0);transition:background-color var(--ng-doc-transition);box-sizing:border-box;border-radius:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-content{display:flex;align-items:flex-start}.ng-doc-checkbox-icons{display:flex;margin-left:var(--ng-doc-base-gutter);margin-top:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-icons:empty{display:none}.ng-doc-checkbox-text{margin-left:var(--ng-doc-base-gutter);line-height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-text:empty{display:none}\n"], dependencies: [{ kind: "directive", type: NgDocCheckedChangeDirective, selector: "input[ngDocChecked], input[ngDocCheckedChange]", inputs: ["ngDocChecked"], outputs: ["ngDocCheckedChange"] }, { kind: "directive", type: NgDocFocusableDirective, selector: "[ngDocFocusable]", inputs: ["ngDocFocusable"], exportAs: ["ngDocFocusable"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-checkbox', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgDocCheckedChangeDirective, NgDocFocusableDirective, NgIf, NgDocIconComponent], template: "<label class=\"ng-doc-checkbox-wrapper\">\n\t<div class=\"ng-doc-checkbox\">\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[ngDocChecked]=\"checked()\"\n\t\t\t(ngDocCheckedChange)=\"toggle(); touch()\"\n\t\t\t(blur)=\"touch()\"\n\t\t\t[ngDocFocusable]=\"false\" />\n\t\t<ng-doc-icon icon=\"minus\" *ngIf=\"isIntermediate\"></ng-doc-icon>\n\t\t<ng-doc-icon icon=\"check\" *ngIf=\"checked()\"></ng-doc-icon>\n\t</div>\n\t<div class=\"ng-doc-checkbox-content\">\n\t\t<span class=\"ng-doc-checkbox-icons\">\n\t\t\t<ng-content select=\"ng-doc-icon\"></ng-content>\n\t\t</span>\n\t\t<div class=\"ng-doc-checkbox-text\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</label>\n", styles: [":host{display:inline-flex;align-items:flex-start;flex-direction:column;font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight)}:host:not(:last-of-type){margin-bottom:var(--ng-doc-list-element-vertical-space);margin-right:var(--ng-doc-list-element-horizontal-space)}:host:hover:not([data-checked=true]) .ng-doc-checkbox{border:var(--ng-doc-checkbox-border-hover)}:host:not([data-disabled=true]) .ng-doc-checkbox-wrapper{cursor:pointer}:host[data-checked=true] .ng-doc-checkbox{background-color:var(--ng-doc-checkbox-color);--ng-doc-checkbox-border: var(--ng-doc-checkbox-color);--ng-doc-checkbox-border-hover: var(--ng-doc-checkbox-color);--ng-doc-icon-color: var(--ng-doc-checkbox-color-text)}input{position:absolute;bottom:0;left:50%;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;outline:0}.ng-doc-checkbox-wrapper{display:flex}.ng-doc-checkbox{position:relative;display:flex;align-items:center;justify-content:center;width:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);border:var(--ng-doc-checkbox-border);flex:0 0 calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2);background-color:var(--ng-doc-base-0);transition:background-color var(--ng-doc-transition);box-sizing:border-box;border-radius:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-content{display:flex;align-items:flex-start}.ng-doc-checkbox-icons{display:flex;margin-left:var(--ng-doc-base-gutter);margin-top:calc(var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-icons:empty{display:none}.ng-doc-checkbox-text{margin-left:var(--ng-doc-base-gutter);line-height:calc(var(--ng-doc-base-gutter) * 2 + var(--ng-doc-base-gutter) / 2)}.ng-doc-checkbox-text:empty{display:none}\n"] }]
        }], ctorParameters: () => [], propDecorators: { color: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-lu-color']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1raXQvY29tcG9uZW50cy9jaGVja2JveC9jaGVja2JveC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRTlFLE9BQU8sRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sYUFBYSxDQUFDOztBQVUvRSxNQUFNLE9BQU8sc0JBQTBCLFNBQVEsY0FBaUI7SUFLL0Q7UUFDQyxLQUFLLENBQUM7WUFDTCxJQUFJLEVBQUUsaUJBQWlCLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7WUFDM0MsV0FBVyxFQUFFLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7U0FDdEQsQ0FBQyxDQUFDO1FBTkosVUFBSyxHQUFlLFNBQVMsQ0FBQztJQU85QixDQUFDOzhHQVZXLHNCQUFzQjtrR0FBdEIsc0JBQXNCLDRMQ2hCbkMsdXNCQXFCQSwyOEREUFcsMkJBQTJCLHNKQUFFLHVCQUF1Qix1SEFBRSxJQUFJLDZGQUFFLGtCQUFrQjs7MkZBRTVFLHNCQUFzQjtrQkFSbEMsU0FBUzsrQkFDQyxpQkFBaUIsbUJBR1YsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1AsQ0FBQywyQkFBMkIsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLEVBQUUsa0JBQWtCLENBQUM7d0RBS3pGLEtBQUs7c0JBRkosS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBpbmplY3QsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0RvY0ljb25Db21wb25lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jb21wb25lbnRzL2ljb24nO1xuaW1wb3J0IHsgTmdEb2NDaGVja2VkQ2hhbmdlRGlyZWN0aXZlIH0gZnJvbSAnQG5nLWRvYy91aS1raXQvZGlyZWN0aXZlcy9jaGVja2VkLWNoYW5nZSc7XG5pbXBvcnQgeyBOZ0RvY0ZvY3VzYWJsZURpcmVjdGl2ZSB9IGZyb20gJ0BuZy1kb2MvdWkta2l0L2RpcmVjdGl2ZXMvZm9jdXNhYmxlJztcbmltcG9ydCB7IE5nRG9jQ29sb3IgfSBmcm9tICdAbmctZG9jL3VpLWtpdC90eXBlcyc7XG5pbXBvcnQgeyBESUNvbXBhcmVIb3N0LCBESVN0YXRlQ29udHJvbCwgaW5qZWN0SG9zdENvbnRyb2wgfSBmcm9tICdkaS1jb250cm9scyc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ25nLWRvYy1jaGVja2JveCcsXG5cdHRlbXBsYXRlVXJsOiAnLi9jaGVja2JveC5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2NoZWNrYm94LmNvbXBvbmVudC5zY3NzJ10sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbTmdEb2NDaGVja2VkQ2hhbmdlRGlyZWN0aXZlLCBOZ0RvY0ZvY3VzYWJsZURpcmVjdGl2ZSwgTmdJZiwgTmdEb2NJY29uQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgTmdEb2NDaGVja2JveENvbXBvbmVudDxUPiBleHRlbmRzIERJU3RhdGVDb250cm9sPFQ+IHtcblx0QElucHV0KClcblx0QEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbHUtY29sb3InKVxuXHRjb2xvcjogTmdEb2NDb2xvciA9ICdwcmltYXJ5JztcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRzdXBlcih7XG5cdFx0XHRob3N0OiBpbmplY3RIb3N0Q29udHJvbCh7IG9wdGlvbmFsOiB0cnVlIH0pLFxuXHRcdFx0Y29tcGFyZUhvc3Q6IGluamVjdChESUNvbXBhcmVIb3N0LCB7IG9wdGlvbmFsOiB0cnVlIH0pLFxuXHRcdH0pO1xuXHR9XG59XG4iLCI8bGFiZWwgY2xhc3M9XCJuZy1kb2MtY2hlY2tib3gtd3JhcHBlclwiPlxuXHQ8ZGl2IGNsYXNzPVwibmctZG9jLWNoZWNrYm94XCI+XG5cdFx0PGlucHV0XG5cdFx0XHR0eXBlPVwiY2hlY2tib3hcIlxuXHRcdFx0W2Rpc2FibGVkXT1cImRpc2FibGVkXCJcblx0XHRcdFtuZ0RvY0NoZWNrZWRdPVwiY2hlY2tlZCgpXCJcblx0XHRcdChuZ0RvY0NoZWNrZWRDaGFuZ2UpPVwidG9nZ2xlKCk7IHRvdWNoKClcIlxuXHRcdFx0KGJsdXIpPVwidG91Y2goKVwiXG5cdFx0XHRbbmdEb2NGb2N1c2FibGVdPVwiZmFsc2VcIiAvPlxuXHRcdDxuZy1kb2MtaWNvbiBpY29uPVwibWludXNcIiAqbmdJZj1cImlzSW50ZXJtZWRpYXRlXCI+PC9uZy1kb2MtaWNvbj5cblx0XHQ8bmctZG9jLWljb24gaWNvbj1cImNoZWNrXCIgKm5nSWY9XCJjaGVja2VkKClcIj48L25nLWRvYy1pY29uPlxuXHQ8L2Rpdj5cblx0PGRpdiBjbGFzcz1cIm5nLWRvYy1jaGVja2JveC1jb250ZW50XCI+XG5cdFx0PHNwYW4gY2xhc3M9XCJuZy1kb2MtY2hlY2tib3gtaWNvbnNcIj5cblx0XHRcdDxuZy1jb250ZW50IHNlbGVjdD1cIm5nLWRvYy1pY29uXCI+PC9uZy1jb250ZW50PlxuXHRcdDwvc3Bhbj5cblx0XHQ8ZGl2IGNsYXNzPVwibmctZG9jLWNoZWNrYm94LXRleHRcIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG48L2xhYmVsPlxuIl19