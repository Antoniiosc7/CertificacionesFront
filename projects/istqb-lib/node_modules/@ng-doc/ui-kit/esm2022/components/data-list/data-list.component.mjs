import { __decorate, __metadata } from "tslib";
import { NgFor, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { asArray } from '@ng-doc/core/helpers/as-array';
import { NgDocListComponent } from '@ng-doc/ui-kit/components/list';
import { NgDocOptionComponent } from '@ng-doc/ui-kit/components/option';
import { NgDocTextComponent } from '@ng-doc/ui-kit/components/text';
import { NG_DOC_ALWAYS_FALSE_HANDLER, NG_DOC_DEFAULT_HANDLER, NG_DOC_DEFAULT_STRINGIFY, } from '@ng-doc/ui-kit/constants';
import { ngDocMakePure } from '@ng-doc/ui-kit/decorators';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
export class NgDocDataListComponent {
    constructor() {
        this.autofocus = true;
        this.items = [];
        this.itemContent = ({ $implicit, }) => NG_DOC_DEFAULT_STRINGIFY($implicit);
        this.emptyContent = '';
        this.itemDisabledFn = NG_DOC_ALWAYS_FALSE_HANDLER;
        this.defineValueFn = NG_DOC_DEFAULT_HANDLER;
        this.trackByFn = (_index, item) => item;
    }
    getContext($implicit) {
        return { $implicit };
    }
    getItems() {
        return asArray(this.items);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDataListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocDataListComponent, isStandalone: true, selector: "ng-doc-data-list", inputs: { autofocus: "autofocus", items: "items", itemContent: "itemContent", emptyContent: "emptyContent", itemDisabledFn: "itemDisabledFn", defineValueFn: "defineValueFn", trackByFn: "trackByFn" }, ngImport: i0, template: "<ng-doc-list>\n\t<ng-container *ngIf=\"items && items.length; else emptyTemplate\">\n\t\t<ng-doc-option\n\t\t\t*ngFor=\"let item of items; trackBy: trackByFn\"\n\t\t\t[value]=\"defineValueFn(item)\"\n\t\t\t[disabled]=\"itemDisabledFn(item)\">\n\t\t\t<ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item)\">\n\t\t\t\t{{ text }}\n\t\t\t</ng-container>\n\t\t</ng-doc-option>\n\t</ng-container>\n\n\t<ng-template #emptyTemplate>\n\t\t<div class=\"ng-doc-empty-message\" ng-doc-text>\n\t\t\t<ng-container *ngIf=\"emptyContent\">\n\t\t\t\t<ng-container *polymorpheusOutlet=\"emptyContent as text\"> {{ text }} </ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</ng-doc-list>\n", styles: [":host{display:block;height:100%;overflow:auto;max-height:var(--ng-doc-list-size)}.ng-doc-empty-message{padding:var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2);--ng-doc-font-size: 13px;--ng-doc-line-height: 22px}ng-doc-checkbox{pointer-events:none}\n"], dependencies: [{ kind: "component", type: NgDocListComponent, selector: "ng-doc-list" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocOptionComponent, selector: "ng-doc-option" }, { kind: "ngmodule", type: PolymorpheusModule }, { kind: "directive", type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: NgDocTextComponent, selector: "[ng-doc-text]", inputs: ["size", "color", "align", "absoluteContent"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    ngDocMakePure,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Object)
], NgDocDataListComponent.prototype, "getContext", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDataListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-data-list', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocListComponent,
                        NgIf,
                        NgFor,
                        NgDocOptionComponent,
                        PolymorpheusModule,
                        NgDocTextComponent,
                    ], template: "<ng-doc-list>\n\t<ng-container *ngIf=\"items && items.length; else emptyTemplate\">\n\t\t<ng-doc-option\n\t\t\t*ngFor=\"let item of items; trackBy: trackByFn\"\n\t\t\t[value]=\"defineValueFn(item)\"\n\t\t\t[disabled]=\"itemDisabledFn(item)\">\n\t\t\t<ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item)\">\n\t\t\t\t{{ text }}\n\t\t\t</ng-container>\n\t\t</ng-doc-option>\n\t</ng-container>\n\n\t<ng-template #emptyTemplate>\n\t\t<div class=\"ng-doc-empty-message\" ng-doc-text>\n\t\t\t<ng-container *ngIf=\"emptyContent\">\n\t\t\t\t<ng-container *polymorpheusOutlet=\"emptyContent as text\"> {{ text }} </ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n</ng-doc-list>\n", styles: [":host{display:block;height:100%;overflow:auto;max-height:var(--ng-doc-list-size)}.ng-doc-empty-message{padding:var(--ng-doc-base-gutter) calc(var(--ng-doc-base-gutter) * 2);--ng-doc-font-size: 13px;--ng-doc-line-height: 22px}ng-doc-checkbox{pointer-events:none}\n"] }]
        }], propDecorators: { autofocus: [{
                type: Input
            }], items: [{
                type: Input
            }], itemContent: [{
                type: Input
            }], emptyContent: [{
                type: Input
            }], itemDisabledFn: [{
                type: Input
            }], defineValueFn: [{
                type: Input
            }], trackByFn: [{
                type: Input
            }], getContext: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkta2l0L2NvbXBvbmVudHMvZGF0YS1saXN0L2RhdGEtbGlzdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL2RhdGEtbGlzdC9kYXRhLWxpc3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQW1CLE1BQU0sZUFBZSxDQUFDO0FBQzNGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQ04sMkJBQTJCLEVBQzNCLHNCQUFzQixFQUN0Qix3QkFBd0IsR0FDeEIsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7OztBQWlCOUQsTUFBTSxPQUFPLHNCQUFzQjtJQWZuQztRQWlCQyxjQUFTLEdBQVksSUFBSSxDQUFDO1FBRzFCLFVBQUssR0FBd0IsRUFBRSxDQUFDO1FBR2hDLGdCQUFXLEdBQThDLENBQUMsRUFDekQsU0FBUyxHQUNvQixFQUFFLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUd2RSxpQkFBWSxHQUFpQixFQUFFLENBQUM7UUFHaEMsbUJBQWMsR0FBMkIsMkJBQTJCLENBQUM7UUFHckUsa0JBQWEsR0FBK0Msc0JBQXNCLENBQUM7UUFHbkYsY0FBUyxHQUF1QixDQUFDLE1BQWMsRUFBRSxJQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQztLQVVsRTtJQVBBLFVBQVUsQ0FBQyxTQUFZO1FBQ3RCLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDOzhHQS9CVyxzQkFBc0I7a0dBQXRCLHNCQUFzQixvUkMvQm5DLGl0QkFvQkEsaVVER0Usa0JBQWtCLHdEQUNsQixJQUFJLDZGQUNKLEtBQUssbUhBQ0wsb0JBQW9CLHlEQUNwQixrQkFBa0IsMkxBQ2xCLGtCQUFrQjs7QUE0Qm5CO0lBREMsYUFBYTs7Ozt3REFHYjsyRkEzQlcsc0JBQXNCO2tCQWZsQyxTQUFTOytCQUNDLGtCQUFrQixtQkFHWCx1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUDt3QkFDUixrQkFBa0I7d0JBQ2xCLElBQUk7d0JBQ0osS0FBSzt3QkFDTCxvQkFBb0I7d0JBQ3BCLGtCQUFrQjt3QkFDbEIsa0JBQWtCO3FCQUNsQjs4QkFJRCxTQUFTO3NCQURSLEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLFdBQVc7c0JBRFYsS0FBSztnQkFNTixZQUFZO3NCQURYLEtBQUs7Z0JBSU4sY0FBYztzQkFEYixLQUFLO2dCQUlOLGFBQWE7c0JBRFosS0FBSztnQkFJTixTQUFTO3NCQURSLEtBQUs7Z0JBSU4sVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nRm9yLCBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUcmFja0J5RnVuY3Rpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFzQXJyYXkgfSBmcm9tICdAbmctZG9jL2NvcmUvaGVscGVycy9hcy1hcnJheSc7XG5pbXBvcnQgeyBOZ0RvY0xpc3RDb21wb25lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jb21wb25lbnRzL2xpc3QnO1xuaW1wb3J0IHsgTmdEb2NPcHRpb25Db21wb25lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jb21wb25lbnRzL29wdGlvbic7XG5pbXBvcnQgeyBOZ0RvY1RleHRDb21wb25lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9jb21wb25lbnRzL3RleHQnO1xuaW1wb3J0IHtcblx0TkdfRE9DX0FMV0FZU19GQUxTRV9IQU5ETEVSLFxuXHROR19ET0NfREVGQVVMVF9IQU5ETEVSLFxuXHROR19ET0NfREVGQVVMVF9TVFJJTkdJRlksXG59IGZyb20gJ0BuZy1kb2MvdWkta2l0L2NvbnN0YW50cyc7XG5pbXBvcnQgeyBuZ0RvY01ha2VQdXJlIH0gZnJvbSAnQG5nLWRvYy91aS1raXQvZGVjb3JhdG9ycyc7XG5pbXBvcnQgeyBOZ0RvY0NvbnRleHRXaXRoSW1wbGljaXQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9pbnRlcmZhY2VzJztcbmltcG9ydCB7IE5nRG9jQm9vbGVhbkhhbmRsZXIsIE5nRG9jQ29udGVudCwgTmdEb2NEZWZpbmVWYWx1ZUZ1bmN0aW9uIH0gZnJvbSAnQG5nLWRvYy91aS1raXQvdHlwZXMnO1xuaW1wb3J0IHsgUG9seW1vcnBoZXVzTW9kdWxlIH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbmctZG9jLWRhdGEtbGlzdCcsXG5cdHRlbXBsYXRlVXJsOiAnLi9kYXRhLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9kYXRhLWxpc3QuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtcblx0XHROZ0RvY0xpc3RDb21wb25lbnQsXG5cdFx0TmdJZixcblx0XHROZ0Zvcixcblx0XHROZ0RvY09wdGlvbkNvbXBvbmVudCxcblx0XHRQb2x5bW9ycGhldXNNb2R1bGUsXG5cdFx0TmdEb2NUZXh0Q29tcG9uZW50LFxuXHRdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0RvY0RhdGFMaXN0Q29tcG9uZW50PFQ+IHtcblx0QElucHV0KClcblx0YXV0b2ZvY3VzOiBib29sZWFuID0gdHJ1ZTtcblxuXHRASW5wdXQoKVxuXHRpdGVtczogcmVhZG9ubHkgVFtdIHwgbnVsbCA9IFtdO1xuXG5cdEBJbnB1dCgpXG5cdGl0ZW1Db250ZW50OiBOZ0RvY0NvbnRlbnQ8TmdEb2NDb250ZXh0V2l0aEltcGxpY2l0PFQ+PiA9ICh7XG5cdFx0JGltcGxpY2l0LFxuXHR9OiBOZ0RvY0NvbnRleHRXaXRoSW1wbGljaXQ8VD4pID0+IE5HX0RPQ19ERUZBVUxUX1NUUklOR0lGWSgkaW1wbGljaXQpO1xuXG5cdEBJbnB1dCgpXG5cdGVtcHR5Q29udGVudDogTmdEb2NDb250ZW50ID0gJyc7XG5cblx0QElucHV0KClcblx0aXRlbURpc2FibGVkRm46IE5nRG9jQm9vbGVhbkhhbmRsZXI8VD4gPSBOR19ET0NfQUxXQVlTX0ZBTFNFX0hBTkRMRVI7XG5cblx0QElucHV0KClcblx0ZGVmaW5lVmFsdWVGbjogTmdEb2NEZWZpbmVWYWx1ZUZ1bmN0aW9uPHVua25vd24sIHVua25vd24+ID0gTkdfRE9DX0RFRkFVTFRfSEFORExFUjtcblxuXHRASW5wdXQoKVxuXHR0cmFja0J5Rm46IFRyYWNrQnlGdW5jdGlvbjxUPiA9IChfaW5kZXg6IG51bWJlciwgaXRlbTogVCkgPT4gaXRlbTtcblxuXHRAbmdEb2NNYWtlUHVyZVxuXHRnZXRDb250ZXh0KCRpbXBsaWNpdDogVCk6IE5nRG9jQ29udGV4dFdpdGhJbXBsaWNpdDxUPiB7XG5cdFx0cmV0dXJuIHsgJGltcGxpY2l0IH07XG5cdH1cblxuXHRnZXRJdGVtcygpOiBUW10ge1xuXHRcdHJldHVybiBhc0FycmF5KHRoaXMuaXRlbXMpO1xuXHR9XG59XG4iLCI8bmctZG9jLWxpc3Q+XG5cdDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtcyAmJiBpdGVtcy5sZW5ndGg7IGVsc2UgZW1wdHlUZW1wbGF0ZVwiPlxuXHRcdDxuZy1kb2Mtb3B0aW9uXG5cdFx0XHQqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtczsgdHJhY2tCeTogdHJhY2tCeUZuXCJcblx0XHRcdFt2YWx1ZV09XCJkZWZpbmVWYWx1ZUZuKGl0ZW0pXCJcblx0XHRcdFtkaXNhYmxlZF09XCJpdGVtRGlzYWJsZWRGbihpdGVtKVwiPlxuXHRcdFx0PG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiaXRlbUNvbnRlbnQgYXMgdGV4dDsgY29udGV4dDogZ2V0Q29udGV4dChpdGVtKVwiPlxuXHRcdFx0XHR7eyB0ZXh0IH19XG5cdFx0XHQ8L25nLWNvbnRhaW5lcj5cblx0XHQ8L25nLWRvYy1vcHRpb24+XG5cdDwvbmctY29udGFpbmVyPlxuXG5cdDxuZy10ZW1wbGF0ZSAjZW1wdHlUZW1wbGF0ZT5cblx0XHQ8ZGl2IGNsYXNzPVwibmctZG9jLWVtcHR5LW1lc3NhZ2VcIiBuZy1kb2MtdGV4dD5cblx0XHRcdDxuZy1jb250YWluZXIgKm5nSWY9XCJlbXB0eUNvbnRlbnRcIj5cblx0XHRcdFx0PG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiZW1wdHlDb250ZW50IGFzIHRleHRcIj4ge3sgdGV4dCB9fSA8L25nLWNvbnRhaW5lcj5cblx0XHRcdDwvbmctY29udGFpbmVyPlxuXHRcdDwvZGl2PlxuXHQ8L25nLXRlbXBsYXRlPlxuPC9uZy1kb2MtbGlzdD5cbiJdfQ==