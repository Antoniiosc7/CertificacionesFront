import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, } from '@angular/core';
import { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';
import { NgDocSelectionHostDirective } from './selection-host.directive';
import * as i0 from "@angular/core";
import * as i1 from "./selection-host.directive";
let NgDocSelectionComponent = class NgDocSelectionComponent {
    constructor(elementRef, selectionHost) {
        this.elementRef = elementRef;
        this.selectionHost = selectionHost;
        this.align = 'bottom';
    }
    ngAfterViewInit() {
        this.selectionHost.selectedChange$
            .pipe(untilDestroyed(this))
            .subscribe((selected) => this.setStyles(selected));
    }
    setStyles(element) {
        this.elementRef.nativeElement.style.visibility = 'hidden';
        if (element) {
            const position = this.getPosition(element);
            if (this.align === 'left' || this.align === 'right') {
                this.elementRef.nativeElement.style.top = position.top;
            }
            else {
                this.elementRef.nativeElement.style.left = position.left;
            }
            this.elementRef.nativeElement.style.height = position.height;
            this.elementRef.nativeElement.style.width = position.width;
            this.elementRef.nativeElement.style.visibility = 'visible';
        }
    }
    getPosition(element) {
        return {
            top: element ? `${element.offsetTop || 0}px` : '0',
            left: element ? `${element.offsetLeft || 0}px` : '0',
            width: element ? `${element.offsetWidth || 0}px` : '0',
            height: element ? `${element.offsetHeight || 0}px` : '0',
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionComponent, deps: [{ token: i0.ElementRef }, { token: i1.NgDocSelectionHostDirective }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSelectionComponent, isStandalone: true, selector: "ng-doc-selection", inputs: { align: "align" }, host: { properties: { "attr.data-ng-doc-align": "this.align" } }, ngImport: i0, template: '', isInline: true, styles: [":host{position:absolute;transition:var(--ng-doc-transition);pointer-events:none;background:var(--ng-doc-selection-background)}:host[data-ng-doc-align=left]{left:0;border-left:var(--ng-doc-selection-border)}:host[data-ng-doc-align=right]{right:0;border-right:var(--ng-doc-selection-border)}:host[data-ng-doc-align=bottom]{bottom:0;border-bottom:var(--ng-doc-selection-border)}:host[data-ng-doc-align=top]{top:0;border-top:var(--ng-doc-selection-border)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
};
NgDocSelectionComponent = __decorate([
    UntilDestroy(),
    __metadata("design:paramtypes", [ElementRef,
        NgDocSelectionHostDirective])
], NgDocSelectionComponent);
export { NgDocSelectionComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-selection', template: '', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [":host{position:absolute;transition:var(--ng-doc-transition);pointer-events:none;background:var(--ng-doc-selection-background)}:host[data-ng-doc-align=left]{left:0;border-left:var(--ng-doc-selection-border)}:host[data-ng-doc-align=right]{right:0;border-right:var(--ng-doc-selection-border)}:host[data-ng-doc-align=bottom]{bottom:0;border-bottom:var(--ng-doc-selection-border)}:host[data-ng-doc-align=top]{top:0;border-top:var(--ng-doc-selection-border)}\n"] }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.NgDocSelectionHostDirective }], propDecorators: { align: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-align']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkta2l0L2NvbXBvbmVudHMvc2VsZWN0aW9uL3NlbGVjdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFFTix1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsS0FBSyxHQUNMLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFckUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7OztBQVVsRSxJQUFNLHVCQUF1QixHQUE3QixNQUFNLHVCQUF1QjtJQUtuQyxZQUNrQixVQUFtQyxFQUNuQyxhQUEwQztRQUQxQyxlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUNuQyxrQkFBYSxHQUFiLGFBQWEsQ0FBNkI7UUFKNUQsVUFBSyxHQUE4QyxRQUFRLENBQUM7SUFLekQsQ0FBQztJQUVKLGVBQWU7UUFDZCxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWU7YUFDaEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMxQixTQUFTLENBQUMsQ0FBQyxRQUFpQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVPLFNBQVMsQ0FBQyxPQUFxQjtRQUN0QyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztRQUMxRCxJQUFJLE9BQU8sRUFBRSxDQUFDO1lBQ2IsTUFBTSxRQUFRLEdBQWtCLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFMUQsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLE1BQU0sSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sRUFBRSxDQUFDO2dCQUNyRCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUM7WUFDeEQsQ0FBQztpQkFBTSxDQUFDO2dCQUNQLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztZQUMxRCxDQUFDO1lBRUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQzdELElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQztZQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUM1RCxDQUFDO0lBQ0YsQ0FBQztJQUVPLFdBQVcsQ0FBQyxPQUFvQjtRQUN2QyxPQUFPO1lBQ04sR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHO1lBQ2xELElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRztZQUNwRCxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxXQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUc7WUFDdEQsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsWUFBWSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHO1NBQ3hELENBQUM7SUFDSCxDQUFDOzhHQXhDVyx1QkFBdUI7a0dBQXZCLHVCQUF1QiwwS0FOekIsRUFBRTs7QUFNQSx1QkFBdUI7SUFEbkMsWUFBWSxFQUFFO3FDQU9nQixVQUFVO1FBQ1AsMkJBQTJCO0dBUGhELHVCQUF1QixDQXlDbkM7OzJGQXpDWSx1QkFBdUI7a0JBUm5DLFNBQVM7K0JBQ0Msa0JBQWtCLFlBQ2xCLEVBQUUsbUJBRUssdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJO3lIQU1oQixLQUFLO3NCQUZKLEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0QWZ0ZXJWaWV3SW5pdCxcblx0Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG5cdENvbXBvbmVudCxcblx0RWxlbWVudFJlZixcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nRG9jSG9yaXpvbnRhbEFsaWduLCBOZ0RvY1Bvc2l0aW9uLCBOZ0RvY1ZlcnRpY2FsQWxpZ24gfSBmcm9tICdAbmctZG9jL3VpLWtpdC90eXBlcyc7XG5pbXBvcnQgeyBVbnRpbERlc3Ryb3ksIHVudGlsRGVzdHJveWVkIH0gZnJvbSAnQG5nbmVhdC91bnRpbC1kZXN0cm95JztcblxuaW1wb3J0IHsgTmdEb2NTZWxlY3Rpb25Ib3N0RGlyZWN0aXZlIH0gZnJvbSAnLi9zZWxlY3Rpb24taG9zdC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICduZy1kb2Mtc2VsZWN0aW9uJyxcblx0dGVtcGxhdGU6ICcnLFxuXHRzdHlsZVVybHM6IFsnLi9zZWxlY3Rpb24uY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG59KVxuQFVudGlsRGVzdHJveSgpXG5leHBvcnQgY2xhc3MgTmdEb2NTZWxlY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblx0QElucHV0KClcblx0QEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbmctZG9jLWFsaWduJylcblx0YWxpZ246IE5nRG9jSG9yaXpvbnRhbEFsaWduIHwgTmdEb2NWZXJ0aWNhbEFsaWduID0gJ2JvdHRvbSc7XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0cHJpdmF0ZSByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pixcblx0XHRwcml2YXRlIHJlYWRvbmx5IHNlbGVjdGlvbkhvc3Q6IE5nRG9jU2VsZWN0aW9uSG9zdERpcmVjdGl2ZSxcblx0KSB7fVxuXG5cdG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcblx0XHR0aGlzLnNlbGVjdGlvbkhvc3Quc2VsZWN0ZWRDaGFuZ2UkXG5cdFx0XHQucGlwZSh1bnRpbERlc3Ryb3llZCh0aGlzKSlcblx0XHRcdC5zdWJzY3JpYmUoKHNlbGVjdGVkOiBIVE1MRWxlbWVudCB8IHVuZGVmaW5lZCkgPT4gdGhpcy5zZXRTdHlsZXMoc2VsZWN0ZWQpKTtcblx0fVxuXG5cdHByaXZhdGUgc2V0U3R5bGVzKGVsZW1lbnQ/OiBIVE1MRWxlbWVudCk6IHZvaWQge1xuXHRcdHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcblx0XHRpZiAoZWxlbWVudCkge1xuXHRcdFx0Y29uc3QgcG9zaXRpb246IE5nRG9jUG9zaXRpb24gPSB0aGlzLmdldFBvc2l0aW9uKGVsZW1lbnQpO1xuXG5cdFx0XHRpZiAodGhpcy5hbGlnbiA9PT0gJ2xlZnQnIHx8IHRoaXMuYWxpZ24gPT09ICdyaWdodCcpIHtcblx0XHRcdFx0dGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wID0gcG9zaXRpb24udG9wO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUubGVmdCA9IHBvc2l0aW9uLmxlZnQ7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLmhlaWdodCA9IHBvc2l0aW9uLmhlaWdodDtcblx0XHRcdHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLndpZHRoID0gcG9zaXRpb24ud2lkdGg7XG5cdFx0XHR0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgZ2V0UG9zaXRpb24oZWxlbWVudDogSFRNTEVsZW1lbnQpOiBOZ0RvY1Bvc2l0aW9uIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBlbGVtZW50ID8gYCR7ZWxlbWVudC5vZmZzZXRUb3AgfHwgMH1weGAgOiAnMCcsXG5cdFx0XHRsZWZ0OiBlbGVtZW50ID8gYCR7ZWxlbWVudC5vZmZzZXRMZWZ0IHx8IDB9cHhgIDogJzAnLFxuXHRcdFx0d2lkdGg6IGVsZW1lbnQgPyBgJHtlbGVtZW50Lm9mZnNldFdpZHRoIHx8IDB9cHhgIDogJzAnLFxuXHRcdFx0aGVpZ2h0OiBlbGVtZW50ID8gYCR7ZWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMH1weGAgOiAnMCcsXG5cdFx0fTtcblx0fVxufVxuIl19