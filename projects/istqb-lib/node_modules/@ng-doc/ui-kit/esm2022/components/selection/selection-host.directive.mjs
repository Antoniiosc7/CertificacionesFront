import { Directive } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { distinctUntilChanged } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class NgDocSelectionHostDirective {
    constructor() {
        this.origins = new Set();
        this.selectedChange = new ReplaySubject();
    }
    get selectedChange$() {
        return this.selectedChange.pipe(distinctUntilChanged());
    }
    addOrigin(origin) {
        this.origins.add(origin);
    }
    removeOrigin(origin) {
        this.origins.delete(origin);
        if (this.selected === origin) {
            this.changeSelected(origin, false);
        }
    }
    changeSelected(origin, selected) {
        this.selected =
            this.selected === origin || selected ? (selected ? origin : undefined) : this.selected;
        this.selectedChange.next(this.selected?.elementRef?.nativeElement ?? undefined);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionHostDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSelectionHostDirective, isStandalone: true, selector: "[ngDocSelectionHost]", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionHostDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocSelectionHost]',
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLWhvc3QuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1raXQvY29tcG9uZW50cy9zZWxlY3Rpb24vc2VsZWN0aW9uLWhvc3QuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFjLGFBQWEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFRdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUp4QztRQUtTLFlBQU8sR0FBdUMsSUFBSSxHQUFHLEVBQWlDLENBQUM7UUFFdkYsbUJBQWMsR0FBMkMsSUFBSSxhQUFhLEVBRS9FLENBQUM7S0F1Qko7SUFyQkEsSUFBSSxlQUFlO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxTQUFTLENBQUMsTUFBcUM7UUFDOUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELFlBQVksQ0FBQyxNQUFxQztRQUNqRCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU1QixJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssTUFBTSxFQUFFLENBQUM7WUFDOUIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDcEMsQ0FBQztJQUNGLENBQUM7SUFFRCxjQUFjLENBQUMsTUFBcUMsRUFBRSxRQUFpQjtRQUN0RSxJQUFJLENBQUMsUUFBUTtZQUNaLElBQUksQ0FBQyxRQUFRLEtBQUssTUFBTSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDeEYsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUUsYUFBYSxJQUFJLFNBQVMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7OEdBM0JXLDJCQUEyQjtrR0FBM0IsMkJBQTJCOzsyRkFBM0IsMkJBQTJCO2tCQUp2QyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFVBQVUsRUFBRSxJQUFJO2lCQUNoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGlzdGluY3RVbnRpbENoYW5nZWQgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IE5nRG9jU2VsZWN0aW9uT3JpZ2luRGlyZWN0aXZlIH0gZnJvbSAnLi9zZWxlY3Rpb24tb3JpZ2luLmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1tuZ0RvY1NlbGVjdGlvbkhvc3RdJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgTmdEb2NTZWxlY3Rpb25Ib3N0RGlyZWN0aXZlIHtcblx0cHJpdmF0ZSBvcmlnaW5zOiBTZXQ8TmdEb2NTZWxlY3Rpb25PcmlnaW5EaXJlY3RpdmU+ID0gbmV3IFNldDxOZ0RvY1NlbGVjdGlvbk9yaWdpbkRpcmVjdGl2ZT4oKTtcblx0cHJpdmF0ZSBzZWxlY3RlZD86IE5nRG9jU2VsZWN0aW9uT3JpZ2luRGlyZWN0aXZlO1xuXHRwcml2YXRlIHNlbGVjdGVkQ2hhbmdlOiBSZXBsYXlTdWJqZWN0PEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkPiA9IG5ldyBSZXBsYXlTdWJqZWN0PFxuXHRcdEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkXG5cdD4oKTtcblxuXHRnZXQgc2VsZWN0ZWRDaGFuZ2UkKCk6IE9ic2VydmFibGU8SFRNTEVsZW1lbnQgfCB1bmRlZmluZWQ+IHtcblx0XHRyZXR1cm4gdGhpcy5zZWxlY3RlZENoYW5nZS5waXBlKGRpc3RpbmN0VW50aWxDaGFuZ2VkKCkpO1xuXHR9XG5cblx0YWRkT3JpZ2luKG9yaWdpbjogTmdEb2NTZWxlY3Rpb25PcmlnaW5EaXJlY3RpdmUpOiB2b2lkIHtcblx0XHR0aGlzLm9yaWdpbnMuYWRkKG9yaWdpbik7XG5cdH1cblxuXHRyZW1vdmVPcmlnaW4ob3JpZ2luOiBOZ0RvY1NlbGVjdGlvbk9yaWdpbkRpcmVjdGl2ZSk6IHZvaWQge1xuXHRcdHRoaXMub3JpZ2lucy5kZWxldGUob3JpZ2luKTtcblxuXHRcdGlmICh0aGlzLnNlbGVjdGVkID09PSBvcmlnaW4pIHtcblx0XHRcdHRoaXMuY2hhbmdlU2VsZWN0ZWQob3JpZ2luLCBmYWxzZSk7XG5cdFx0fVxuXHR9XG5cblx0Y2hhbmdlU2VsZWN0ZWQob3JpZ2luOiBOZ0RvY1NlbGVjdGlvbk9yaWdpbkRpcmVjdGl2ZSwgc2VsZWN0ZWQ6IGJvb2xlYW4pOiB2b2lkIHtcblx0XHR0aGlzLnNlbGVjdGVkID1cblx0XHRcdHRoaXMuc2VsZWN0ZWQgPT09IG9yaWdpbiB8fCBzZWxlY3RlZCA/IChzZWxlY3RlZCA/IG9yaWdpbiA6IHVuZGVmaW5lZCkgOiB0aGlzLnNlbGVjdGVkO1xuXHRcdHRoaXMuc2VsZWN0ZWRDaGFuZ2UubmV4dCh0aGlzLnNlbGVjdGVkPy5lbGVtZW50UmVmPy5uYXRpdmVFbGVtZW50ID8/IHVuZGVmaW5lZCk7XG5cdH1cbn1cbiJdfQ==