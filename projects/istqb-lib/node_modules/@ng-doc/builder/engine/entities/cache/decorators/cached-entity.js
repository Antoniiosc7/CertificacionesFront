"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CachedEntity = CachedEntity;
const core_1 = require("@ng-doc/core");
const helpers_1 = require("../helpers");
/**
 * Decorator for cached entities, it will load the cache and assign the properties to the entity
 */
function CachedEntity() {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    return (Value, _context) => {
        return class extends Value {
            constructor(...args) {
                var _a;
                super(...args);
                const cache = (0, helpers_1.loadCache)(this.id);
                (0, core_1.asArray)((_a = this.__cachedProps) === null || _a === void 0 ? void 0 : _a.keys()).forEach((property) => {
                    var _a, _b, _c;
                    const accessor = (_a = this.__cachedProps) === null || _a === void 0 ? void 0 : _a.get(property);
                    const value = (_b = cache.properties) === null || _b === void 0 ? void 0 : _b[property];
                    if (Object.keys((_c = cache === null || cache === void 0 ? void 0 : cache.properties) !== null && _c !== void 0 ? _c : {}).includes(property) && accessor) {
                        Object.assign(this, { [property]: accessor.get(value) });
                    }
                });
            }
        };
    };
}
//# sourceMappingURL=cached-entity.js.map