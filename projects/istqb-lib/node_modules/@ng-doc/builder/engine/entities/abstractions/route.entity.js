"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NgDocRouteEntity = void 0;
const tslib_1 = require("tslib");
const core_1 = require("@ng-doc/core");
const path = tslib_1.__importStar(require("path"));
const helpers_1 = require("../../../helpers");
const cache_1 = require("../cache");
const module_entity_1 = require("./module.entity");
let NgDocRouteEntity = (() => {
    var _a;
    let _classSuper = module_entity_1.NgDocModuleEntity;
    let _anchors_decorators;
    let _anchors_initializers = [];
    let _anchors_extraInitializers = [];
    return _a = class NgDocRouteEntity extends _classSuper {
            /**
             * Url for to the source file to the current page, that can be used to open it in repository and edit
             */
            get editSourceFileUrl() {
                return undefined;
            }
            /**
             * Url for to the source file to the current page, that can be used to open it in repository and view
             */
            get viewSourceFileUrl() {
                return undefined;
            }
            get fullRoute() {
                var _b;
                const parentRoute = this.parent instanceof _a
                    ? this.parent.fullRoute
                    : (_b = this.context.config.routePrefix) !== null && _b !== void 0 ? _b : '';
                return (0, helpers_1.posix)(path.join('/', parentRoute, this.route));
            }
            /**
             * Returns breadcrumbs for the current entity
             */
            get breadcrumbs() {
                var _b;
                return (0, helpers_1.isRouteEntity)(this.parent)
                    ? [...(0, core_1.asArray)((_b = this === null || this === void 0 ? void 0 : this.parent) === null || _b === void 0 ? void 0 : _b.breadcrumbs), this.title]
                    : [this.title];
            }
            beforeBuild() {
                this.anchors = [];
                return super.beforeBuild();
            }
            constructor() {
                super(...arguments);
                /**
                 * The list of anchors for the current entity, that can be used to create keywords
                 */
                this.anchors = tslib_1.__runInitializers(this, _anchors_initializers, []);
                tslib_1.__runInitializers(this, _anchors_extraInitializers);
            }
        },
        (() => {
            var _b;
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_b = _classSuper[Symbol.metadata]) !== null && _b !== void 0 ? _b : null) : void 0;
            _anchors_decorators = [(0, cache_1.CachedProperty)()];
            tslib_1.__esDecorate(null, null, _anchors_decorators, { kind: "field", name: "anchors", static: false, private: false, access: { has: obj => "anchors" in obj, get: obj => obj.anchors, set: (obj, value) => { obj.anchors = value; } }, metadata: _metadata }, _anchors_initializers, _anchors_extraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
})();
exports.NgDocRouteEntity = NgDocRouteEntity;
//# sourceMappingURL=route.entity.js.map