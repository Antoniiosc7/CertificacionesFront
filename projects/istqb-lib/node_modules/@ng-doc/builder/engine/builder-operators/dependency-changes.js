"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dependencyChanges = dependencyChanges;
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const operators_2 = require("../../operators");
/**
 * Operator creates an additional observable that emits when the dependencies of the source observable change
 * and returns them as an array.
 * @param watcher - The watcher instance.
 */
function dependencyChanges(watcher) {
    return (source) => source.pipe((0, rxjs_1.mergeMap)((entities) => {
        const filtered = entities.filter((e) => !e.destroyed);
        return filtered.length
            ? (0, rxjs_1.merge)(...filtered.map((e) => e.dependencies.changes().pipe((0, rxjs_1.switchMap)((dependencies) => watcher
                .watch(dependencies)
                .onChange(...dependencies)
                .pipe((0, operators_1.tap)(() => e.dependenciesChanged()), (0, rxjs_1.takeUntil)(e.onDestroy()), (0, operators_1.map)(() => e)))))).pipe((0, operators_2.bufferDebounce)(0), (0, operators_1.startWith)(entities))
            : (0, rxjs_1.of)(entities);
    }));
}
//# sourceMappingURL=dependency-changes.js.map