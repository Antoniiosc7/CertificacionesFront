"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createBuilderContext = createBuilderContext;
const tslib_1 = require("tslib");
const core_1 = require("@ng-doc/core");
const path = tslib_1.__importStar(require("path"));
const load_config_1 = require("./load-config");
/**
 * Creates builder context, with all the necessary information for the builder to work
 * @param targetOptions - Target options
 * @param context - Builder context
 * @param configFilePath - Path to the configuration file if it exists
 */
function createBuilderContext(targetOptions, context, configFilePath) {
    var _a, _b, _c, _d, _e, _f;
    const projectRoot = path.dirname(targetOptions['browser']);
    const [configPath, config] = (0, load_config_1.loadConfig)(configFilePath !== null && configFilePath !== void 0 ? configFilePath : projectRoot, !configFilePath);
    const buildPath = path.join(context.workspaceRoot, (_a = config.outDir) !== null && _a !== void 0 ? _a : '', 'ng-doc', (_c = (_b = context.target) === null || _b === void 0 ? void 0 : _b.project) !== null && _c !== void 0 ? _c : 'app');
    return {
        tsConfig: (_d = config === null || config === void 0 ? void 0 : config.tsConfig) !== null && _d !== void 0 ? _d : String(targetOptions['tsConfig']),
        config,
        context,
        inlineStyleLanguage: (_e = targetOptions === null || targetOptions === void 0 ? void 0 : targetOptions['inlineStyleLanguage']) !== null && _e !== void 0 ? _e : 'CSS',
        pagesPaths: ((_f = config.pages) === null || _f === void 0 ? void 0 : _f.length) ? (0, core_1.asArray)(config.pages) : [projectRoot],
        assetsPath: path.join(buildPath, 'assets'),
        cachedFiles: [configPath],
        buildPath,
        apiPath: path.join(buildPath, 'api'),
        guidesPath: path.join(buildPath, 'guides'),
    };
}
//# sourceMappingURL=create-builder-context.js.map