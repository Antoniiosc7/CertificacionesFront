import { NgFor } from '@angular/common';
import * as i0 from '@angular/core';
import { inject, Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { RouterLink } from '@angular/router';
import { NgDocRootPage } from '@ng-doc/app/classes';
import { NgDocButtonIconComponent, NgDocIconComponent, NgDocTextComponent } from '@ng-doc/ui-kit';

class NgDocBreadcrumbComponent {
    constructor() {
        this.breadcrumbs = [];
        this.home = inject(NgDocRootPage).routePrefix || '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBreadcrumbComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocBreadcrumbComponent, isStandalone: true, selector: "ng-doc-breadcrumb", inputs: { breadcrumbs: "breadcrumbs" }, ngImport: i0, template: "<a class=\"ng-doc-breadcrumb\" [routerLink]=\"['/', home]\" ng-doc-button-icon>\n\t<ng-doc-icon icon=\"home\"></ng-doc-icon>\n</a>\n<span class=\"ng-doc-breadcrumb\" *ngFor=\"let item of breadcrumbs\">\n\t<span ng-doc-text>\n\t\t<ng-doc-icon icon=\"chevron-right\"></ng-doc-icon>\n\t\t{{ item }}\n\t</span>\n</span>\n", styles: [":host{display:flex;align-items:center;flex-wrap:wrap;margin-bottom:calc(var(--ng-doc-base-gutter) * 2);opacity:.9}:host .ng-doc-breadcrumb:not(:first-child){margin-right:var(--ng-doc-base-gutter)}:host .ng-doc-breadcrumb:not(:first-child):not(:last-child){opacity:.6}\n"], dependencies: [{ kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocTextComponent, selector: "[ng-doc-text]", inputs: ["size", "color", "align", "absoluteContent"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBreadcrumbComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-breadcrumb', standalone: true, imports: [NgDocButtonIconComponent, RouterLink, NgDocIconComponent, NgFor, NgDocTextComponent], changeDetection: ChangeDetectionStrategy.OnPush, template: "<a class=\"ng-doc-breadcrumb\" [routerLink]=\"['/', home]\" ng-doc-button-icon>\n\t<ng-doc-icon icon=\"home\"></ng-doc-icon>\n</a>\n<span class=\"ng-doc-breadcrumb\" *ngFor=\"let item of breadcrumbs\">\n\t<span ng-doc-text>\n\t\t<ng-doc-icon icon=\"chevron-right\"></ng-doc-icon>\n\t\t{{ item }}\n\t</span>\n</span>\n", styles: [":host{display:flex;align-items:center;flex-wrap:wrap;margin-bottom:calc(var(--ng-doc-base-gutter) * 2);opacity:.9}:host .ng-doc-breadcrumb:not(:first-child){margin-right:var(--ng-doc-base-gutter)}:host .ng-doc-breadcrumb:not(:first-child):not(:last-child){opacity:.6}\n"] }]
        }], propDecorators: { breadcrumbs: [{
                type: Input
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocBreadcrumbComponent };
//# sourceMappingURL=ng-doc-app-components-breadcrumb.mjs.map
