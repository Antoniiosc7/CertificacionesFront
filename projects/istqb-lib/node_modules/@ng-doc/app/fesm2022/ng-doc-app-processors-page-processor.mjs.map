{"version":3,"file":"ng-doc-app-processors-page-processor.mjs","sources":["../../../../libs/app/processors/page-processor/page-processor.directive.ts","../../../../libs/app/processors/page-processor/ng-doc-app-processors-page-processor.ts"],"sourcesContent":["import {\n\tComponentRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tinject,\n\tInjector,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tRenderer2,\n\tSimpleChanges,\n\tViewContainerRef,\n} from '@angular/core';\nimport { NgDocPageProcessor, NgDocProcessorOptions } from '@ng-doc/app/interfaces';\nimport { NG_DOC_PAGE_CUSTOM_PROCESSOR, NG_DOC_PAGE_PROCESSOR } from '@ng-doc/app/tokens';\nimport { asArray, objectKeys } from '@ng-doc/core';\n\n/**\n * Base processor class to create a processor directive that will be used to replace\n * html nodes with an Angular component.\n */\n@Directive({\n\tselector: '[ngDocPageProcessor]',\n\tstandalone: true,\n\thost: { ngSkipHydration: 'true' },\n})\nexport class NgDocPageProcessorDirective implements OnChanges, OnInit {\n\t@Input({ required: true, alias: 'ngDocPageProcessor' })\n\thtml: string = '';\n\n\t@Output()\n\tafterRender: EventEmitter<void> = new EventEmitter<void>();\n\n\tprocessors: Array<NgDocPageProcessor<unknown>> =\n\t\tinject<Array<NgDocPageProcessor<unknown>>>(NG_DOC_PAGE_PROCESSOR, { optional: true }) ?? [];\n\tcustomProcessors: Array<NgDocPageProcessor<unknown>> =\n\t\tinject<Array<NgDocPageProcessor<unknown>>>(NG_DOC_PAGE_CUSTOM_PROCESSOR, { optional: true }) ??\n\t\t[];\n\n\tprotected readonly elementRef: ElementRef<HTMLElement> = inject(ElementRef);\n\tprotected readonly viewContainerRef: ViewContainerRef = inject(ViewContainerRef);\n\tprotected readonly injector: Injector = inject(Injector);\n\tprotected readonly renderer: Renderer2 = inject(Renderer2);\n\n\tngOnChanges({ html }: SimpleChanges) {\n\t\tif (html) {\n\t\t\tthis.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', this.html);\n\t\t\tthis.afterRender.emit();\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tasArray(this.processors, this.customProcessors).forEach(this.process.bind(this));\n\t}\n\n\tprivate process<T>(processor: NgDocPageProcessor<T>): void {\n\t\tArray.from(this.elementRef.nativeElement.querySelectorAll(processor.selector)).forEach(\n\t\t\t(elementNode: Element) => {\n\t\t\t\t// check if element node has a parent node because it can be removed by another processor\n\t\t\t\tif (elementNode.parentNode) {\n\t\t\t\t\tconst replaceElement: Element =\n\t\t\t\t\t\t(processor.nodeToReplace && processor.nodeToReplace(elementNode, this.injector)) ??\n\t\t\t\t\t\telementNode;\n\t\t\t\t\tconst options: NgDocProcessorOptions<T> = processor.extractOptions(\n\t\t\t\t\t\telementNode,\n\t\t\t\t\t\tthis.elementRef.nativeElement,\n\t\t\t\t\t);\n\n\t\t\t\t\t// create component\n\t\t\t\t\tconst componentRef: ComponentRef<T> = this.viewContainerRef.createComponent(\n\t\t\t\t\t\tprocessor.component,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprojectableNodes: options.content,\n\t\t\t\t\t\t\tinjector: this.injector,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\t// set component options\n\t\t\t\t\tif (options.inputs) {\n\t\t\t\t\t\tobjectKeys(options.inputs).forEach(\n\t\t\t\t\t\t\t(key: keyof T) =>\n\t\t\t\t\t\t\t\toptions.inputs && componentRef.setInput(key as string, options.inputs[key]),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// replace element node with component node\n\t\t\t\t\treplaceElement.parentNode?.replaceChild(\n\t\t\t\t\t\tcomponentRef.location.nativeElement,\n\t\t\t\t\t\treplaceElement,\n\t\t\t\t\t);\n\n\t\t\t\t\tcomponentRef.changeDetectorRef.markForCheck();\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AAmBA;;;AAGG;MAMU,2BAA2B,CAAA;AALxC,IAAA,WAAA,GAAA;QAOC,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;AAGlB,QAAA,IAAA,CAAA,WAAW,GAAuB,IAAI,YAAY,EAAQ,CAAC;AAE3D,QAAA,IAAA,CAAA,UAAU,GACT,MAAM,CAAqC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAC7F,IAAgB,CAAA,gBAAA,GACf,MAAM,CAAqC,4BAA4B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC5F,YAAA,EAAE,CAAC;AAEe,QAAA,IAAA,CAAA,UAAU,GAA4B,MAAM,CAAC,UAAU,CAAC,CAAC;AACzD,QAAA,IAAA,CAAA,gBAAgB,GAAqB,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAC9D,QAAA,IAAA,CAAA,QAAQ,GAAa,MAAM,CAAC,QAAQ,CAAC,CAAC;AACtC,QAAA,IAAA,CAAA,QAAQ,GAAc,MAAM,CAAC,SAAS,CAAC,CAAC;AAsD3D,KAAA;IApDA,WAAW,CAAC,EAAE,IAAI,EAAiB,EAAA;QAClC,IAAI,IAAI,EAAE;AACT,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACjF,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACxB;KACD;IAED,QAAQ,GAAA;QACP,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACjF;AAEO,IAAA,OAAO,CAAI,SAAgC,EAAA;QAClD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CACrF,CAAC,WAAoB,KAAI;;AAExB,YAAA,IAAI,WAAW,CAAC,UAAU,EAAE;AAC3B,gBAAA,MAAM,cAAc,GACnB,CAAC,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC;AAC/E,oBAAA,WAAW,CAAC;AACb,gBAAA,MAAM,OAAO,GAA6B,SAAS,CAAC,cAAc,CACjE,WAAW,EACX,IAAI,CAAC,UAAU,CAAC,aAAa,CAC7B,CAAC;;gBAGF,MAAM,YAAY,GAAoB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAC1E,SAAS,CAAC,SAAS,EACnB;oBACC,gBAAgB,EAAE,OAAO,CAAC,OAAO;oBACjC,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,iBAAA,CACD,CAAC;;AAGF,gBAAA,IAAI,OAAO,CAAC,MAAM,EAAE;AACnB,oBAAA,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CACjC,CAAC,GAAY,KACZ,OAAO,CAAC,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAa,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC5E,CAAC;iBACF;;AAGD,gBAAA,cAAc,CAAC,UAAU,EAAE,YAAY,CACtC,YAAY,CAAC,QAAQ,CAAC,aAAa,EACnC,cAAc,CACd,CAAC;AAEF,gBAAA,YAAY,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aAC9C;AACF,SAAC,CACD,CAAC;KACF;8GArEW,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAA3B,2BAA2B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE,EAAE,eAAe,EAAE,MAAM,EAAE;AACjC,iBAAA,CAAA;8BAGA,IAAI,EAAA,CAAA;sBADH,KAAK;AAAC,gBAAA,IAAA,EAAA,CAAA,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAA;gBAItD,WAAW,EAAA,CAAA;sBADV,MAAM;;;AChCR;;AAEG;;;;"}