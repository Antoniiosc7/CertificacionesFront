import * as i0 from '@angular/core';
import { Pipe } from '@angular/core';
import * as i1 from '@angular/platform-browser';

class NgDocSanitizeHtmlPipe {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    transform(value) {
        return this.sanitizer.bypassSecurityTrustHtml(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSanitizeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "18.1.0", ngImport: i0, type: NgDocSanitizeHtmlPipe, isStandalone: true, name: "ngDocSanitizeHtml" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSanitizeHtmlPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'ngDocSanitizeHtml',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i1.DomSanitizer }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocSanitizeHtmlPipe };
//# sourceMappingURL=ng-doc-app-pipes-sanitize-html.mjs.map
