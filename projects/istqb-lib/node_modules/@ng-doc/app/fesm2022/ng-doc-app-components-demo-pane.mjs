import { NgTemplateOutlet, NgIf, NgFor, NgComponentOutlet } from '@angular/common';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';
import * as i1 from '@ng-doc/app/classes/root-page';
import { NgDocCodeComponent } from '@ng-doc/app/components/code';
import { NgDocFullscreenButtonComponent } from '@ng-doc/app/components/fullscreen-button';
import { asArray } from '@ng-doc/core/helpers/as-array';
import { NgDocPaneComponent, NgDocPaneBackDirective, NgDocPaneFrontDirective, NgDocTabGroupComponent, NgDocTabComponent } from '@ng-doc/ui-kit';

class NgDocDemoPaneComponent {
    constructor(rootPage) {
        this.rootPage = rootPage;
        this.options = {};
        this.assets = [];
    }
    get classes() {
        return this.options.class ?? '';
    }
    ngOnInit() {
        this.demo = this.getDemo();
        this.assets = this.getAssets();
    }
    getDemo() {
        if (this.componentName) {
            return this.rootPage.page?.demos && this.rootPage.page.demos[this.componentName];
        }
        return undefined;
    }
    getAssets() {
        if (this.componentName) {
            return ((this.rootPage.demoAssets && this.rootPage.demoAssets[this.componentName]) ??
                []).filter((asset) => !this.options.tabs?.length || asArray(this.options.tabs).includes(asset.title));
        }
        return [];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoPaneComponent, deps: [{ token: i1.NgDocRootPage }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.0", type: NgDocDemoPaneComponent, isStandalone: true, selector: "ng-doc-demo-pane", inputs: { componentName: "componentName", options: "options" }, host: { properties: { "class": "this.classes" } }, ngImport: i0, template: "<ng-doc-pane [expanded]=\"options.expanded ?? false\">\n\t<ng-container *ngTemplateOutlet=\"codeContent\" ngDocPaneBack></ng-container>\n\t<ng-container *ngTemplateOutlet=\"demoTemplate\" ngDocPaneFront></ng-container>\n</ng-doc-pane>\n\n<ng-template #demoTemplate>\n\t@if (options.fullscreenRoute) {\n\t<ng-doc-fullscreen-button [route]=\"options.fullscreenRoute!\"></ng-doc-fullscreen-button>\n\t} @else if (demo) {\n\t<ng-container *ngComponentOutlet=\"demo; inputs: options.inputs\"></ng-container>\n\t}\n</ng-template>\n\n<ng-template #codeContent>\n\t<ng-container *ngIf=\"assets.length === 1\">\n\t\t<ng-doc-code *ngFor=\"let asset of assets\" [html]=\"asset.code\"></ng-doc-code>\n\t</ng-container>\n\n\t<ng-container *ngIf=\"assets.length > 1\">\n\t\t<ng-doc-tab-group [openedTab]=\"options.defaultTab\">\n\t\t\t<ng-doc-tab\n\t\t\t\t*ngFor=\"let asset of assets\"\n\t\t\t\t[id]=\"asset.title\"\n\t\t\t\t[label]=\"asset.title\"\n\t\t\t\t[content]=\"assetContent\">\n\t\t\t\t<ng-template #assetContent>\n\t\t\t\t\t<ng-doc-code [html]=\"asset.code\"></ng-doc-code>\n\t\t\t\t</ng-template>\n\t\t\t</ng-doc-tab>\n\t\t</ng-doc-tab-group>\n\t</ng-container>\n</ng-template>\n", styles: [":host{display:block;height:var(--ng-doc-demo-pane-height);margin:var(--ng-doc-demo-pane-margin);--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-smooth-resize-height: var(--ng-doc-demo-pane-height);--ng-doc-smooth-resize-max-height: 100%;--ng-doc-tab-group-tabs-background: var(--ng-doc-base-2);--ng-doc-tab-group-border: none;--ng-doc-tab-group-border-radius: 0}:host ng-doc-tab-group,:host ng-doc-code,:host ng-doc-pane{width:100%;height:100%}\n"], dependencies: [{ kind: "component", type: NgDocPaneComponent, selector: "ng-doc-pane", inputs: ["expanded"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: NgDocPaneBackDirective, selector: "[ngDocPaneBack]" }, { kind: "directive", type: NgDocPaneFrontDirective, selector: "[ngDocPaneFront]" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocCodeComponent, selector: "ng-doc-code", inputs: ["html", "copyButton", "name", "icon", "lineNumbers"] }, { kind: "component", type: NgDocTabGroupComponent, selector: "ng-doc-tab-group", inputs: ["openedTab"] }, { kind: "component", type: NgDocTabComponent, selector: "ng-doc-tab", inputs: ["label", "id", "content"] }, { kind: "component", type: NgDocFullscreenButtonComponent, selector: "ng-doc-fullscreen-button", inputs: ["route"] }, { kind: "directive", type: NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInputs", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModule", "ngComponentOutletNgModuleFactory"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoPaneComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-demo-pane', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocPaneComponent,
                        NgTemplateOutlet,
                        NgDocPaneBackDirective,
                        NgDocPaneFrontDirective,
                        NgIf,
                        NgFor,
                        NgDocCodeComponent,
                        NgDocTabGroupComponent,
                        NgDocTabComponent,
                        NgDocFullscreenButtonComponent,
                        NgComponentOutlet,
                    ], template: "<ng-doc-pane [expanded]=\"options.expanded ?? false\">\n\t<ng-container *ngTemplateOutlet=\"codeContent\" ngDocPaneBack></ng-container>\n\t<ng-container *ngTemplateOutlet=\"demoTemplate\" ngDocPaneFront></ng-container>\n</ng-doc-pane>\n\n<ng-template #demoTemplate>\n\t@if (options.fullscreenRoute) {\n\t<ng-doc-fullscreen-button [route]=\"options.fullscreenRoute!\"></ng-doc-fullscreen-button>\n\t} @else if (demo) {\n\t<ng-container *ngComponentOutlet=\"demo; inputs: options.inputs\"></ng-container>\n\t}\n</ng-template>\n\n<ng-template #codeContent>\n\t<ng-container *ngIf=\"assets.length === 1\">\n\t\t<ng-doc-code *ngFor=\"let asset of assets\" [html]=\"asset.code\"></ng-doc-code>\n\t</ng-container>\n\n\t<ng-container *ngIf=\"assets.length > 1\">\n\t\t<ng-doc-tab-group [openedTab]=\"options.defaultTab\">\n\t\t\t<ng-doc-tab\n\t\t\t\t*ngFor=\"let asset of assets\"\n\t\t\t\t[id]=\"asset.title\"\n\t\t\t\t[label]=\"asset.title\"\n\t\t\t\t[content]=\"assetContent\">\n\t\t\t\t<ng-template #assetContent>\n\t\t\t\t\t<ng-doc-code [html]=\"asset.code\"></ng-doc-code>\n\t\t\t\t</ng-template>\n\t\t\t</ng-doc-tab>\n\t\t</ng-doc-tab-group>\n\t</ng-container>\n</ng-template>\n", styles: [":host{display:block;height:var(--ng-doc-demo-pane-height);margin:var(--ng-doc-demo-pane-margin);--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-smooth-resize-height: var(--ng-doc-demo-pane-height);--ng-doc-smooth-resize-max-height: 100%;--ng-doc-tab-group-tabs-background: var(--ng-doc-base-2);--ng-doc-tab-group-border: none;--ng-doc-tab-group-border-radius: 0}:host ng-doc-tab-group,:host ng-doc-code,:host ng-doc-pane{width:100%;height:100%}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgDocRootPage }], propDecorators: { componentName: [{
                type: Input
            }], options: [{
                type: Input
            }], classes: [{
                type: HostBinding,
                args: ['class']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocDemoPaneComponent };
//# sourceMappingURL=ng-doc-app-components-demo-pane.mjs.map
