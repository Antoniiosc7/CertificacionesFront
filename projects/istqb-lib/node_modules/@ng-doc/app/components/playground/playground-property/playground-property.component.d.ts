import { OnChanges, SimpleChanges, ViewContainerRef } from '@angular/core';
import { FormControl } from '@angular/forms';
import { NgDocProvidedTypeControl, NgDocTypeControlProviderOptions } from '@ng-doc/app/interfaces';
import { NgDocPlaygroundContent, NgDocPlaygroundProperty } from '@ng-doc/core/interfaces';
import * as i0 from "@angular/core";
export declare class NgDocPlaygroundPropertyComponent implements OnChanges {
    name: string;
    property?: NgDocPlaygroundProperty | NgDocPlaygroundContent;
    typeControl?: NgDocProvidedTypeControl;
    control?: FormControl;
    defaultValue?: unknown;
    propertyOutlet?: ViewContainerRef;
    protected option?: NgDocTypeControlProviderOptions;
    private propertyTypeControl?;
    ngOnChanges({ property, control, typeControl, defaultValue }: SimpleChanges): void;
    get hasPropertyControl(): boolean;
    get tooltipContent(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocPlaygroundPropertyComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocPlaygroundPropertyComponent, "ng-doc-playground-property", never, { "name": { "alias": "name"; "required": false; }; "property": { "alias": "property"; "required": false; }; "typeControl": { "alias": "typeControl"; "required": false; }; "control": { "alias": "control"; "required": false; }; "defaultValue": { "alias": "defaultValue"; "required": false; }; }, {}, never, never, true, never>;
}
