import { AfterViewInit } from '@angular/core';
import { NgDocSidebarService } from '@ng-doc/app/services/sidebar';
import { NgDocContent, NgDocHorizontalAlign, NgDocSidenavComponent } from '@ng-doc/ui-kit';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * Directive uses for providing custom navbar, you should mark element with this directive
 * and the `NgDocRootComponent` will use it as a navbar
 *
 * ```html
 * <ng-doc-root>
 *     <my-custom-navbar ngDocCustomNavbar></my-custom-navbar>
 *
 *     <ng-doc-sidebar></ng-doc-sidebar>
 *     <router-outlet></router-outlet>
 * </ng-doc-root>
 * ```
 */
export declare class NgDocCustomNavbarDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocCustomNavbarDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgDocCustomNavbarDirective, "[ngDocCustomNavbar]", never, {}, {}, never, never, true, never>;
}
/**
 * Directive uses for providing custom sidebar, you should mark element with this directive
 * and the `NgDocRootComponent` will use it as a sidebar
 *
 * ```html
 * <ng-doc-root>
 *     <ng-doc-navbar></ng-doc-sidebar>
 *
 *     <my-custom-sidebar ngDocCustomSidebar></my-custom-sidebar>
 *     <router-outlet></router-outlet>
 * </ng-doc-root>
 * ```
 */
export declare class NgDocCustomSidebarDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocCustomSidebarDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgDocCustomSidebarDirective, "[ngDocCustomSidebar]", never, {}, {}, never, never, true, never>;
}
export declare class NgDocRootComponent implements AfterViewInit {
    protected readonly sidebarService: NgDocSidebarService;
    /**
     * If `true` then the sidebar will be shown
     * You can use it for example for landing page to hide sidebar
     */
    sidebar: boolean;
    /**
     * Content for footer
     */
    footerContent: NgDocContent;
    /**
     * If `true` then page will be shown without width limit.
     * You can use it for example for landing page
     */
    noWidthLimit: boolean;
    sidenav?: NgDocSidenavComponent;
    protected sidenavState$: Observable<{
        over: boolean;
        align: NgDocHorizontalAlign;
        hasBackdrop: boolean;
    }>;
    constructor(sidebarService: NgDocSidebarService);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocRootComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocRootComponent, "ng-doc-root", never, { "sidebar": { "alias": "sidebar"; "required": false; }; "footerContent": { "alias": "footerContent"; "required": false; }; "noWidthLimit": { "alias": "noWidthLimit"; "required": false; }; }, {}, never, ["ng-doc-navbar", "[ngDocCustomNavbar]", "ng-doc-sidebar", "[ngDocCustomSidebar]", "*"], true, never>;
}
