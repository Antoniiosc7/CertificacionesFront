import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { NgDocButtonIconComponent, NgDocFocusableDirective, NgDocIconComponent, NgDocInputNumberDirective, NgDocInputWrapperComponent, } from '@ng-doc/ui-kit';
import { DIControl, DIControlSilencerDirective } from 'di-controls';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class NgDocNumberControlComponent extends DIControl {
    constructor() {
        super();
    }
    changeModel(value) {
        this.updateModel(value === null && this.default ? this.default : value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocNumberControlComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocNumberControlComponent, isStandalone: true, selector: "ng-doc-number-control", inputs: { default: "default" }, usesInheritance: true, ngImport: i0, template: "<ng-doc-input-wrapper diControlSilencer [rightContent]=\"rightContent\">\n\t<input ngDocInputNumber type=\"number\" [ngModel]=\"model()\" (ngModelChange)=\"changeModel($event)\" />\n\t<ng-template #rightContent>\n\t\t<button\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t[ngDocFocusable]=\"false\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[rounded]=\"false\"\n\t\t\t(click)=\"updateModel(default ?? null)\"\n\t\t\t(focusout)=\"touch()\"\n\t\t\t*ngIf=\"model() && model() !== default\">\n\t\t\t<ng-doc-icon icon=\"x\"></ng-doc-icon>\n\t\t</button>\n\t</ng-template>\n</ng-doc-input-wrapper>\n", styles: [":host{display:block;width:100%}\n"], dependencies: [{ kind: "component", type: NgDocInputWrapperComponent, selector: "ng-doc-input-wrapper", inputs: ["blurContent", "blurContext", "leftContent", "rightContent", "align"] }, { kind: "directive", type: DIControlSilencerDirective, selector: "[diControlSilencer]" }, { kind: "directive", type: NgDocInputNumberDirective, selector: "input[ngDocInputNumber]" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "directive", type: NgDocFocusableDirective, selector: "[ngDocFocusable]", inputs: ["ngDocFocusable"], exportAs: ["ngDocFocusable"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocNumberControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-number-control', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocInputWrapperComponent,
                        DIControlSilencerDirective,
                        NgDocInputNumberDirective,
                        FormsModule,
                        NgIf,
                        NgDocButtonIconComponent,
                        NgDocFocusableDirective,
                        NgDocIconComponent,
                    ], template: "<ng-doc-input-wrapper diControlSilencer [rightContent]=\"rightContent\">\n\t<input ngDocInputNumber type=\"number\" [ngModel]=\"model()\" (ngModelChange)=\"changeModel($event)\" />\n\t<ng-template #rightContent>\n\t\t<button\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t[ngDocFocusable]=\"false\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[rounded]=\"false\"\n\t\t\t(click)=\"updateModel(default ?? null)\"\n\t\t\t(focusout)=\"touch()\"\n\t\t\t*ngIf=\"model() && model() !== default\">\n\t\t\t<ng-doc-icon icon=\"x\"></ng-doc-icon>\n\t\t</button>\n\t</ng-template>\n</ng-doc-input-wrapper>\n", styles: [":host{display:block;width:100%}\n"] }]
        }], ctorParameters: () => [], propDecorators: { default: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hcHAvdHlwZS1jb250cm9scy9udW1iZXItY29udHJvbC9udW1iZXItY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC90eXBlLWNvbnRyb2xzL251bWJlci1jb250cm9sL251bWJlci1jb250cm9sLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUNOLHdCQUF3QixFQUN4Qix1QkFBdUIsRUFDdkIsa0JBQWtCLEVBQ2xCLHlCQUF5QixFQUN6QiwwQkFBMEIsR0FDMUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sYUFBYSxDQUFDOzs7QUFtQnBFLE1BQU0sT0FBTywyQkFDWixTQUFRLFNBQWlCO0lBTXpCO1FBQ0MsS0FBSyxFQUFFLENBQUM7SUFDVCxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQW9CO1FBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RSxDQUFDOzhHQWJXLDJCQUEyQjtrR0FBM0IsMkJBQTJCLHdJQzlCeEMsdWxCQWdCQSwyRkRJRSwwQkFBMEIsaUpBQzFCLDBCQUEwQixnRUFDMUIseUJBQXlCLG1FQUN6QixXQUFXLGl4QkFDWCxJQUFJLDZGQUNKLHdCQUF3QiwySEFDeEIsdUJBQXVCLHVIQUN2QixrQkFBa0I7OzJGQUdQLDJCQUEyQjtrQkFqQnZDLFNBQVM7K0JBQ0MsdUJBQXVCLG1CQUdoQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUDt3QkFDUiwwQkFBMEI7d0JBQzFCLDBCQUEwQjt3QkFDMUIseUJBQXlCO3dCQUN6QixXQUFXO3dCQUNYLElBQUk7d0JBQ0osd0JBQXdCO3dCQUN4Qix1QkFBdUI7d0JBQ3ZCLGtCQUFrQjtxQkFDbEI7d0RBT0QsT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdJZiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBOZ0RvY1R5cGVDb250cm9sIH0gZnJvbSAnQG5nLWRvYy9hcHAvaW50ZXJmYWNlcyc7XG5pbXBvcnQge1xuXHROZ0RvY0J1dHRvbkljb25Db21wb25lbnQsXG5cdE5nRG9jRm9jdXNhYmxlRGlyZWN0aXZlLFxuXHROZ0RvY0ljb25Db21wb25lbnQsXG5cdE5nRG9jSW5wdXROdW1iZXJEaXJlY3RpdmUsXG5cdE5nRG9jSW5wdXRXcmFwcGVyQ29tcG9uZW50LFxufSBmcm9tICdAbmctZG9jL3VpLWtpdCc7XG5pbXBvcnQgeyBESUNvbnRyb2wsIERJQ29udHJvbFNpbGVuY2VyRGlyZWN0aXZlIH0gZnJvbSAnZGktY29udHJvbHMnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICduZy1kb2MtbnVtYmVyLWNvbnRyb2wnLFxuXHR0ZW1wbGF0ZVVybDogJy4vbnVtYmVyLWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9udW1iZXItY29udHJvbC5jb21wb25lbnQuc2NzcyddLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aW1wb3J0czogW1xuXHRcdE5nRG9jSW5wdXRXcmFwcGVyQ29tcG9uZW50LFxuXHRcdERJQ29udHJvbFNpbGVuY2VyRGlyZWN0aXZlLFxuXHRcdE5nRG9jSW5wdXROdW1iZXJEaXJlY3RpdmUsXG5cdFx0Rm9ybXNNb2R1bGUsXG5cdFx0TmdJZixcblx0XHROZ0RvY0J1dHRvbkljb25Db21wb25lbnQsXG5cdFx0TmdEb2NGb2N1c2FibGVEaXJlY3RpdmUsXG5cdFx0TmdEb2NJY29uQ29tcG9uZW50LFxuXHRdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0RvY051bWJlckNvbnRyb2xDb21wb25lbnRcblx0ZXh0ZW5kcyBESUNvbnRyb2w8bnVtYmVyPlxuXHRpbXBsZW1lbnRzIE5nRG9jVHlwZUNvbnRyb2w8bnVtYmVyPlxue1xuXHRASW5wdXQoKVxuXHRkZWZhdWx0PzogbnVtYmVyO1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHRjaGFuZ2VNb2RlbCh2YWx1ZTogbnVtYmVyIHwgbnVsbCk6IHZvaWQge1xuXHRcdHRoaXMudXBkYXRlTW9kZWwodmFsdWUgPT09IG51bGwgJiYgdGhpcy5kZWZhdWx0ID8gdGhpcy5kZWZhdWx0IDogdmFsdWUpO1xuXHR9XG59XG4iLCI8bmctZG9jLWlucHV0LXdyYXBwZXIgZGlDb250cm9sU2lsZW5jZXIgW3JpZ2h0Q29udGVudF09XCJyaWdodENvbnRlbnRcIj5cblx0PGlucHV0IG5nRG9jSW5wdXROdW1iZXIgdHlwZT1cIm51bWJlclwiIFtuZ01vZGVsXT1cIm1vZGVsKClcIiAobmdNb2RlbENoYW5nZSk9XCJjaGFuZ2VNb2RlbCgkZXZlbnQpXCIgLz5cblx0PG5nLXRlbXBsYXRlICNyaWdodENvbnRlbnQ+XG5cdFx0PGJ1dHRvblxuXHRcdFx0bmctZG9jLWJ1dHRvbi1pY29uXG5cdFx0XHRzaXplPVwibGFyZ2VcIlxuXHRcdFx0W25nRG9jRm9jdXNhYmxlXT1cImZhbHNlXCJcblx0XHRcdFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXG5cdFx0XHRbcm91bmRlZF09XCJmYWxzZVwiXG5cdFx0XHQoY2xpY2spPVwidXBkYXRlTW9kZWwoZGVmYXVsdCA/PyBudWxsKVwiXG5cdFx0XHQoZm9jdXNvdXQpPVwidG91Y2goKVwiXG5cdFx0XHQqbmdJZj1cIm1vZGVsKCkgJiYgbW9kZWwoKSAhPT0gZGVmYXVsdFwiPlxuXHRcdFx0PG5nLWRvYy1pY29uIGljb249XCJ4XCI+PC9uZy1kb2MtaWNvbj5cblx0XHQ8L2J1dHRvbj5cblx0PC9uZy10ZW1wbGF0ZT5cbjwvbmctZG9jLWlucHV0LXdyYXBwZXI+XG4iXX0=