import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NgDocSanitizeHtmlPipe } from '@ng-doc/app/pipes';
import { NgDocBindPipe, NgDocExecutePipe, NgDocIconComponent, NgDocTabComponent, NgDocTabGroupComponent, } from '@ng-doc/ui-kit';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class NgDocTabsComponent {
    constructor() {
        this.tabs = [];
    }
    getActiveIndex(tabs) {
        return Math.max(tabs.findIndex((tab) => tab.active), 0);
    }
    appendElement(element, parent) {
        parent.appendChild(element);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocTabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocTabsComponent, isStandalone: true, selector: "ng-doc-tabs", inputs: { tabs: "tabs" }, ngImport: i0, template: "<ng-doc-tab-group [openedTab]=\"getActiveIndex | execute: tabs\">\n\t<ng-doc-tab *ngFor=\"let tab of tabs; let i = index\" [label]=\"label\" [content]=\"content\" [id]=\"i\">\n\t\t<ng-template #label>\n\t\t\t<ng-doc-icon [customIcon]=\"tab.icon\" *ngIf=\"tab.icon\"></ng-doc-icon>\n\t\t\t{{ tab.title }}\n\t\t</ng-template>\n\t\t<ng-template #content>\n\t\t\t<div #element>\n\t\t\t\t{{ appendElement | execute: tab.content:element }}\n\t\t\t</div>\n\t\t</ng-template>\n\t</ng-doc-tab>\n</ng-doc-tab-group>\n", styles: [":host{display:block;border-radius:var(--ng-doc-tabs-border-radius);border:var(--ng-doc-tabs-border);margin:var(--ng-doc-tabs-margin);overflow:hidden;--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-tab-group-header-background: var(--ng-doc-base-2)}:host ng-doc-icon{margin-right:calc(var(--ng-doc-base-gutter) / 2)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocTabGroupComponent, selector: "ng-doc-tab-group", inputs: ["openedTab"] }, { kind: "component", type: NgDocTabComponent, selector: "ng-doc-tab", inputs: ["label", "id", "content"] }, { kind: "pipe", type: NgDocExecutePipe, name: "execute" }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocTabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-tabs', standalone: true, imports: [
                        CommonModule,
                        NgDocTabGroupComponent,
                        NgDocTabComponent,
                        NgDocSanitizeHtmlPipe,
                        NgDocExecutePipe,
                        NgDocBindPipe,
                        NgDocIconComponent,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-doc-tab-group [openedTab]=\"getActiveIndex | execute: tabs\">\n\t<ng-doc-tab *ngFor=\"let tab of tabs; let i = index\" [label]=\"label\" [content]=\"content\" [id]=\"i\">\n\t\t<ng-template #label>\n\t\t\t<ng-doc-icon [customIcon]=\"tab.icon\" *ngIf=\"tab.icon\"></ng-doc-icon>\n\t\t\t{{ tab.title }}\n\t\t</ng-template>\n\t\t<ng-template #content>\n\t\t\t<div #element>\n\t\t\t\t{{ appendElement | execute: tab.content:element }}\n\t\t\t</div>\n\t\t</ng-template>\n\t</ng-doc-tab>\n</ng-doc-tab-group>\n", styles: [":host{display:block;border-radius:var(--ng-doc-tabs-border-radius);border:var(--ng-doc-tabs-border);margin:var(--ng-doc-tabs-margin);overflow:hidden;--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-tab-group-header-background: var(--ng-doc-base-2)}:host ng-doc-icon{margin-right:calc(var(--ng-doc-base-gutter) / 2)}\n"] }]
        }], propDecorators: { tabs: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL3RhYnMvdGFicy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL3RhYnMvdGFicy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDMUQsT0FBTyxFQUNOLGFBQWEsRUFDYixnQkFBZ0IsRUFDaEIsa0JBQWtCLEVBQ2xCLGlCQUFpQixFQUNqQixzQkFBc0IsR0FDdEIsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBa0J4QixNQUFNLE9BQU8sa0JBQWtCO0lBaEIvQjtRQWtCQyxTQUFJLEdBQWUsRUFBRSxDQUFDO0tBWXRCO0lBVkEsY0FBYyxDQUFDLElBQWdCO1FBQzlCLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FDZCxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBYSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQzdDLENBQUMsQ0FDRCxDQUFDO0lBQ0gsQ0FBQztJQUVELGFBQWEsQ0FBQyxPQUFnQixFQUFFLE1BQWU7UUFDOUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QixDQUFDOzhHQWJXLGtCQUFrQjtrR0FBbEIsa0JBQWtCLGlHQzVCL0IsNmZBYUEsZ2FER0UsWUFBWSxnUUFDWixzQkFBc0Isb0ZBQ3RCLGlCQUFpQixzRkFFakIsZ0JBQWdCLGdEQUVoQixrQkFBa0I7OzJGQU1QLGtCQUFrQjtrQkFoQjlCLFNBQVM7K0JBQ0MsYUFBYSxjQUNYLElBQUksV0FDUDt3QkFDUixZQUFZO3dCQUNaLHNCQUFzQjt3QkFDdEIsaUJBQWlCO3dCQUNqQixxQkFBcUI7d0JBQ3JCLGdCQUFnQjt3QkFDaEIsYUFBYTt3QkFDYixrQkFBa0I7cUJBQ2xCLG1CQUdnQix1QkFBdUIsQ0FBQyxNQUFNOzhCQUkvQyxJQUFJO3NCQURILEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nRG9jVGFiIH0gZnJvbSAnQG5nLWRvYy9hcHAvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBOZ0RvY1Nhbml0aXplSHRtbFBpcGUgfSBmcm9tICdAbmctZG9jL2FwcC9waXBlcyc7XG5pbXBvcnQge1xuXHROZ0RvY0JpbmRQaXBlLFxuXHROZ0RvY0V4ZWN1dGVQaXBlLFxuXHROZ0RvY0ljb25Db21wb25lbnQsXG5cdE5nRG9jVGFiQ29tcG9uZW50LFxuXHROZ0RvY1RhYkdyb3VwQ29tcG9uZW50LFxufSBmcm9tICdAbmctZG9jL3VpLWtpdCc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ25nLWRvYy10YWJzJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aW1wb3J0czogW1xuXHRcdENvbW1vbk1vZHVsZSxcblx0XHROZ0RvY1RhYkdyb3VwQ29tcG9uZW50LFxuXHRcdE5nRG9jVGFiQ29tcG9uZW50LFxuXHRcdE5nRG9jU2FuaXRpemVIdG1sUGlwZSxcblx0XHROZ0RvY0V4ZWN1dGVQaXBlLFxuXHRcdE5nRG9jQmluZFBpcGUsXG5cdFx0TmdEb2NJY29uQ29tcG9uZW50LFxuXHRdLFxuXHR0ZW1wbGF0ZVVybDogJy4vdGFicy5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL3RhYnMuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jVGFic0NvbXBvbmVudCB7XG5cdEBJbnB1dCgpXG5cdHRhYnM6IE5nRG9jVGFiW10gPSBbXTtcblxuXHRnZXRBY3RpdmVJbmRleCh0YWJzOiBOZ0RvY1RhYltdKTogbnVtYmVyIHtcblx0XHRyZXR1cm4gTWF0aC5tYXgoXG5cdFx0XHR0YWJzLmZpbmRJbmRleCgodGFiOiBOZ0RvY1RhYikgPT4gdGFiLmFjdGl2ZSksXG5cdFx0XHQwLFxuXHRcdCk7XG5cdH1cblxuXHRhcHBlbmRFbGVtZW50KGVsZW1lbnQ6IEVsZW1lbnQsIHBhcmVudDogRWxlbWVudCk6IHZvaWQge1xuXHRcdHBhcmVudC5hcHBlbmRDaGlsZChlbGVtZW50KTtcblx0fVxufVxuIiwiPG5nLWRvYy10YWItZ3JvdXAgW29wZW5lZFRhYl09XCJnZXRBY3RpdmVJbmRleCB8IGV4ZWN1dGU6IHRhYnNcIj5cblx0PG5nLWRvYy10YWIgKm5nRm9yPVwibGV0IHRhYiBvZiB0YWJzOyBsZXQgaSA9IGluZGV4XCIgW2xhYmVsXT1cImxhYmVsXCIgW2NvbnRlbnRdPVwiY29udGVudFwiIFtpZF09XCJpXCI+XG5cdFx0PG5nLXRlbXBsYXRlICNsYWJlbD5cblx0XHRcdDxuZy1kb2MtaWNvbiBbY3VzdG9tSWNvbl09XCJ0YWIuaWNvblwiICpuZ0lmPVwidGFiLmljb25cIj48L25nLWRvYy1pY29uPlxuXHRcdFx0e3sgdGFiLnRpdGxlIH19XG5cdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHQ8bmctdGVtcGxhdGUgI2NvbnRlbnQ+XG5cdFx0XHQ8ZGl2ICNlbGVtZW50PlxuXHRcdFx0XHR7eyBhcHBlbmRFbGVtZW50IHwgZXhlY3V0ZTogdGFiLmNvbnRlbnQ6ZWxlbWVudCB9fVxuXHRcdFx0PC9kaXY+XG5cdFx0PC9uZy10ZW1wbGF0ZT5cblx0PC9uZy1kb2MtdGFiPlxuPC9uZy1kb2MtdGFiLWdyb3VwPlxuIl19