import { NgComponentOutlet, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, Input, } from '@angular/core';
import { NgDocRootPage } from '@ng-doc/app/classes/root-page';
import { NgDocCodeComponent } from '@ng-doc/app/components/code';
import { NgDocFullscreenButtonComponent } from '@ng-doc/app/components/fullscreen-button';
import { asArray } from '@ng-doc/core/helpers/as-array';
import { NgDocPaneBackDirective, NgDocPaneComponent, NgDocPaneFrontDirective, NgDocTabComponent, NgDocTabGroupComponent, } from '@ng-doc/ui-kit';
import * as i0 from "@angular/core";
import * as i1 from "@ng-doc/app/classes/root-page";
export class NgDocDemoPaneComponent {
    constructor(rootPage) {
        this.rootPage = rootPage;
        this.options = {};
        this.assets = [];
    }
    get classes() {
        return this.options.class ?? '';
    }
    ngOnInit() {
        this.demo = this.getDemo();
        this.assets = this.getAssets();
    }
    getDemo() {
        if (this.componentName) {
            return this.rootPage.page?.demos && this.rootPage.page.demos[this.componentName];
        }
        return undefined;
    }
    getAssets() {
        if (this.componentName) {
            return ((this.rootPage.demoAssets && this.rootPage.demoAssets[this.componentName]) ??
                []).filter((asset) => !this.options.tabs?.length || asArray(this.options.tabs).includes(asset.title));
        }
        return [];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoPaneComponent, deps: [{ token: i1.NgDocRootPage }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.0", type: NgDocDemoPaneComponent, isStandalone: true, selector: "ng-doc-demo-pane", inputs: { componentName: "componentName", options: "options" }, host: { properties: { "class": "this.classes" } }, ngImport: i0, template: "<ng-doc-pane [expanded]=\"options.expanded ?? false\">\n\t<ng-container *ngTemplateOutlet=\"codeContent\" ngDocPaneBack></ng-container>\n\t<ng-container *ngTemplateOutlet=\"demoTemplate\" ngDocPaneFront></ng-container>\n</ng-doc-pane>\n\n<ng-template #demoTemplate>\n\t@if (options.fullscreenRoute) {\n\t<ng-doc-fullscreen-button [route]=\"options.fullscreenRoute!\"></ng-doc-fullscreen-button>\n\t} @else if (demo) {\n\t<ng-container *ngComponentOutlet=\"demo; inputs: options.inputs\"></ng-container>\n\t}\n</ng-template>\n\n<ng-template #codeContent>\n\t<ng-container *ngIf=\"assets.length === 1\">\n\t\t<ng-doc-code *ngFor=\"let asset of assets\" [html]=\"asset.code\"></ng-doc-code>\n\t</ng-container>\n\n\t<ng-container *ngIf=\"assets.length > 1\">\n\t\t<ng-doc-tab-group [openedTab]=\"options.defaultTab\">\n\t\t\t<ng-doc-tab\n\t\t\t\t*ngFor=\"let asset of assets\"\n\t\t\t\t[id]=\"asset.title\"\n\t\t\t\t[label]=\"asset.title\"\n\t\t\t\t[content]=\"assetContent\">\n\t\t\t\t<ng-template #assetContent>\n\t\t\t\t\t<ng-doc-code [html]=\"asset.code\"></ng-doc-code>\n\t\t\t\t</ng-template>\n\t\t\t</ng-doc-tab>\n\t\t</ng-doc-tab-group>\n\t</ng-container>\n</ng-template>\n", styles: [":host{display:block;height:var(--ng-doc-demo-pane-height);margin:var(--ng-doc-demo-pane-margin);--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-smooth-resize-height: var(--ng-doc-demo-pane-height);--ng-doc-smooth-resize-max-height: 100%;--ng-doc-tab-group-tabs-background: var(--ng-doc-base-2);--ng-doc-tab-group-border: none;--ng-doc-tab-group-border-radius: 0}:host ng-doc-tab-group,:host ng-doc-code,:host ng-doc-pane{width:100%;height:100%}\n"], dependencies: [{ kind: "component", type: NgDocPaneComponent, selector: "ng-doc-pane", inputs: ["expanded"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: NgDocPaneBackDirective, selector: "[ngDocPaneBack]" }, { kind: "directive", type: NgDocPaneFrontDirective, selector: "[ngDocPaneFront]" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocCodeComponent, selector: "ng-doc-code", inputs: ["html", "copyButton", "name", "icon", "lineNumbers"] }, { kind: "component", type: NgDocTabGroupComponent, selector: "ng-doc-tab-group", inputs: ["openedTab"] }, { kind: "component", type: NgDocTabComponent, selector: "ng-doc-tab", inputs: ["label", "id", "content"] }, { kind: "component", type: NgDocFullscreenButtonComponent, selector: "ng-doc-fullscreen-button", inputs: ["route"] }, { kind: "directive", type: NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInputs", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModule", "ngComponentOutletNgModuleFactory"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoPaneComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-demo-pane', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocPaneComponent,
                        NgTemplateOutlet,
                        NgDocPaneBackDirective,
                        NgDocPaneFrontDirective,
                        NgIf,
                        NgFor,
                        NgDocCodeComponent,
                        NgDocTabGroupComponent,
                        NgDocTabComponent,
                        NgDocFullscreenButtonComponent,
                        NgComponentOutlet,
                    ], template: "<ng-doc-pane [expanded]=\"options.expanded ?? false\">\n\t<ng-container *ngTemplateOutlet=\"codeContent\" ngDocPaneBack></ng-container>\n\t<ng-container *ngTemplateOutlet=\"demoTemplate\" ngDocPaneFront></ng-container>\n</ng-doc-pane>\n\n<ng-template #demoTemplate>\n\t@if (options.fullscreenRoute) {\n\t<ng-doc-fullscreen-button [route]=\"options.fullscreenRoute!\"></ng-doc-fullscreen-button>\n\t} @else if (demo) {\n\t<ng-container *ngComponentOutlet=\"demo; inputs: options.inputs\"></ng-container>\n\t}\n</ng-template>\n\n<ng-template #codeContent>\n\t<ng-container *ngIf=\"assets.length === 1\">\n\t\t<ng-doc-code *ngFor=\"let asset of assets\" [html]=\"asset.code\"></ng-doc-code>\n\t</ng-container>\n\n\t<ng-container *ngIf=\"assets.length > 1\">\n\t\t<ng-doc-tab-group [openedTab]=\"options.defaultTab\">\n\t\t\t<ng-doc-tab\n\t\t\t\t*ngFor=\"let asset of assets\"\n\t\t\t\t[id]=\"asset.title\"\n\t\t\t\t[label]=\"asset.title\"\n\t\t\t\t[content]=\"assetContent\">\n\t\t\t\t<ng-template #assetContent>\n\t\t\t\t\t<ng-doc-code [html]=\"asset.code\"></ng-doc-code>\n\t\t\t\t</ng-template>\n\t\t\t</ng-doc-tab>\n\t\t</ng-doc-tab-group>\n\t</ng-container>\n</ng-template>\n", styles: [":host{display:block;height:var(--ng-doc-demo-pane-height);margin:var(--ng-doc-demo-pane-margin);--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none;--ng-doc-smooth-resize-height: var(--ng-doc-demo-pane-height);--ng-doc-smooth-resize-max-height: 100%;--ng-doc-tab-group-tabs-background: var(--ng-doc-base-2);--ng-doc-tab-group-border: none;--ng-doc-tab-group-border-radius: 0}:host ng-doc-tab-group,:host ng-doc-code,:host ng-doc-pane{width:100%;height:100%}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgDocRootPage }], propDecorators: { componentName: [{
                type: Input
            }], options: [{
                type: Input
            }], classes: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVtby1wYW5lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYXBwL2NvbXBvbmVudHMvZGVtby1wYW5lL2RlbW8tcGFuZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL2RlbW8tcGFuZS9kZW1vLXBhbmUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRixPQUFPLEVBQ04sdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxHQUdMLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUUxRixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFeEQsT0FBTyxFQUNOLHNCQUFzQixFQUN0QixrQkFBa0IsRUFDbEIsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixzQkFBc0IsR0FDdEIsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBc0J4QixNQUFNLE9BQU8sc0JBQXNCO0lBVWxDLFlBQTZCLFFBQXVCO1FBQXZCLGFBQVEsR0FBUixRQUFRLENBQWU7UUFMcEQsWUFBTyxHQUErQixFQUFFLENBQUM7UUFHekMsV0FBTSxHQUFxQixFQUFFLENBQUM7SUFFeUIsQ0FBQztJQUV4RCxJQUNjLE9BQU87UUFDcEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELFFBQVE7UUFDUCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU8sT0FBTztRQUNkLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQ3hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEYsQ0FBQztRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ2xCLENBQUM7SUFFTyxTQUFTO1FBQ2hCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQ3hCLE9BQU8sQ0FDTixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDMUUsRUFBRSxDQUNGLENBQUMsTUFBTSxDQUNQLENBQUMsS0FBcUIsRUFBRSxFQUFFLENBQ3pCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQy9FLENBQUM7UUFDSCxDQUFDO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDOzhHQTFDVyxzQkFBc0I7a0dBQXRCLHNCQUFzQiwrTEMzQ25DLDJwQ0FnQ0EsbWlCREZFLGtCQUFrQiw4RUFDbEIsZ0JBQWdCLG9KQUNoQixzQkFBc0IsNERBQ3RCLHVCQUF1Qiw2REFDdkIsSUFBSSw2RkFDSixLQUFLLG1IQUNMLGtCQUFrQix1SEFDbEIsc0JBQXNCLG9GQUN0QixpQkFBaUIsMkZBQ2pCLDhCQUE4Qix3RkFDOUIsaUJBQWlCOzsyRkFHTixzQkFBc0I7a0JBcEJsQyxTQUFTOytCQUNDLGtCQUFrQixtQkFHWCx1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUDt3QkFDUixrQkFBa0I7d0JBQ2xCLGdCQUFnQjt3QkFDaEIsc0JBQXNCO3dCQUN0Qix1QkFBdUI7d0JBQ3ZCLElBQUk7d0JBQ0osS0FBSzt3QkFDTCxrQkFBa0I7d0JBQ2xCLHNCQUFzQjt3QkFDdEIsaUJBQWlCO3dCQUNqQiw4QkFBOEI7d0JBQzlCLGlCQUFpQjtxQkFDakI7a0ZBSUQsYUFBYTtzQkFEWixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFTUSxPQUFPO3NCQURwQixXQUFXO3VCQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0NvbXBvbmVudE91dGxldCwgTmdGb3IsIE5nSWYsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcblx0Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG5cdENvbXBvbmVudCxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0LFxuXHRPbkluaXQsXG5cdFR5cGUsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdEb2NSb290UGFnZSB9IGZyb20gJ0BuZy1kb2MvYXBwL2NsYXNzZXMvcm9vdC1wYWdlJztcbmltcG9ydCB7IE5nRG9jQ29kZUNvbXBvbmVudCB9IGZyb20gJ0BuZy1kb2MvYXBwL2NvbXBvbmVudHMvY29kZSc7XG5pbXBvcnQgeyBOZ0RvY0Z1bGxzY3JlZW5CdXR0b25Db21wb25lbnQgfSBmcm9tICdAbmctZG9jL2FwcC9jb21wb25lbnRzL2Z1bGxzY3JlZW4tYnV0dG9uJztcbmltcG9ydCB7IE5nRG9jRGVtb0Fzc2V0IH0gZnJvbSAnQG5nLWRvYy9hcHAvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBhc0FycmF5IH0gZnJvbSAnQG5nLWRvYy9jb3JlL2hlbHBlcnMvYXMtYXJyYXknO1xuaW1wb3J0IHsgTmdEb2NEZW1vUGFuZUFjdGlvbk9wdGlvbnMgfSBmcm9tICdAbmctZG9jL2NvcmUvaW50ZXJmYWNlcyc7XG5pbXBvcnQge1xuXHROZ0RvY1BhbmVCYWNrRGlyZWN0aXZlLFxuXHROZ0RvY1BhbmVDb21wb25lbnQsXG5cdE5nRG9jUGFuZUZyb250RGlyZWN0aXZlLFxuXHROZ0RvY1RhYkNvbXBvbmVudCxcblx0TmdEb2NUYWJHcm91cENvbXBvbmVudCxcbn0gZnJvbSAnQG5nLWRvYy91aS1raXQnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICduZy1kb2MtZGVtby1wYW5lJyxcblx0dGVtcGxhdGVVcmw6ICcuL2RlbW8tcGFuZS5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2RlbW8tcGFuZS5jb21wb25lbnQuc2NzcyddLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aW1wb3J0czogW1xuXHRcdE5nRG9jUGFuZUNvbXBvbmVudCxcblx0XHROZ1RlbXBsYXRlT3V0bGV0LFxuXHRcdE5nRG9jUGFuZUJhY2tEaXJlY3RpdmUsXG5cdFx0TmdEb2NQYW5lRnJvbnREaXJlY3RpdmUsXG5cdFx0TmdJZixcblx0XHROZ0Zvcixcblx0XHROZ0RvY0NvZGVDb21wb25lbnQsXG5cdFx0TmdEb2NUYWJHcm91cENvbXBvbmVudCxcblx0XHROZ0RvY1RhYkNvbXBvbmVudCxcblx0XHROZ0RvY0Z1bGxzY3JlZW5CdXR0b25Db21wb25lbnQsXG5cdFx0TmdDb21wb25lbnRPdXRsZXQsXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jRGVtb1BhbmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXHRASW5wdXQoKVxuXHRjb21wb25lbnROYW1lPzogc3RyaW5nO1xuXG5cdEBJbnB1dCgpXG5cdG9wdGlvbnM6IE5nRG9jRGVtb1BhbmVBY3Rpb25PcHRpb25zID0ge307XG5cblx0ZGVtbz86IFR5cGU8dW5rbm93bj47XG5cdGFzc2V0czogTmdEb2NEZW1vQXNzZXRbXSA9IFtdO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgcm9vdFBhZ2U6IE5nRG9jUm9vdFBhZ2UpIHt9XG5cblx0QEhvc3RCaW5kaW5nKCdjbGFzcycpXG5cdHByb3RlY3RlZCBnZXQgY2xhc3NlcygpOiBzdHJpbmcgfCBzdHJpbmdbXSB7XG5cdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5jbGFzcyA/PyAnJztcblx0fVxuXG5cdG5nT25Jbml0KCk6IHZvaWQge1xuXHRcdHRoaXMuZGVtbyA9IHRoaXMuZ2V0RGVtbygpO1xuXHRcdHRoaXMuYXNzZXRzID0gdGhpcy5nZXRBc3NldHMoKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0RGVtbygpOiBUeXBlPHVua25vd24+IHwgdW5kZWZpbmVkIHtcblx0XHRpZiAodGhpcy5jb21wb25lbnROYW1lKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5yb290UGFnZS5wYWdlPy5kZW1vcyAmJiB0aGlzLnJvb3RQYWdlLnBhZ2UuZGVtb3NbdGhpcy5jb21wb25lbnROYW1lXTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRBc3NldHMoKTogTmdEb2NEZW1vQXNzZXRbXSB7XG5cdFx0aWYgKHRoaXMuY29tcG9uZW50TmFtZSkge1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0KHRoaXMucm9vdFBhZ2UuZGVtb0Fzc2V0cyAmJiB0aGlzLnJvb3RQYWdlLmRlbW9Bc3NldHNbdGhpcy5jb21wb25lbnROYW1lXSkgPz9cblx0XHRcdFx0W11cblx0XHRcdCkuZmlsdGVyKFxuXHRcdFx0XHQoYXNzZXQ6IE5nRG9jRGVtb0Fzc2V0KSA9PlxuXHRcdFx0XHRcdCF0aGlzLm9wdGlvbnMudGFicz8ubGVuZ3RoIHx8IGFzQXJyYXkodGhpcy5vcHRpb25zLnRhYnMpLmluY2x1ZGVzKGFzc2V0LnRpdGxlKSxcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIFtdO1xuXHR9XG59XG4iLCI8bmctZG9jLXBhbmUgW2V4cGFuZGVkXT1cIm9wdGlvbnMuZXhwYW5kZWQgPz8gZmFsc2VcIj5cblx0PG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvZGVDb250ZW50XCIgbmdEb2NQYW5lQmFjaz48L25nLWNvbnRhaW5lcj5cblx0PG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImRlbW9UZW1wbGF0ZVwiIG5nRG9jUGFuZUZyb250PjwvbmctY29udGFpbmVyPlxuPC9uZy1kb2MtcGFuZT5cblxuPG5nLXRlbXBsYXRlICNkZW1vVGVtcGxhdGU+XG5cdEBpZiAob3B0aW9ucy5mdWxsc2NyZWVuUm91dGUpIHtcblx0PG5nLWRvYy1mdWxsc2NyZWVuLWJ1dHRvbiBbcm91dGVdPVwib3B0aW9ucy5mdWxsc2NyZWVuUm91dGUhXCI+PC9uZy1kb2MtZnVsbHNjcmVlbi1idXR0b24+XG5cdH0gQGVsc2UgaWYgKGRlbW8pIHtcblx0PG5nLWNvbnRhaW5lciAqbmdDb21wb25lbnRPdXRsZXQ9XCJkZW1vOyBpbnB1dHM6IG9wdGlvbnMuaW5wdXRzXCI+PC9uZy1jb250YWluZXI+XG5cdH1cbjwvbmctdGVtcGxhdGU+XG5cbjxuZy10ZW1wbGF0ZSAjY29kZUNvbnRlbnQ+XG5cdDxuZy1jb250YWluZXIgKm5nSWY9XCJhc3NldHMubGVuZ3RoID09PSAxXCI+XG5cdFx0PG5nLWRvYy1jb2RlICpuZ0Zvcj1cImxldCBhc3NldCBvZiBhc3NldHNcIiBbaHRtbF09XCJhc3NldC5jb2RlXCI+PC9uZy1kb2MtY29kZT5cblx0PC9uZy1jb250YWluZXI+XG5cblx0PG5nLWNvbnRhaW5lciAqbmdJZj1cImFzc2V0cy5sZW5ndGggPiAxXCI+XG5cdFx0PG5nLWRvYy10YWItZ3JvdXAgW29wZW5lZFRhYl09XCJvcHRpb25zLmRlZmF1bHRUYWJcIj5cblx0XHRcdDxuZy1kb2MtdGFiXG5cdFx0XHRcdCpuZ0Zvcj1cImxldCBhc3NldCBvZiBhc3NldHNcIlxuXHRcdFx0XHRbaWRdPVwiYXNzZXQudGl0bGVcIlxuXHRcdFx0XHRbbGFiZWxdPVwiYXNzZXQudGl0bGVcIlxuXHRcdFx0XHRbY29udGVudF09XCJhc3NldENvbnRlbnRcIj5cblx0XHRcdFx0PG5nLXRlbXBsYXRlICNhc3NldENvbnRlbnQ+XG5cdFx0XHRcdFx0PG5nLWRvYy1jb2RlIFtodG1sXT1cImFzc2V0LmNvZGVcIj48L25nLWRvYy1jb2RlPlxuXHRcdFx0XHQ8L25nLXRlbXBsYXRlPlxuXHRcdFx0PC9uZy1kb2MtdGFiPlxuXHRcdDwvbmctZG9jLXRhYi1ncm91cD5cblx0PC9uZy1jb250YWluZXI+XG48L25nLXRlbXBsYXRlPlxuIl19