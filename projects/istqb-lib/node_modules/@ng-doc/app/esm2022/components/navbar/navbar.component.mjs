import { __decorate, __metadata } from "tslib";
import { AsyncPipe, NgIf } from '@angular/common';
import { afterNextRender, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Inject, Input, NgZone, } from '@angular/core';
import { NgDocSearchComponent } from '@ng-doc/app/components/search';
import { NgDocSidebarService } from '@ng-doc/app/services';
import { NgDocButtonIconComponent, NgDocIconComponent, NgDocLetDirective, ngDocZoneOptimize, } from '@ng-doc/ui-kit';
import { WINDOW } from '@ng-web-apis/common';
import { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { combineLatest, fromEvent } from 'rxjs';
import { distinctUntilChanged, map, startWith } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@ng-doc/app/services";
import * as i2 from "@tinkoff/ng-polymorpheus";
/**
 * Navbar component for ng-doc application
 */
let NgDocNavbarComponent = class NgDocNavbarComponent {
    constructor(window, ngZone, changeDetectorRef, sidebarService) {
        this.window = window;
        this.ngZone = ngZone;
        this.changeDetectorRef = changeDetectorRef;
        this.sidebarService = sidebarService;
        /**
         * Content for left side of navbar
         */
        this.leftContent = '';
        /**
         * Content for center side of navbar
         */
        this.centerContent = '';
        /**
         * Content for right side of navbar
         */
        this.rightContent = '';
        /**
         * Show search input
         */
        this.search = true;
        /**
         * Show hamburger button
         */
        this.hamburger = true;
        /**
         * Use glass effect for navbar
         */
        this.glassEffect = true;
        /**
         * Indicates if navbar has shadow
         */
        this.hasShadow = false;
        afterNextRender(() => {
            combineLatest([
                fromEvent(this.window, 'scroll').pipe(map((e) => (e.target?.scrollingElement?.scrollTop ?? 0) > 0), distinctUntilChanged(), startWith(false), ngDocZoneOptimize(this.ngZone)),
                this.sidebarService.isMobileMode(),
                this.sidebarService.isExpanded(),
            ])
                .pipe(map(([scrolled, isMobileMode, isExpanded]) => scrolled || (isMobileMode && isExpanded)), untilDestroyed(this))
                .subscribe((hasShadow) => {
                this.hasShadow = hasShadow;
                this.changeDetectorRef.markForCheck();
            });
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocNavbarComponent, deps: [{ token: WINDOW }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.NgDocSidebarService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.0", type: NgDocNavbarComponent, isStandalone: true, selector: "ng-doc-navbar", inputs: { leftContent: "leftContent", centerContent: "centerContent", rightContent: "rightContent", search: "search", hamburger: "hamburger", glassEffect: "glassEffect" }, host: { attributes: { "ngSkipHydration": "true" }, properties: { "attr.data-glass-effect": "this.glassEffect", "class.has-shadow": "this.hasShadow" } }, ngImport: i0, template: "<div class=\"navbar-container\" *ngDocLet=\"sidebarService.isMobileMode() | async as isMobileMode\">\n\t<div class=\"ng-doc-navbar-left\">\n\t\t<ng-container *polymorpheusOutlet=\"leftContent\"></ng-container>\n\t</div>\n\t<div class=\"ng-doc-navbar-center\">\n\t\t<ng-container *polymorpheusOutlet=\"centerContent\"></ng-container>\n\t\t@if (search && !isMobileMode) {\n\t\t<ng-doc-search></ng-doc-search>\n\t\t}\n\t</div>\n\t<div class=\"ng-doc-navbar-right\">\n\t\t@if (search && isMobileMode) {\n\t\t<ng-doc-search mod=\"icon\"></ng-doc-search>\n\t\t}\n\t\t<ng-container *polymorpheusOutlet=\"rightContent\"></ng-container>\n\t\t<button\n\t\t\tclass=\"ng-doc-menu\"\n\t\t\t*ngIf=\"isMobileMode && hamburger\"\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t(click)=\"sidebarService.toggle()\">\n\t\t\t<ng-doc-icon icon=\"menu\" [size]=\"24\"></ng-doc-icon>\n\t\t</button>\n\t</div>\n</div>\n", styles: [":host{position:relative;display:flex;justify-content:center;height:100%;transition:var(--ng-doc-transition) box-shadow}:host:not([data-glass-effect=false]){-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px)}:host:not([data-glass-effect=false]){position:relative}:host:not([data-glass-effect=false]):before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:var(--ng-doc-navbar-background);opacity:.6;border-radius:inherit;overflow:hidden;pointer-events:none}@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)){:host{background-color:var(--ng-doc-navbar-background)}}:host[data-glass-effect=false]{background-color:var(--ng-doc-navbar-background)}:host.has-shadow{box-shadow:var(--ng-doc-shadow-color) 0 5px 20px -5px}:host .navbar-container{display:flex;height:100%;width:100%;padding:0 var(--ng-doc-navbar-horizontal-padding);z-index:10;max-width:var(--ng-doc-app-max-width)}:host .ng-doc-navbar-left,:host .ng-doc-navbar-center,:host .ng-doc-navbar-right{display:flex;align-items:center}:host .ng-doc-navbar-left{justify-content:flex-start;width:100%;max-width:var(--ng-doc-navbar-left-width)}:host .ng-doc-navbar-center{padding:0 var(--ng-doc-app-horizontal-padding);justify-content:flex-start;max-width:calc(100% - var(--ng-doc-toc-width))}:host .ng-doc-navbar-right{justify-content:flex-end;margin-left:auto}:host .ng-doc-menu{margin-left:calc(var(--ng-doc-base-gutter) * 2)}\n"], dependencies: [{ kind: "directive", type: NgDocLetDirective, selector: "[ngDocLet]", inputs: ["ngDocLet"] }, { kind: "ngmodule", type: PolymorpheusModule }, { kind: "directive", type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocSearchComponent, selector: "ng-doc-search", inputs: ["mod"] }, { kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }, { kind: "pipe", type: AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
};
NgDocNavbarComponent = __decorate([
    UntilDestroy(),
    __metadata("design:paramtypes", [Window,
        NgZone,
        ChangeDetectorRef,
        NgDocSidebarService])
], NgDocNavbarComponent);
export { NgDocNavbarComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocNavbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-navbar', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocLetDirective,
                        PolymorpheusModule,
                        NgIf,
                        NgDocSearchComponent,
                        NgDocButtonIconComponent,
                        NgDocIconComponent,
                        AsyncPipe,
                    ], host: { ngSkipHydration: 'true' }, template: "<div class=\"navbar-container\" *ngDocLet=\"sidebarService.isMobileMode() | async as isMobileMode\">\n\t<div class=\"ng-doc-navbar-left\">\n\t\t<ng-container *polymorpheusOutlet=\"leftContent\"></ng-container>\n\t</div>\n\t<div class=\"ng-doc-navbar-center\">\n\t\t<ng-container *polymorpheusOutlet=\"centerContent\"></ng-container>\n\t\t@if (search && !isMobileMode) {\n\t\t<ng-doc-search></ng-doc-search>\n\t\t}\n\t</div>\n\t<div class=\"ng-doc-navbar-right\">\n\t\t@if (search && isMobileMode) {\n\t\t<ng-doc-search mod=\"icon\"></ng-doc-search>\n\t\t}\n\t\t<ng-container *polymorpheusOutlet=\"rightContent\"></ng-container>\n\t\t<button\n\t\t\tclass=\"ng-doc-menu\"\n\t\t\t*ngIf=\"isMobileMode && hamburger\"\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t(click)=\"sidebarService.toggle()\">\n\t\t\t<ng-doc-icon icon=\"menu\" [size]=\"24\"></ng-doc-icon>\n\t\t</button>\n\t</div>\n</div>\n", styles: [":host{position:relative;display:flex;justify-content:center;height:100%;transition:var(--ng-doc-transition) box-shadow}:host:not([data-glass-effect=false]){-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px)}:host:not([data-glass-effect=false]){position:relative}:host:not([data-glass-effect=false]):before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:var(--ng-doc-navbar-background);opacity:.6;border-radius:inherit;overflow:hidden;pointer-events:none}@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)){:host{background-color:var(--ng-doc-navbar-background)}}:host[data-glass-effect=false]{background-color:var(--ng-doc-navbar-background)}:host.has-shadow{box-shadow:var(--ng-doc-shadow-color) 0 5px 20px -5px}:host .navbar-container{display:flex;height:100%;width:100%;padding:0 var(--ng-doc-navbar-horizontal-padding);z-index:10;max-width:var(--ng-doc-app-max-width)}:host .ng-doc-navbar-left,:host .ng-doc-navbar-center,:host .ng-doc-navbar-right{display:flex;align-items:center}:host .ng-doc-navbar-left{justify-content:flex-start;width:100%;max-width:var(--ng-doc-navbar-left-width)}:host .ng-doc-navbar-center{padding:0 var(--ng-doc-app-horizontal-padding);justify-content:flex-start;max-width:calc(100% - var(--ng-doc-toc-width))}:host .ng-doc-navbar-right{justify-content:flex-end;margin-left:auto}:host .ng-doc-menu{margin-left:calc(var(--ng-doc-base-gutter) * 2)}\n"] }]
        }], ctorParameters: () => [{ type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.NgDocSidebarService }], propDecorators: { leftContent: [{
                type: Input
            }], centerContent: [{
                type: Input
            }], rightContent: [{
                type: Input
            }], search: [{
                type: Input
            }], hamburger: [{
                type: Input
            }], glassEffect: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-glass-effect']
            }], hasShadow: [{
                type: HostBinding,
                args: ['class.has-shadow']
            }] } });
//# sourceMappingURL=data:application/json;base64,