import { KeyValuePipe, NgFor, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { RouterLink } from '@angular/router';
import { NgDocKindIconComponent } from '@ng-doc/app/components/kind-icon';
import { NgDocTextComponent, NgDocTooltipDirective } from '@ng-doc/ui-kit';
import * as i0 from "@angular/core";
export class NgDocSearchResultComponent {
    constructor() {
        this.result = [];
        this.groupedResult = {};
    }
    ngOnChanges({ result }) {
        if (result && this.result) {
            this.groupedResult = this.result.reduce((grouped, item) => {
                if (!grouped[item.type]) {
                    grouped[item.type] = [];
                }
                grouped[item.type].push(item);
                return grouped;
            }, {});
        }
    }
    typeToLabel(type) {
        switch (type) {
            case 'api':
                return 'API';
            case 'guide':
                return 'Guides';
            default:
                return 'Unknown';
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSearchResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSearchResultComponent, isStandalone: true, selector: "ng-doc-search-result", inputs: { result: "result" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"ng-doc-search-result-wrapper\" *ngIf=\"groupedResult | keyvalue as results\">\n\t<ng-container *ngIf=\"results.length; else emptyTemplate\">\n\t\t<div class=\"ng-doc-search-result-category\" *ngFor=\"let item of results\">\n\t\t\t<h4 class=\"ng-doc-search-result-title\" ng-doc-text>{{ typeToLabel(item.key) }}</h4>\n\t\t\t<ul class=\"ng-doc-search-result-pages\">\n\t\t\t\t<li class=\"ng-doc-search-result-page\" *ngFor=\"let page of item.value\">\n\t\t\t\t\t<a class=\"ng-doc-search-result-page-link\" [routerLink]=\"[page.route]\">\n\t\t\t\t\t\t<ng-doc-kind-icon\n\t\t\t\t\t\t\t*ngIf=\"page.kind\"\n\t\t\t\t\t\t\t[kind]=\"page.kind\"\n\t\t\t\t\t\t\t[ngDocTooltip]=\"page.kind\"></ng-doc-kind-icon>\n\t\t\t\t\t\t{{ page.title }}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</ng-container>\n\t<ng-template #emptyTemplate>\n\t\t<div ng-doc-text color=\"muted\">Nothing was found...</div>\n\t</ng-template>\n</div>\n", styles: [":host{display:block}:host .ng-doc-search-result-wrapper{display:flex;flex-direction:row}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category:not(:last-child){margin-right:calc(var(--ng-doc-base-gutter) * 2)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-title{margin:0 0 calc(var(--ng-doc-base-gutter) * 2)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages{list-style:none;padding:0;margin:0}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page{margin-bottom:var(--ng-doc-base-gutter)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page .ng-doc-search-result-page-link{display:flex;align-items:center;text-decoration:none;color:var(--ng-doc-text)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page .ng-doc-search-result-page-link ng-doc-kind-icon{margin-right:var(--ng-doc-base-gutter)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocTextComponent, selector: "[ng-doc-text]", inputs: ["size", "color", "align", "absoluteContent"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: NgDocKindIconComponent, selector: "ng-doc-kind-icon", inputs: ["kind", "type"] }, { kind: "directive", type: NgDocTooltipDirective, selector: "[ngDocTooltip]", inputs: ["ngDocTooltip", "delay", "displayOrigin", "pointerOrigin", "positions", "canOpen", "panelClass", "minHeight", "maxHeight", "height", "minWidth", "maxWidth", "width"], outputs: ["beforeOpen", "afterOpen", "beforeClose", "afterClose"], exportAs: ["ngDocTooltip"] }, { kind: "pipe", type: KeyValuePipe, name: "keyvalue" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSearchResultComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-search-result', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf,
                        NgFor,
                        NgDocTextComponent,
                        RouterLink,
                        NgDocKindIconComponent,
                        NgDocTooltipDirective,
                        KeyValuePipe,
                    ], template: "<div class=\"ng-doc-search-result-wrapper\" *ngIf=\"groupedResult | keyvalue as results\">\n\t<ng-container *ngIf=\"results.length; else emptyTemplate\">\n\t\t<div class=\"ng-doc-search-result-category\" *ngFor=\"let item of results\">\n\t\t\t<h4 class=\"ng-doc-search-result-title\" ng-doc-text>{{ typeToLabel(item.key) }}</h4>\n\t\t\t<ul class=\"ng-doc-search-result-pages\">\n\t\t\t\t<li class=\"ng-doc-search-result-page\" *ngFor=\"let page of item.value\">\n\t\t\t\t\t<a class=\"ng-doc-search-result-page-link\" [routerLink]=\"[page.route]\">\n\t\t\t\t\t\t<ng-doc-kind-icon\n\t\t\t\t\t\t\t*ngIf=\"page.kind\"\n\t\t\t\t\t\t\t[kind]=\"page.kind\"\n\t\t\t\t\t\t\t[ngDocTooltip]=\"page.kind\"></ng-doc-kind-icon>\n\t\t\t\t\t\t{{ page.title }}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</ng-container>\n\t<ng-template #emptyTemplate>\n\t\t<div ng-doc-text color=\"muted\">Nothing was found...</div>\n\t</ng-template>\n</div>\n", styles: [":host{display:block}:host .ng-doc-search-result-wrapper{display:flex;flex-direction:row}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category:not(:last-child){margin-right:calc(var(--ng-doc-base-gutter) * 2)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-title{margin:0 0 calc(var(--ng-doc-base-gutter) * 2)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages{list-style:none;padding:0;margin:0}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page{margin-bottom:var(--ng-doc-base-gutter)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page .ng-doc-search-result-page-link{display:flex;align-items:center;text-decoration:none;color:var(--ng-doc-text)}:host .ng-doc-search-result-wrapper .ng-doc-search-result-category .ng-doc-search-result-pages .ng-doc-search-result-page .ng-doc-search-result-page-link ng-doc-kind-icon{margin-right:var(--ng-doc-base-gutter)}\n"] }]
        }], propDecorators: { result: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXJlc3VsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL3NlYXJjaC1yZXN1bHQvc2VhcmNoLXJlc3VsdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL3NlYXJjaC1yZXN1bHQvc2VhcmNoLXJlc3VsdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDcEcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRTFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQWtCM0UsTUFBTSxPQUFPLDBCQUEwQjtJQWhCdkM7UUFrQkMsV0FBTSxHQUEyQixFQUFFLENBQUM7UUFFcEMsa0JBQWEsR0FBb0MsRUFBRSxDQUFDO0tBNkJwRDtJQTNCQSxXQUFXLENBQUMsRUFBRSxNQUFNLEVBQWlCO1FBQ3BDLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUN0QyxDQUFDLE9BQXdDLEVBQUUsSUFBbUIsRUFBRSxFQUFFO2dCQUNqRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO29CQUN6QixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDekIsQ0FBQztnQkFFRCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFFOUIsT0FBTyxPQUFPLENBQUM7WUFDaEIsQ0FBQyxFQUNELEVBQUUsQ0FDRixDQUFDO1FBQ0gsQ0FBQztJQUNGLENBQUM7SUFFRCxXQUFXLENBQUMsSUFBWTtRQUN2QixRQUFRLElBQUksRUFBRSxDQUFDO1lBQ2QsS0FBSyxLQUFLO2dCQUNULE9BQU8sS0FBSyxDQUFDO1lBQ2QsS0FBSyxPQUFPO2dCQUNYLE9BQU8sUUFBUSxDQUFDO1lBQ2pCO2dCQUNDLE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7SUFDRixDQUFDOzhHQWhDVywwQkFBMEI7a0dBQTFCLDBCQUEwQixtSUN2QnZDLGk3QkFxQkEscW9DRFBFLElBQUksNkZBQ0osS0FBSyxtSEFDTCxrQkFBa0IsaUhBQ2xCLFVBQVUsb09BQ1Ysc0JBQXNCLHVGQUN0QixxQkFBcUIscVVBQ3JCLFlBQVk7OzJGQUdELDBCQUEwQjtrQkFoQnRDLFNBQVM7K0JBQ0Msc0JBQXNCLG1CQUdmLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQO3dCQUNSLElBQUk7d0JBQ0osS0FBSzt3QkFDTCxrQkFBa0I7d0JBQ2xCLFVBQVU7d0JBQ1Ysc0JBQXNCO3dCQUN0QixxQkFBcUI7d0JBQ3JCLFlBQVk7cUJBQ1o7OEJBSUQsTUFBTTtzQkFETCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5VmFsdWVQaXBlLCBOZ0ZvciwgTmdJZiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJMaW5rIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE5nRG9jS2luZEljb25Db21wb25lbnQgfSBmcm9tICdAbmctZG9jL2FwcC9jb21wb25lbnRzL2tpbmQtaWNvbic7XG5pbXBvcnQgeyBOZ0RvY1BhZ2VJbmZvIH0gZnJvbSAnQG5nLWRvYy9jb3JlL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgTmdEb2NUZXh0Q29tcG9uZW50LCBOZ0RvY1Rvb2x0aXBEaXJlY3RpdmUgfSBmcm9tICdAbmctZG9jL3VpLWtpdCc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ25nLWRvYy1zZWFyY2gtcmVzdWx0Jyxcblx0dGVtcGxhdGVVcmw6ICcuL3NlYXJjaC1yZXN1bHQuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9zZWFyY2gtcmVzdWx0LmNvbXBvbmVudC5zY3NzJ10sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbXG5cdFx0TmdJZixcblx0XHROZ0Zvcixcblx0XHROZ0RvY1RleHRDb21wb25lbnQsXG5cdFx0Um91dGVyTGluayxcblx0XHROZ0RvY0tpbmRJY29uQ29tcG9uZW50LFxuXHRcdE5nRG9jVG9vbHRpcERpcmVjdGl2ZSxcblx0XHRLZXlWYWx1ZVBpcGUsXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jU2VhcmNoUmVzdWx0Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcblx0QElucHV0KClcblx0cmVzdWx0OiBOZ0RvY1BhZ2VJbmZvW10gfCBudWxsID0gW107XG5cblx0Z3JvdXBlZFJlc3VsdDogUmVjb3JkPHN0cmluZywgTmdEb2NQYWdlSW5mb1tdPiA9IHt9O1xuXG5cdG5nT25DaGFuZ2VzKHsgcmVzdWx0IH06IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcblx0XHRpZiAocmVzdWx0ICYmIHRoaXMucmVzdWx0KSB7XG5cdFx0XHR0aGlzLmdyb3VwZWRSZXN1bHQgPSB0aGlzLnJlc3VsdC5yZWR1Y2UoXG5cdFx0XHRcdChncm91cGVkOiBSZWNvcmQ8c3RyaW5nLCBOZ0RvY1BhZ2VJbmZvW10+LCBpdGVtOiBOZ0RvY1BhZ2VJbmZvKSA9PiB7XG5cdFx0XHRcdFx0aWYgKCFncm91cGVkW2l0ZW0udHlwZV0pIHtcblx0XHRcdFx0XHRcdGdyb3VwZWRbaXRlbS50eXBlXSA9IFtdO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGdyb3VwZWRbaXRlbS50eXBlXS5wdXNoKGl0ZW0pO1xuXG5cdFx0XHRcdFx0cmV0dXJuIGdyb3VwZWQ7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHt9LFxuXHRcdFx0KTtcblx0XHR9XG5cdH1cblxuXHR0eXBlVG9MYWJlbCh0eXBlOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0Y2FzZSAnYXBpJzpcblx0XHRcdFx0cmV0dXJuICdBUEknO1xuXHRcdFx0Y2FzZSAnZ3VpZGUnOlxuXHRcdFx0XHRyZXR1cm4gJ0d1aWRlcyc7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRyZXR1cm4gJ1Vua25vd24nO1xuXHRcdH1cblx0fVxufVxuIiwiPGRpdiBjbGFzcz1cIm5nLWRvYy1zZWFyY2gtcmVzdWx0LXdyYXBwZXJcIiAqbmdJZj1cImdyb3VwZWRSZXN1bHQgfCBrZXl2YWx1ZSBhcyByZXN1bHRzXCI+XG5cdDxuZy1jb250YWluZXIgKm5nSWY9XCJyZXN1bHRzLmxlbmd0aDsgZWxzZSBlbXB0eVRlbXBsYXRlXCI+XG5cdFx0PGRpdiBjbGFzcz1cIm5nLWRvYy1zZWFyY2gtcmVzdWx0LWNhdGVnb3J5XCIgKm5nRm9yPVwibGV0IGl0ZW0gb2YgcmVzdWx0c1wiPlxuXHRcdFx0PGg0IGNsYXNzPVwibmctZG9jLXNlYXJjaC1yZXN1bHQtdGl0bGVcIiBuZy1kb2MtdGV4dD57eyB0eXBlVG9MYWJlbChpdGVtLmtleSkgfX08L2g0PlxuXHRcdFx0PHVsIGNsYXNzPVwibmctZG9jLXNlYXJjaC1yZXN1bHQtcGFnZXNcIj5cblx0XHRcdFx0PGxpIGNsYXNzPVwibmctZG9jLXNlYXJjaC1yZXN1bHQtcGFnZVwiICpuZ0Zvcj1cImxldCBwYWdlIG9mIGl0ZW0udmFsdWVcIj5cblx0XHRcdFx0XHQ8YSBjbGFzcz1cIm5nLWRvYy1zZWFyY2gtcmVzdWx0LXBhZ2UtbGlua1wiIFtyb3V0ZXJMaW5rXT1cIltwYWdlLnJvdXRlXVwiPlxuXHRcdFx0XHRcdFx0PG5nLWRvYy1raW5kLWljb25cblx0XHRcdFx0XHRcdFx0Km5nSWY9XCJwYWdlLmtpbmRcIlxuXHRcdFx0XHRcdFx0XHRba2luZF09XCJwYWdlLmtpbmRcIlxuXHRcdFx0XHRcdFx0XHRbbmdEb2NUb29sdGlwXT1cInBhZ2Uua2luZFwiPjwvbmctZG9jLWtpbmQtaWNvbj5cblx0XHRcdFx0XHRcdHt7IHBhZ2UudGl0bGUgfX1cblx0XHRcdFx0XHQ8L2E+XG5cdFx0XHRcdDwvbGk+XG5cdFx0XHQ8L3VsPlxuXHRcdDwvZGl2PlxuXHQ8L25nLWNvbnRhaW5lcj5cblx0PG5nLXRlbXBsYXRlICNlbXB0eVRlbXBsYXRlPlxuXHRcdDxkaXYgbmctZG9jLXRleHQgY29sb3I9XCJtdXRlZFwiPk5vdGhpbmcgd2FzIGZvdW5kLi4uPC9kaXY+XG5cdDwvbmctdGVtcGxhdGU+XG48L2Rpdj5cbiJdfQ==