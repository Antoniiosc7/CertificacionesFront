import { NgFor, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { NgDocRootPage } from '@ng-doc/app/classes/root-page';
import { isSameObject } from '@ng-doc/core';
import { objectKeys } from '@ng-doc/core/helpers/object-keys';
import { NgDocAsArrayPipe } from '@ng-doc/ui-kit';
import { NgDocPlaygroundDemoComponent } from './playground-demo/playground-demo.component';
import { NgDocPlaygroundPropertiesComponent } from './playground-properties/playground-properties.component';
import * as i0 from "@angular/core";
import * as i1 from "@ng-doc/app/classes/root-page";
import * as i2 from "@angular/forms";
export class NgDocPlaygroundComponent {
    constructor(rootPage, formBuilder) {
        this.rootPage = rootPage;
        this.formBuilder = formBuilder;
        this.id = '';
        this.pipeName = '';
        this.selectors = [];
        this.options = {};
        this.recreateDemo = false;
        this.defaultProperties = {};
        this.defaultContent = {};
    }
    ngOnChanges({ options }) {
        if (options) {
            // Join configuration with options
            this.configuration = Object.assign({}, this.rootPage.page?.playgrounds?.[this.id], this.options);
        }
    }
    ngAfterViewInit() {
        this.defaultProperties = this.getPropertiesFormValues();
        this.defaultContent = this.getContentFormValues();
        const propertiesForm = this.formBuilder.group(this.defaultProperties);
        const contentForm = this.formBuilder.group(this.defaultContent);
        this.formGroup = this.formBuilder.group({
            properties: propertiesForm,
            content: contentForm,
        });
        // `patchValue` is needed to set `undefined` values, otherwise they will be ignored by the Angular form
        this.formGroup.patchValue({
            properties: Object.assign({}, this.defaultProperties, this.configuration.inputs),
            content: this.defaultContent,
        });
    }
    isDefaultState() {
        if (!this.formGroup) {
            return false;
        }
        return (isSameObject(this.formGroup.value.properties ?? {}, this.defaultValues ?? {}) &&
            isSameObject(this.formGroup.value.content ?? {}, this.defaultContent ?? {}));
    }
    getPropertiesFormValues() {
        const formValues = objectKeys(this.properties ?? {}).reduce((controls, key) => {
            if (this.properties) {
                controls[key] = this.defaultValues ? this.defaultValues[key] : undefined;
            }
            return controls;
        }, {});
        return Object.assign({}, formValues, this.configuration.defaults);
    }
    getContentFormValues() {
        return objectKeys(this.configuration?.content ?? {}).reduce((controls, key) => {
            if (this.configuration?.content) {
                controls[key] = false;
            }
            return controls;
        }, {});
    }
    resetForm() {
        this.formGroup.reset({}, { emitEvent: false });
        this.formGroup?.patchValue({
            properties: this.defaultProperties,
            content: this.defaultContent,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocPlaygroundComponent, deps: [{ token: i1.NgDocRootPage }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocPlaygroundComponent, isStandalone: true, selector: "ng-doc-playground", inputs: { id: "id", pipeName: "pipeName", selectors: "selectors", properties: "properties", options: "options" }, usesOnChanges: true, ngImport: i0, template: "<ng-container *ngIf=\"configuration\">\n\t<ng-doc-playground-properties\n\t\t[form]=\"formGroup\"\n\t\t[properties]=\"properties\"\n\t\t[ignoreInputs]=\"configuration.hiddenInputs\"\n\t\t[dynamicContent]=\"configuration.content\"\n\t\t[hideSidePanel]=\"configuration.hideSidePanel ?? false\"\n\t\t[defaultValues]=\"defaultValues\"\n\t\t[showResetButton]=\"!isDefaultState()\"\n\t\t[(recreateDemo)]=\"recreateDemo\"\n\t\t(resetForm)=\"resetForm()\">\n\t\t<ng-doc-playground-demo\n\t\t\t*ngFor=\"let selector of configuration.selectors ?? selectors | asArray\"\n\t\t\t[id]=\"id\"\n\t\t\t[selector]=\"selector\"\n\t\t\t[properties]=\"properties\"\n\t\t\t[configuration]=\"configuration\"\n\t\t\t[recreateDemo]=\"recreateDemo\"\n\t\t\t[form]=\"formGroup\"\n\t\t\t[expanded]=\"configuration.expanded ?? false\">\n\t\t</ng-doc-playground-demo>\n\n\t\t<ng-doc-playground-demo\n\t\t\t*ngIf=\"pipeName\"\n\t\t\t[id]=\"id\"\n\t\t\t[pipeName]=\"pipeName\"\n\t\t\t[properties]=\"properties\"\n\t\t\t[configuration]=\"configuration\"\n\t\t\t[recreateDemo]=\"recreateDemo\"\n\t\t\t[form]=\"formGroup\">\n\t\t</ng-doc-playground-demo>\n\t</ng-doc-playground-properties>\n</ng-container>\n", styles: [":host{display:block;margin:var(--ng-doc-playground-margin)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocPlaygroundPropertiesComponent, selector: "ng-doc-playground-properties", inputs: ["form", "properties", "ignoreInputs", "dynamicContent", "defaultValues", "hideSidePanel", "recreateDemo", "showResetButton"], outputs: ["recreateDemoChange", "resetForm"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: NgDocPlaygroundDemoComponent, selector: "ng-doc-playground-demo", inputs: ["id", "pipeName", "selector", "configuration", "properties", "recreateDemo", "form", "expanded"] }, { kind: "pipe", type: NgDocAsArrayPipe, name: "asArray" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocPlaygroundComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-playground', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf,
                        NgDocPlaygroundPropertiesComponent,
                        NgFor,
                        NgDocPlaygroundDemoComponent,
                        NgDocAsArrayPipe,
                    ], template: "<ng-container *ngIf=\"configuration\">\n\t<ng-doc-playground-properties\n\t\t[form]=\"formGroup\"\n\t\t[properties]=\"properties\"\n\t\t[ignoreInputs]=\"configuration.hiddenInputs\"\n\t\t[dynamicContent]=\"configuration.content\"\n\t\t[hideSidePanel]=\"configuration.hideSidePanel ?? false\"\n\t\t[defaultValues]=\"defaultValues\"\n\t\t[showResetButton]=\"!isDefaultState()\"\n\t\t[(recreateDemo)]=\"recreateDemo\"\n\t\t(resetForm)=\"resetForm()\">\n\t\t<ng-doc-playground-demo\n\t\t\t*ngFor=\"let selector of configuration.selectors ?? selectors | asArray\"\n\t\t\t[id]=\"id\"\n\t\t\t[selector]=\"selector\"\n\t\t\t[properties]=\"properties\"\n\t\t\t[configuration]=\"configuration\"\n\t\t\t[recreateDemo]=\"recreateDemo\"\n\t\t\t[form]=\"formGroup\"\n\t\t\t[expanded]=\"configuration.expanded ?? false\">\n\t\t</ng-doc-playground-demo>\n\n\t\t<ng-doc-playground-demo\n\t\t\t*ngIf=\"pipeName\"\n\t\t\t[id]=\"id\"\n\t\t\t[pipeName]=\"pipeName\"\n\t\t\t[properties]=\"properties\"\n\t\t\t[configuration]=\"configuration\"\n\t\t\t[recreateDemo]=\"recreateDemo\"\n\t\t\t[form]=\"formGroup\">\n\t\t</ng-doc-playground-demo>\n\t</ng-doc-playground-properties>\n</ng-container>\n", styles: [":host{display:block;margin:var(--ng-doc-playground-margin)}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgDocRootPage }, { type: i2.FormBuilder }], propDecorators: { id: [{
                type: Input,
                args: [{ required: true }]
            }], pipeName: [{
                type: Input
            }], selectors: [{
                type: Input
            }], properties: [{
                type: Input
            }], options: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,