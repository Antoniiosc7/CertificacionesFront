import { Renderer2 } from '@angular/core';
import { NgDocTabsComponent } from '@ng-doc/app/components/tabs';
export const tabsProcessor = {
    component: NgDocTabsComponent,
    selector: 'ng-doc-tab',
    nodeToReplace: (element, injector) => {
        const renderer = injector.get(Renderer2);
        const anchor = renderer.createElement('div');
        return element.parentNode?.insertBefore(anchor, element) ?? element;
    },
    extractOptions: (element, root) => {
        const group = element.getAttribute('group') ?? '';
        const tabs = Array.from(root.querySelectorAll(`ng-doc-tab[group="${group}"]`));
        const mappedTabs = tabs.map((tab) => ({
            title: tab.getAttribute('name') ?? '',
            content: tab,
            icon: tab.getAttribute('icon') || undefined,
            active: tab.hasAttribute('active'),
        }));
        tabs.forEach((tab) => tab.remove());
        return {
            inputs: {
                tabs: mappedTabs,
            },
        };
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5wcm9jZXNzb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9wcm9jZXNzb3JzL3Byb2Nlc3NvcnMvdGFicy5wcm9jZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFZLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUdqRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQTJDO0lBQ3BFLFNBQVMsRUFBRSxrQkFBa0I7SUFDN0IsUUFBUSxFQUFFLFlBQVk7SUFDdEIsYUFBYSxFQUFFLENBQUMsT0FBZ0IsRUFBRSxRQUFrQixFQUFFLEVBQUU7UUFDdkQsTUFBTSxRQUFRLEdBQWMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNwRCxNQUFNLE1BQU0sR0FBWSxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXRELE9BQU8sT0FBTyxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxJQUFJLE9BQU8sQ0FBQztJQUNyRSxDQUFDO0lBQ0QsY0FBYyxFQUFFLENBQUMsT0FBZ0IsRUFBRSxJQUFhLEVBQUUsRUFBRTtRQUNuRCxNQUFNLEtBQUssR0FBa0IsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDakUsTUFBTSxJQUFJLEdBQWMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMscUJBQXFCLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMxRixNQUFNLFVBQVUsR0FBZSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQzFELEtBQUssRUFBRSxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDckMsT0FBTyxFQUFFLEdBQUc7WUFDWixJQUFJLEVBQUUsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxTQUFTO1lBQzNDLE1BQU0sRUFBRSxHQUFHLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztTQUNsQyxDQUFDLENBQUMsQ0FBQztRQUVKLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFZLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1FBRTdDLE9BQU87WUFDTixNQUFNLEVBQUU7Z0JBQ1AsSUFBSSxFQUFFLFVBQVU7YUFDaEI7U0FDRCxDQUFDO0lBQ0gsQ0FBQztDQUNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RvciwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0RvY1RhYnNDb21wb25lbnQgfSBmcm9tICdAbmctZG9jL2FwcC9jb21wb25lbnRzL3RhYnMnO1xuaW1wb3J0IHsgTmdEb2NQYWdlUHJvY2Vzc29yLCBOZ0RvY1RhYiB9IGZyb20gJ0BuZy1kb2MvYXBwL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgdGFic1Byb2Nlc3NvcjogTmdEb2NQYWdlUHJvY2Vzc29yPE5nRG9jVGFic0NvbXBvbmVudD4gPSB7XG5cdGNvbXBvbmVudDogTmdEb2NUYWJzQ29tcG9uZW50LFxuXHRzZWxlY3RvcjogJ25nLWRvYy10YWInLFxuXHRub2RlVG9SZXBsYWNlOiAoZWxlbWVudDogRWxlbWVudCwgaW5qZWN0b3I6IEluamVjdG9yKSA9PiB7XG5cdFx0Y29uc3QgcmVuZGVyZXI6IFJlbmRlcmVyMiA9IGluamVjdG9yLmdldChSZW5kZXJlcjIpO1xuXHRcdGNvbnN0IGFuY2hvcjogRWxlbWVudCA9IHJlbmRlcmVyLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdFx0cmV0dXJuIGVsZW1lbnQucGFyZW50Tm9kZT8uaW5zZXJ0QmVmb3JlKGFuY2hvciwgZWxlbWVudCkgPz8gZWxlbWVudDtcblx0fSxcblx0ZXh0cmFjdE9wdGlvbnM6IChlbGVtZW50OiBFbGVtZW50LCByb290OiBFbGVtZW50KSA9PiB7XG5cdFx0Y29uc3QgZ3JvdXA6IHN0cmluZyB8IG51bGwgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZ3JvdXAnKSA/PyAnJztcblx0XHRjb25zdCB0YWJzOiBFbGVtZW50W10gPSBBcnJheS5mcm9tKHJvb3QucXVlcnlTZWxlY3RvckFsbChgbmctZG9jLXRhYltncm91cD1cIiR7Z3JvdXB9XCJdYCkpO1xuXHRcdGNvbnN0IG1hcHBlZFRhYnM6IE5nRG9jVGFiW10gPSB0YWJzLm1hcCgodGFiOiBFbGVtZW50KSA9PiAoe1xuXHRcdFx0dGl0bGU6IHRhYi5nZXRBdHRyaWJ1dGUoJ25hbWUnKSA/PyAnJyxcblx0XHRcdGNvbnRlbnQ6IHRhYixcblx0XHRcdGljb246IHRhYi5nZXRBdHRyaWJ1dGUoJ2ljb24nKSB8fCB1bmRlZmluZWQsXG5cdFx0XHRhY3RpdmU6IHRhYi5oYXNBdHRyaWJ1dGUoJ2FjdGl2ZScpLFxuXHRcdH0pKTtcblxuXHRcdHRhYnMuZm9yRWFjaCgodGFiOiBFbGVtZW50KSA9PiB0YWIucmVtb3ZlKCkpO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdGlucHV0czoge1xuXHRcdFx0XHR0YWJzOiBtYXBwZWRUYWJzLFxuXHRcdFx0fSxcblx0XHR9O1xuXHR9LFxufTtcbiJdfQ==