#!/usr/bin/env node
'use strict';

var E = require('minimist');
var O = require('./index.js');
var promises = require('fs/promises');
var fs = require('fs');
var path = require('path');
var X = require('fast-glob');
var Q = require('chokidar');
var G = require('@liquify/highlight');
var g = require('ansis');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var E__default = /*#__PURE__*/_interopDefault(E);
var O__default = /*#__PURE__*/_interopDefault(O);
var X__default = /*#__PURE__*/_interopDefault(X);
var Q__default = /*#__PURE__*/_interopDefault(Q);
var G__default = /*#__PURE__*/_interopDefault(G);
var g__default = /*#__PURE__*/_interopDefault(g);

var u=(o,n,e)=>new Promise((i,s)=>{var a=r=>{try{x(e.next(r));}catch(f){s(f);}},m=r=>{try{x(e.throw(r));}catch(f){s(f);}},x=r=>r.done?i(r.value):Promise.resolve(r.value).then(a,m);x((e=e.apply(o,n)).next());});var {cyan:C,cyanBright:tt,red:h,redBright:et,green:ot,greenBright:nt,yellow:w,yellowBright:N,magenta:rt,magentaBright:it,blue:st,blueBright:at,white:lt,whiteBright:v,gray:t,underline:ct,bold:l,reset:gt,italic:pt,strike:ft}=g__default.default,b=g__default.default.hex("#2a2a2e");g__default.default.hex("#ff75d1");g__default.default.hex("#FFAB40");var R=g__default.default.hex("#56ef83"),k=g__default.default.hex("#69d5fd");g__default.default.hex("#D47179");var L=b("\u250C\u2500 "),p={gray:b("\u2502  "),red:h.dim("\u2502  "),yellow:w.dim("\u2502  ")};b("\u2514\u2500 ");var I="\x1B[H\x1B[2J";R("\u2713 ");var c=t(": ");t(" \u2192  ");t("(");t(")");N(` ~ Type ${l("w")} and press ${l("enter")} to view`);`
  ${t("-----------------------------------------------------------------------------")}
  ${l("\xC6sthetic")}  <!version!>                                               ${t("by Panoply")}
  ${t("-----------------------------------------------------------------------------")}

  ${l("Aliases"+c)}

  $ \xE6

  ${l("Commands"+c)}

  $ esthetic                    ${t.italic("Interactive prompt")}
  $ esthetic <path> --flags     ${t.italic("Glob path of files to format and flags")}

  ${l("Resource"+c)}

    -f, --format                ${t.italic("Overwrite matched files in <path>")}
    -w, --watch                 ${t.italic("Watch and format files when documents are changed)")}
    -o, --output <dir>          ${t.italic("Optional output dir to write formatted files")}
    -c, --config <file>         ${t.italic("Provide a configuration file")}
    -h, --help                  ${t.italic("Show this screen")}

  ${l("Languages"+c)}

    --liquid                    ${t.italic("Liquid language formatting")}
    --html                      ${t.italic("HTML language formatting")}
    --xml                       ${t.italic("XML language formatting")}
    --css                       ${t.italic("CSS language formatting")}
    --scss                      ${t.italic("SCSS language formatting")}
    --json                      ${t.italic("JSON language formatting")}
    --js, --javascript          ${t.italic("JavaScript language formatting")}
    --jsx                       ${t.italic("JSX language formatting")}
    --ts, --typescript          ${t.italic("TypeScript language formatting")}
    --tsx                       ${t.italic("TSX language formatting")}

  ${l("Settings"+c)}

    --no-color                 ${t.italic("Disable syntax highlighting and log colors")}
    --silent                   ${t.italic("Silence the CLI logs and only print errors")}
    --rules                    ${t.italic("Prints \xC6sthetic formatting rules")}

 ${t("-----------------------------------------------------------------------------")}

`;var{log:y}=console;function j(...o){return [h.bold("\xC6sthetic Error"),`
`,...o,`
`].join(`
`)}function B(o,n,e){if(e){let i=G__default.default(o,{language:n}).split(`
`);" ".repeat(`${i.length}`.length);y(i.map(a=>p.gray+a).join(`
`));}else y(B);}function P(o,n){let e=[];e.push(`${L}${t("\xC6sthetic")} ${t("~")} ${t(D())}`,`${p.gray}`,`${p.gray}${v.bold("v0.1.0")}`,`${p.gray}`),o.watch&&e.push(`${p.gray}Watching${c}${C.bold(n.slice(process.cwd().length+1))} `),y(e.join(`
`));}function J(o){y(`${p.gray}${k("change")}${c}${w(o)}`);}function D(){let o=new Date,n=o.getHours(),e=o.getMinutes(),i=o.getSeconds(),s=t(":");return (n<10?`0${n}`:n)+s+(e<10?`0${e}`:e)+s+(i<10?`0${i}`:i)}function _(o){return u(this,null,function*(){let n=path.join(o,"package.json");if(fs.existsSync(n)){let e=yield promises.readFile(path.join(o,"package.json"));return JSON.parse(e.toString()).esthetic||{}}else throw j(`Failed to resolve ${h("package.json")} file`)})}function F(o){return u(this,null,function*(){let n={};console.log(I);let e=process.cwd(),i=path.join(e,o._.pop()),s=X__default.default.sync(i,{cwd:e,dot:!0});if(s.length===0)throw j(`No files could be matched at: ${h(i)}`);let a=Object.assign({watch:!1,output:null,config:null,format:!1,liquid:!1,html:!1,xml:!1,css:!1,scss:!1,json:!1,javascript:!1,jsx:!1,typescript:!1,tsx:!1},o),m=yield _(e);a.liquid&&(m.language="liquid"),a.watch&&(P(a,i),Q__default.default.watch(s,{cwd:e}).on("all",(x,r)=>u(this,null,function*(){if(x==="change"){r in n||(n[r]=null);let f=yield promises.readFile(r);if(f.toString()===n[r])return;try{let $=O__default.default.format(f.toString(),m);J(path.basename(r)+" ~ "+t(""+O__default.default.stats.time)),n[r]=$,a.format?yield promises.writeFile(r,$):B($,m.language,!0);}catch($){console.log($);}}})));})}u(void 0,null,function*(){return yield F(E__default.default(process.argv.slice(1),{alias:{watch:"w",output:"o",config:"c",format:"f",help:"h",javascript:"js",typescript:"ts"},default:{format:!1,help:!1,liquid:!1,html:!1,xml:!1,css:!1,scss:!1,json:!1,javascript:!1,jsx:!1,typescript:!1,tsx:!1,"no-color":!1},boolean:["watch","dry","no-color","silent","rules","help","liquid","html","xml","css","scss","json","javascript","jsx","typescript","tsx"],string:["config","output"]}))});
