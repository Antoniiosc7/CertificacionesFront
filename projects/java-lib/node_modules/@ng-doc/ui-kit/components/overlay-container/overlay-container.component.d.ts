import { AnimationBuilder } from '@angular/animations';
import { ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';
import { NgDocFocusCatcherDirective } from '@ng-doc/ui-kit/directives/focus-catcher';
import { NgDocOverlayConfig, NgDocOverlayContainer } from '@ng-doc/ui-kit/interfaces';
import { NgDocContent, NgDocHorizontalAlign, NgDocOverlayAnimationEvent, NgDocOverlayRelativePosition, NgDocVerticalAlign } from '@ng-doc/ui-kit/types';
import { PolymorpheusOutletDirective } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class NgDocOverlayContainerComponent implements NgDocOverlayContainer, OnInit, OnDestroy {
    private elementRef;
    private documentRef;
    private changeDetectorRef;
    private ngZone;
    private animationBuilder;
    contentContainer?: ElementRef<HTMLElement>;
    focusCatcher?: NgDocFocusCatcherDirective;
    outlet?: PolymorpheusOutletDirective<object>;
    relativePosition: NgDocOverlayRelativePosition | null;
    config?: NgDocOverlayConfig;
    content: NgDocContent;
    private currentPosition?;
    private animationEvent$;
    private isOpened;
    constructor(elementRef: ElementRef<HTMLElement>, documentRef: Document, changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, animationBuilder: AnimationBuilder);
    ngOnInit(): void;
    get contactBorder(): boolean;
    get isFocused(): boolean;
    get animationEvent(): Observable<NgDocOverlayAnimationEvent>;
    get overlayAlign(): NgDocHorizontalAlign | NgDocVerticalAlign | null;
    close(): void;
    focus(): void;
    markForCheck(): void;
    private runAnimation;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocOverlayContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocOverlayContainerComponent, "ng-doc-overlay-container", never, {}, {}, never, never, true, never>;
}
