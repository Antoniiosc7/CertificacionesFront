import { AnimationEvent } from '@angular/animations';
import { EventEmitter } from '@angular/core';
import { NgDocContent, NgDocHorizontalAlign } from '@ng-doc/ui-kit/types';
import * as i0 from "@angular/core";
export declare class NgDocSidenavComponent {
    /**
     * Content of the sidenav.
     */
    sidebar: NgDocContent;
    /**
     * Align of the sidenav.
     */
    align: NgDocHorizontalAlign;
    /**
     * Indicates whether the sidenav is over the page content or not.
     * Which means that the sidenav is not part of the page content.
     */
    over: boolean;
    /**
     * Indicates whether the sidenav is opened or not.
     * This is used to trigger the animation.
     */
    opened: boolean;
    /**
     * Indicates whether the sidenav has a backdrop or not.
     */
    hasBackdrop: boolean;
    openedChange: EventEmitter<boolean>;
    closeEvent: EventEmitter<void>;
    beforeOpen: EventEmitter<void>;
    beforeClose: EventEmitter<void>;
    afterOpen: EventEmitter<void>;
    afterClose: EventEmitter<void>;
    protected get backdrop(): boolean;
    protected animationStart(event: AnimationEvent): void;
    protected animationDone(event: AnimationEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocSidenavComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocSidenavComponent, "ng-doc-sidenav", never, { "sidebar": { "alias": "sidebar"; "required": false; }; "align": { "alias": "align"; "required": false; }; "over": { "alias": "over"; "required": false; }; "opened": { "alias": "opened"; "required": false; }; "hasBackdrop": { "alias": "hasBackdrop"; "required": false; }; }, { "openedChange": "openedChange"; "closeEvent": "closeEvent"; "beforeOpen": "beforeOpen"; "beforeClose": "beforeClose"; "afterOpen": "afterOpen"; "afterClose": "afterClose"; }, never, ["*"], true, never>;
}
