import { __decorate, __metadata } from 'tslib';
import * as i1 from '@angular/cdk/layout';
import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';
import * as i0 from '@angular/core';
import { TemplateRef, ViewContainerRef, Directive, Input } from '@angular/core';
import { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';
import { pluck, distinctUntilChanged } from 'rxjs/operators';

let NgDocMediaQueryDirective = class NgDocMediaQueryDirective {
    constructor(templateRef, viewContainerRef, breakpointObserver) {
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
        this.breakpointObserver = breakpointObserver;
        this.match = [];
        this.breakpoints = Breakpoints;
    }
    ngOnInit() {
        this.breakpointObserver
            .observe(this.match)
            .pipe(pluck('matches'), distinctUntilChanged(), untilDestroyed(this))
            .subscribe((matches) => {
            this.viewRef?.destroy();
            this.viewRef = undefined;
            if (matches) {
                this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef);
                this.viewRef.markForCheck();
            }
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocMediaQueryDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: i1.BreakpointObserver }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocMediaQueryDirective, isStandalone: true, selector: "[ngDocMediaQuery]", inputs: { match: ["ngDocMediaQuery", "match"] }, exportAs: ["ngDocMediaQuery"], ngImport: i0 }); }
};
NgDocMediaQueryDirective = __decorate([
    UntilDestroy(),
    __metadata("design:paramtypes", [TemplateRef,
        ViewContainerRef,
        BreakpointObserver])
], NgDocMediaQueryDirective);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocMediaQueryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocMediaQuery]',
                    exportAs: 'ngDocMediaQuery',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: i1.BreakpointObserver }], propDecorators: { match: [{
                type: Input,
                args: ['ngDocMediaQuery']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocMediaQueryDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-media-query.mjs.map
