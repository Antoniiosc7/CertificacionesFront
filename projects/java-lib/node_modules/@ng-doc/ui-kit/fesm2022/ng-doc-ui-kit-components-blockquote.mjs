import { NgIf, NgSwitch, NgSwitchCase } from '@angular/common';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';
import { NgDocIconComponent } from '@ng-doc/ui-kit/components/icon';

class NgDocBlockquoteComponent {
    constructor() {
        this.type = 'default';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBlockquoteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocBlockquoteComponent, isStandalone: true, selector: "blockquote[ng-doc-blockquote]", inputs: { type: "type" }, host: { properties: { "attr.data-ng-doc-type": "this.type" } }, ngImport: i0, template: "<div class=\"ng-doc-blockquote-icon\" *ngIf=\"type !== 'default'\">\n\t<ng-container [ngSwitch]=\"type\">\n\t\t<ng-doc-icon *ngSwitchCase=\"'note'\" icon=\"info\" [size]=\"24\"></ng-doc-icon>\n\t\t<ng-doc-icon *ngSwitchCase=\"'warning'\" icon=\"alert-triangle\" [size]=\"24\"></ng-doc-icon>\n\t\t<ng-doc-icon *ngSwitchCase=\"'alert'\" icon=\"alert-circle\" [size]=\"24\"></ng-doc-icon>\n\t</ng-container>\n</div>\n<div>\n\t<ng-content></ng-content>\n</div>\n", styles: [":host{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);position:relative;display:flex;padding:calc(var(--ng-doc-base-gutter) * 2);border-radius:var(--ng-doc-base-gutter);margin:var(--ng-doc-blockquote-margin);overflow:hidden;--ng-doc-code-margin: var(--ng-doc-base-gutter) 0}:host:before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:var(--ng-doc-blockquote-background, var(--ng-doc-base-9));opacity:.1;border-radius:inherit;overflow:hidden;pointer-events:none}:host{position:relative}:host:after{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;border:1px solid var(--ng-doc-blockquote-border-color, var(--ng-doc-base-9));opacity:.2;border-radius:inherit;overflow:hidden;pointer-events:none}:host[data-ng-doc-type=note]{--ng-doc-blockquote-background: var(--ng-doc-info);--ng-doc-blockquote-border-color: var(--ng-doc-info);--ng-doc-icon-color: var(--ng-doc-info)}:host[data-ng-doc-type=warning]{--ng-doc-blockquote-background: var(--ng-doc-warning);--ng-doc-blockquote-border-color: var(--ng-doc-warning);--ng-doc-icon-color: var(--ng-doc-warning)}:host[data-ng-doc-type=alert]{--ng-doc-blockquote-background: var(--ng-doc-alert);--ng-doc-blockquote-border-color: var(--ng-doc-alert);--ng-doc-icon-color: var(--ng-doc-alert)}:host .ng-doc-blockquote-icon{display:flex;margin-right:calc(var(--ng-doc-base-gutter) * 2)}:host ::ng-deep p{margin:0}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocBlockquoteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'blockquote[ng-doc-blockquote]', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgIf, NgSwitch, NgSwitchCase, NgDocIconComponent], template: "<div class=\"ng-doc-blockquote-icon\" *ngIf=\"type !== 'default'\">\n\t<ng-container [ngSwitch]=\"type\">\n\t\t<ng-doc-icon *ngSwitchCase=\"'note'\" icon=\"info\" [size]=\"24\"></ng-doc-icon>\n\t\t<ng-doc-icon *ngSwitchCase=\"'warning'\" icon=\"alert-triangle\" [size]=\"24\"></ng-doc-icon>\n\t\t<ng-doc-icon *ngSwitchCase=\"'alert'\" icon=\"alert-circle\" [size]=\"24\"></ng-doc-icon>\n\t</ng-container>\n</div>\n<div>\n\t<ng-content></ng-content>\n</div>\n", styles: [":host{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);position:relative;display:flex;padding:calc(var(--ng-doc-base-gutter) * 2);border-radius:var(--ng-doc-base-gutter);margin:var(--ng-doc-blockquote-margin);overflow:hidden;--ng-doc-code-margin: var(--ng-doc-base-gutter) 0}:host:before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background-color:var(--ng-doc-blockquote-background, var(--ng-doc-base-9));opacity:.1;border-radius:inherit;overflow:hidden;pointer-events:none}:host{position:relative}:host:after{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;border:1px solid var(--ng-doc-blockquote-border-color, var(--ng-doc-base-9));opacity:.2;border-radius:inherit;overflow:hidden;pointer-events:none}:host[data-ng-doc-type=note]{--ng-doc-blockquote-background: var(--ng-doc-info);--ng-doc-blockquote-border-color: var(--ng-doc-info);--ng-doc-icon-color: var(--ng-doc-info)}:host[data-ng-doc-type=warning]{--ng-doc-blockquote-background: var(--ng-doc-warning);--ng-doc-blockquote-border-color: var(--ng-doc-warning);--ng-doc-icon-color: var(--ng-doc-warning)}:host[data-ng-doc-type=alert]{--ng-doc-blockquote-background: var(--ng-doc-alert);--ng-doc-blockquote-border-color: var(--ng-doc-alert);--ng-doc-icon-color: var(--ng-doc-alert)}:host .ng-doc-blockquote-icon{display:flex;margin-right:calc(var(--ng-doc-base-gutter) * 2)}:host ::ng-deep p{margin:0}\n"] }]
        }], propDecorators: { type: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-type']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocBlockquoteComponent };
//# sourceMappingURL=ng-doc-ui-kit-components-blockquote.mjs.map
