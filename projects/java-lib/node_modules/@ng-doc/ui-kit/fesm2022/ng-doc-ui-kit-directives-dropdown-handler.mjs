import * as i0 from '@angular/core';
import { Directive, Input, HostListener } from '@angular/core';
import '@ng-doc/ui-kit/components/dropdown';

class NgDocDropdownHandlerDirective {
    keyboardEvent(event) {
        if (this.dropdown) {
            if (event.key === 'ArrowDown' && !this.dropdown.isOpened) {
                event.preventDefault();
                this.dropdown.open();
            }
            if (event.key === 'Escape' && this.dropdown.isOpened) {
                event.preventDefault();
                this.dropdown.close();
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDropdownHandlerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocDropdownHandlerDirective, isStandalone: true, selector: "[ngDocDropdownHandler]", inputs: { dropdown: ["ngDocDropdownHandler", "dropdown"] }, host: { listeners: { "keydown": "keyboardEvent($event)" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDropdownHandlerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocDropdownHandler]',
                    standalone: true,
                }]
        }], propDecorators: { dropdown: [{
                type: Input,
                args: ['ngDocDropdownHandler']
            }], keyboardEvent: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocDropdownHandlerDirective };
//# sourceMappingURL=ng-doc-ui-kit-directives-dropdown-handler.mjs.map
