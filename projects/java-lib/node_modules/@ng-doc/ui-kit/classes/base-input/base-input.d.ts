import { ElementRef } from '@angular/core';
import { DIControl } from 'di-controls';
import { DIControlConfig } from 'di-controls/controls/control';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare abstract class NgDocBaseInput<T> extends DIControl<T> {
    readonly elementRef: ElementRef<HTMLInputElement>;
    readonly changes: Subject<void>;
    protected constructor(config?: DIControlConfig<T, T>);
    get hostClasses(): string;
    get placeholder(): string;
    get isFocused(): boolean;
    get isReadonly(): boolean;
    get value(): string;
    focus(): void;
    blink(): void;
    updateModel(value: T | null): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocBaseInput<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgDocBaseInput<any>, never, never, {}, {}, never, never, false, never>;
}
