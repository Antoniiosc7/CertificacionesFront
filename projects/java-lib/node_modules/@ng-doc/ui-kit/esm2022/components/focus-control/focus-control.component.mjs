import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';
import { NgDocFocusableDirective } from '@ng-doc/ui-kit/directives/focusable';
import { NgDocFocusUtils } from '@ng-doc/ui-kit/utils';
import * as i0 from "@angular/core";
export class NgDocFocusControlComponent {
    constructor(documentRef) {
        this.documentRef = documentRef;
        this.focusHost = null;
    }
    focusPrev() {
        if (this.focusHost) {
            NgDocFocusUtils.focusClosestElement(this.focusHost, this.documentRef.body, false);
        }
    }
    focusNext() {
        if (this.focusHost) {
            NgDocFocusUtils.focusClosestElement(this.focusHost, this.documentRef.body);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocFocusControlComponent, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocFocusControlComponent, isStandalone: true, selector: "ng-doc-focus-control", inputs: { focusHost: "focusHost" }, ngImport: i0, template: `
		<div [ngDocFocusable]="true" data-ng-doc-focus-trap="true" (focus)="focusPrev()"></div>
		<ng-content></ng-content>
		<div [ngDocFocusable]="true" data-ng-doc-focus-trap="true" (focus)="focusNext()"></div>
	`, isInline: true, styles: [":host{width:100%}\n"], dependencies: [{ kind: "directive", type: NgDocFocusableDirective, selector: "[ngDocFocusable]", inputs: ["ngDocFocusable"], exportAs: ["ngDocFocusable"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocFocusControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-focus-control', template: `
		<div [ngDocFocusable]="true" data-ng-doc-focus-trap="true" (focus)="focusPrev()"></div>
		<ng-content></ng-content>
		<div [ngDocFocusable]="true" data-ng-doc-focus-trap="true" (focus)="focusNext()"></div>
	`, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgDocFocusableDirective], styles: [":host{width:100%}\n"] }]
        }], ctorParameters: () => [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }], propDecorators: { focusHost: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL2ZvY3VzLWNvbnRyb2wvZm9jdXMtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBY3ZELE1BQU0sT0FBTywwQkFBMEI7SUFJdEMsWUFBc0MsV0FBcUI7UUFBckIsZ0JBQVcsR0FBWCxXQUFXLENBQVU7UUFGM0QsY0FBUyxHQUF1QixJQUFJLENBQUM7SUFFeUIsQ0FBQztJQUUvRCxTQUFTO1FBQ1IsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDcEIsZUFBZSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbkYsQ0FBQztJQUNGLENBQUM7SUFFRCxTQUFTO1FBQ1IsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDcEIsZUFBZSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1RSxDQUFDO0lBQ0YsQ0FBQzs4R0FoQlcsMEJBQTBCLGtCQUlsQixRQUFRO2tHQUpoQiwwQkFBMEIsb0hBVjVCOzs7O0VBSVQsNkZBSVMsdUJBQXVCOzsyRkFFckIsMEJBQTBCO2tCQVp0QyxTQUFTOytCQUNDLHNCQUFzQixZQUN0Qjs7OztFQUlULG1CQUVnQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUCxDQUFDLHVCQUF1QixDQUFDOzswQkFNckIsTUFBTTsyQkFBQyxRQUFRO3lDQUY1QixTQUFTO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbmplY3QsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0RvY0ZvY3VzYWJsZURpcmVjdGl2ZSB9IGZyb20gJ0BuZy1kb2MvdWkta2l0L2RpcmVjdGl2ZXMvZm9jdXNhYmxlJztcbmltcG9ydCB7IE5nRG9jRm9jdXNVdGlscyB9IGZyb20gJ0BuZy1kb2MvdWkta2l0L3V0aWxzJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbmctZG9jLWZvY3VzLWNvbnRyb2wnLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxkaXYgW25nRG9jRm9jdXNhYmxlXT1cInRydWVcIiBkYXRhLW5nLWRvYy1mb2N1cy10cmFwPVwidHJ1ZVwiIChmb2N1cyk9XCJmb2N1c1ByZXYoKVwiPjwvZGl2PlxuXHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHQ8ZGl2IFtuZ0RvY0ZvY3VzYWJsZV09XCJ0cnVlXCIgZGF0YS1uZy1kb2MtZm9jdXMtdHJhcD1cInRydWVcIiAoZm9jdXMpPVwiZm9jdXNOZXh0KClcIj48L2Rpdj5cblx0YCxcblx0c3R5bGVzOiBbJzpob3N0IHt3aWR0aDogMTAwJX0nXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtOZ0RvY0ZvY3VzYWJsZURpcmVjdGl2ZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jRm9jdXNDb250cm9sQ29tcG9uZW50IHtcblx0QElucHV0KClcblx0Zm9jdXNIb3N0OiBIVE1MRWxlbWVudCB8IG51bGwgPSBudWxsO1xuXG5cdGNvbnN0cnVjdG9yKEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgZG9jdW1lbnRSZWY6IERvY3VtZW50KSB7fVxuXG5cdGZvY3VzUHJldigpOiB2b2lkIHtcblx0XHRpZiAodGhpcy5mb2N1c0hvc3QpIHtcblx0XHRcdE5nRG9jRm9jdXNVdGlscy5mb2N1c0Nsb3Nlc3RFbGVtZW50KHRoaXMuZm9jdXNIb3N0LCB0aGlzLmRvY3VtZW50UmVmLmJvZHksIGZhbHNlKTtcblx0XHR9XG5cdH1cblxuXHRmb2N1c05leHQoKTogdm9pZCB7XG5cdFx0aWYgKHRoaXMuZm9jdXNIb3N0KSB7XG5cdFx0XHROZ0RvY0ZvY3VzVXRpbHMuZm9jdXNDbG9zZXN0RWxlbWVudCh0aGlzLmZvY3VzSG9zdCwgdGhpcy5kb2N1bWVudFJlZi5ib2R5KTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==