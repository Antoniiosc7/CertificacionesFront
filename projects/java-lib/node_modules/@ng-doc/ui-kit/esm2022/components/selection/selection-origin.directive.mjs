import { Directive, ElementRef, Input } from '@angular/core';
import { NgDocSelectionHostDirective } from './selection-host.directive';
import * as i0 from "@angular/core";
import * as i1 from "./selection-host.directive";
export class NgDocSelectionOriginDirective {
    constructor(elementRef, selectionHost) {
        this.elementRef = elementRef;
        this.selectionHost = selectionHost;
        this.selected = false;
        this.selectionHost.addOrigin(this);
    }
    ngOnChanges({ selected }) {
        if (selected) {
            this.selectionHost.changeSelected(this, this.selected);
        }
    }
    ngOnDestroy() {
        this.selectionHost.removeOrigin(this);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionOriginDirective, deps: [{ token: i0.ElementRef }, { token: i1.NgDocSelectionHostDirective }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocSelectionOriginDirective, isStandalone: true, selector: "[ngDocSelectionOrigin]", inputs: { selected: ["ngDocSelectionOrigin", "selected"] }, usesOnChanges: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocSelectionOriginDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocSelectionOrigin]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.NgDocSelectionHostDirective }], propDecorators: { selected: [{
                type: Input,
                args: ['ngDocSelectionOrigin']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLW9yaWdpbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9jb21wb25lbnRzL3NlbGVjdGlvbi9zZWxlY3Rpb24tb3JpZ2luLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXVDLE1BQU0sZUFBZSxDQUFDO0FBRWxHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFNekUsTUFBTSxPQUFPLDZCQUE2QjtJQUl6QyxZQUNVLFVBQW1DLEVBQzNCLGFBQTBDO1FBRGxELGVBQVUsR0FBVixVQUFVLENBQXlCO1FBQzNCLGtCQUFhLEdBQWIsYUFBYSxDQUE2QjtRQUo1RCxhQUFRLEdBQVksS0FBSyxDQUFDO1FBTXpCLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxXQUFXLENBQUMsRUFBRSxRQUFRLEVBQWlCO1FBQ3RDLElBQUksUUFBUSxFQUFFLENBQUM7WUFDZCxJQUFJLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hELENBQUM7SUFDRixDQUFDO0lBRUQsV0FBVztRQUNWLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7OEdBbkJXLDZCQUE2QjtrR0FBN0IsNkJBQTZCOzsyRkFBN0IsNkJBQTZCO2tCQUp6QyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFVBQVUsRUFBRSxJQUFJO2lCQUNoQjt5SEFHQSxRQUFRO3NCQURQLEtBQUs7dUJBQUMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTmdEb2NTZWxlY3Rpb25Ib3N0RGlyZWN0aXZlIH0gZnJvbSAnLi9zZWxlY3Rpb24taG9zdC5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6ICdbbmdEb2NTZWxlY3Rpb25PcmlnaW5dJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgTmdEb2NTZWxlY3Rpb25PcmlnaW5EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG5cdEBJbnB1dCgnbmdEb2NTZWxlY3Rpb25PcmlnaW4nKVxuXHRzZWxlY3RlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG5cdGNvbnN0cnVjdG9yKFxuXHRcdHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuXHRcdHByaXZhdGUgcmVhZG9ubHkgc2VsZWN0aW9uSG9zdDogTmdEb2NTZWxlY3Rpb25Ib3N0RGlyZWN0aXZlLFxuXHQpIHtcblx0XHR0aGlzLnNlbGVjdGlvbkhvc3QuYWRkT3JpZ2luKHRoaXMpO1xuXHR9XG5cblx0bmdPbkNoYW5nZXMoeyBzZWxlY3RlZCB9OiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG5cdFx0aWYgKHNlbGVjdGVkKSB7XG5cdFx0XHR0aGlzLnNlbGVjdGlvbkhvc3QuY2hhbmdlU2VsZWN0ZWQodGhpcywgdGhpcy5zZWxlY3RlZCk7XG5cdFx0fVxuXHR9XG5cblx0bmdPbkRlc3Ryb3koKTogdm9pZCB7XG5cdFx0dGhpcy5zZWxlY3Rpb25Ib3N0LnJlbW92ZU9yaWdpbih0aGlzKTtcblx0fVxufVxuIl19