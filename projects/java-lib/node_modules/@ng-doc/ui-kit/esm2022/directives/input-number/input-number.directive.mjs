import { __decorate, __metadata } from "tslib";
import { Directive, forwardRef, HostListener } from '@angular/core';
import { isPresent } from '@ng-doc/core/helpers/is-present';
import { NgDocBaseInput } from '@ng-doc/ui-kit/classes/base-input';
import { toElement } from '@ng-doc/ui-kit/helpers';
import { UntilDestroy } from '@ngneat/until-destroy';
import * as i0 from "@angular/core";
let NgDocInputNumberDirective = class NgDocInputNumberDirective extends NgDocBaseInput {
    constructor() {
        super({
            onIncomingUpdate: (value) => {
                toElement(this.elementRef).value = isPresent(value) ? String(Number(value)) : '';
            },
        });
    }
    blurEvent() {
        this.touch();
    }
    inputEvent() {
        this.updateModel(Number(this.elementRef.nativeElement.value));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocInputNumberDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocInputNumberDirective, isStandalone: true, selector: "input[ngDocInputNumber]", host: { listeners: { "blur": "blurEvent()", "input": "inputEvent()" } }, providers: [
            { provide: NgDocBaseInput, useExisting: forwardRef(() => NgDocInputNumberDirective) },
        ], usesInheritance: true, ngImport: i0 }); }
};
NgDocInputNumberDirective = __decorate([
    UntilDestroy(),
    __metadata("design:paramtypes", [])
], NgDocInputNumberDirective);
export { NgDocInputNumberDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocInputNumberDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: `input[ngDocInputNumber]`,
                    providers: [
                        { provide: NgDocBaseInput, useExisting: forwardRef(() => NgDocInputNumberDirective) },
                    ],
                    standalone: true,
                }]
        }], ctorParameters: () => [], propDecorators: { blurEvent: [{
                type: HostListener,
                args: ['blur']
            }], inputEvent: [{
                type: HostListener,
                args: ['input']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbnVtYmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkta2l0L2RpcmVjdGl2ZXMvaW5wdXQtbnVtYmVyL2lucHV0LW51bWJlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDNUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7O0FBVTlDLElBQU0seUJBQXlCLEdBQS9CLE1BQU0seUJBQTBCLFNBQVEsY0FBc0I7SUFDcEU7UUFDQyxLQUFLLENBQUM7WUFDTCxnQkFBZ0IsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUMzQixTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ2xGLENBQUM7U0FDRCxDQUFDLENBQUM7SUFDSixDQUFDO0lBR0QsU0FBUztRQUNSLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFHRCxVQUFVO1FBQ1QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMvRCxDQUFDOzhHQWpCVyx5QkFBeUI7a0dBQXpCLHlCQUF5QiwrSUFOMUI7WUFDVixFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFFO1NBQ3JGOztBQUlXLHlCQUF5QjtJQURyQyxZQUFZLEVBQUU7O0dBQ0YseUJBQXlCLENBa0JyQzs7MkZBbEJZLHlCQUF5QjtrQkFSckMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxTQUFTLEVBQUU7d0JBQ1YsRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLEVBQUU7cUJBQ3JGO29CQUNELFVBQVUsRUFBRSxJQUFJO2lCQUNoQjt3REFZQSxTQUFTO3NCQURSLFlBQVk7dUJBQUMsTUFBTTtnQkFNcEIsVUFBVTtzQkFEVCxZQUFZO3VCQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIGZvcndhcmRSZWYsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNQcmVzZW50IH0gZnJvbSAnQG5nLWRvYy9jb3JlL2hlbHBlcnMvaXMtcHJlc2VudCc7XG5pbXBvcnQgeyBOZ0RvY0Jhc2VJbnB1dCB9IGZyb20gJ0BuZy1kb2MvdWkta2l0L2NsYXNzZXMvYmFzZS1pbnB1dCc7XG5pbXBvcnQgeyB0b0VsZW1lbnQgfSBmcm9tICdAbmctZG9jL3VpLWtpdC9oZWxwZXJzJztcbmltcG9ydCB7IFVudGlsRGVzdHJveSB9IGZyb20gJ0BuZ25lYXQvdW50aWwtZGVzdHJveSc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogYGlucHV0W25nRG9jSW5wdXROdW1iZXJdYCxcblx0cHJvdmlkZXJzOiBbXG5cdFx0eyBwcm92aWRlOiBOZ0RvY0Jhc2VJbnB1dCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTmdEb2NJbnB1dE51bWJlckRpcmVjdGl2ZSkgfSxcblx0XSxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5AVW50aWxEZXN0cm95KClcbmV4cG9ydCBjbGFzcyBOZ0RvY0lucHV0TnVtYmVyRGlyZWN0aXZlIGV4dGVuZHMgTmdEb2NCYXNlSW5wdXQ8bnVtYmVyPiB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKHtcblx0XHRcdG9uSW5jb21pbmdVcGRhdGU6ICh2YWx1ZSkgPT4ge1xuXHRcdFx0XHR0b0VsZW1lbnQodGhpcy5lbGVtZW50UmVmKS52YWx1ZSA9IGlzUHJlc2VudCh2YWx1ZSkgPyBTdHJpbmcoTnVtYmVyKHZhbHVlKSkgOiAnJztcblx0XHRcdH0sXG5cdFx0fSk7XG5cdH1cblxuXHRASG9zdExpc3RlbmVyKCdibHVyJylcblx0Ymx1ckV2ZW50KCk6IHZvaWQge1xuXHRcdHRoaXMudG91Y2goKTtcblx0fVxuXG5cdEBIb3N0TGlzdGVuZXIoJ2lucHV0Jylcblx0aW5wdXRFdmVudCgpOiB2b2lkIHtcblx0XHR0aGlzLnVwZGF0ZU1vZGVsKE51bWJlcih0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC52YWx1ZSkpO1xuXHR9XG59XG4iXX0=