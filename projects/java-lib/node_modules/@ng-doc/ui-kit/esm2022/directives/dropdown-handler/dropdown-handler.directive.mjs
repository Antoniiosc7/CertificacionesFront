import { Directive, HostListener, Input } from '@angular/core';
import { NgDocDropdownComponent } from '@ng-doc/ui-kit/components/dropdown';
import * as i0 from "@angular/core";
export class NgDocDropdownHandlerDirective {
    keyboardEvent(event) {
        if (this.dropdown) {
            if (event.key === 'ArrowDown' && !this.dropdown.isOpened) {
                event.preventDefault();
                this.dropdown.open();
            }
            if (event.key === 'Escape' && this.dropdown.isOpened) {
                event.preventDefault();
                this.dropdown.close();
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDropdownHandlerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocDropdownHandlerDirective, isStandalone: true, selector: "[ngDocDropdownHandler]", inputs: { dropdown: ["ngDocDropdownHandler", "dropdown"] }, host: { listeners: { "keydown": "keyboardEvent($event)" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDropdownHandlerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngDocDropdownHandler]',
                    standalone: true,
                }]
        }], propDecorators: { dropdown: [{
                type: Input,
                args: ['ngDocDropdownHandler']
            }], keyboardEvent: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taGFuZGxlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWtpdC9kaXJlY3RpdmVzL2Ryb3Bkb3duLWhhbmRsZXIvZHJvcGRvd24taGFuZGxlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDOztBQU01RSxNQUFNLE9BQU8sNkJBQTZCO0lBS3pDLGFBQWEsQ0FBQyxLQUFvQjtRQUNqQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNuQixJQUFJLEtBQUssQ0FBQyxHQUFHLEtBQUssV0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDMUQsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3RCLENBQUM7WUFFRCxJQUFJLEtBQUssQ0FBQyxHQUFHLEtBQUssUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ3RELEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN2QixDQUFDO1FBQ0YsQ0FBQztJQUNGLENBQUM7OEdBakJXLDZCQUE2QjtrR0FBN0IsNkJBQTZCOzsyRkFBN0IsNkJBQTZCO2tCQUp6QyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFVBQVUsRUFBRSxJQUFJO2lCQUNoQjs4QkFHQSxRQUFRO3NCQURQLEtBQUs7dUJBQUMsc0JBQXNCO2dCQUk3QixhQUFhO3NCQURaLFlBQVk7dUJBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0RvY0Ryb3Bkb3duQ29tcG9uZW50IH0gZnJvbSAnQG5nLWRvYy91aS1raXQvY29tcG9uZW50cy9kcm9wZG93bic7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1tuZ0RvY0Ryb3Bkb3duSGFuZGxlcl0nLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0RvY0Ryb3Bkb3duSGFuZGxlckRpcmVjdGl2ZSB7XG5cdEBJbnB1dCgnbmdEb2NEcm9wZG93bkhhbmRsZXInKVxuXHRkcm9wZG93bj86IE5nRG9jRHJvcGRvd25Db21wb25lbnQ7XG5cblx0QEhvc3RMaXN0ZW5lcigna2V5ZG93bicsIFsnJGV2ZW50J10pXG5cdGtleWJvYXJkRXZlbnQoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcblx0XHRpZiAodGhpcy5kcm9wZG93bikge1xuXHRcdFx0aWYgKGV2ZW50LmtleSA9PT0gJ0Fycm93RG93bicgJiYgIXRoaXMuZHJvcGRvd24uaXNPcGVuZWQpIHtcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0dGhpcy5kcm9wZG93bi5vcGVuKCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnICYmIHRoaXMuZHJvcGRvd24uaXNPcGVuZWQpIHtcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0dGhpcy5kcm9wZG93bi5jbG9zZSgpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuIl19