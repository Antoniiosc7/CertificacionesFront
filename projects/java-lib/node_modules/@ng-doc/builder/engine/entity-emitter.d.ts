import { NgDocBuilderContext } from '@ng-doc/builder';
import { Observable } from 'rxjs';
import { Project } from 'ts-morph';
import { NgDocEntity } from './entities/abstractions/entity';
import { NgDocCache } from './entities/cache';
import { NgDocEntityStore } from './entity-store';
import { NgDocWatcher } from './watcher';
/**
 * Emits new entities if they are added or changed. Also emits destroyed entities if their root files are unlinked.
 * This function not only creates the entities based on the file path, but also creates the child entities recursively
 * if it's can be done.
 * @param store - The entity store.
 * @param cache - The cache instance.
 * @param context - The builder context.
 * @param project - The project instance.
 * @param watcher - The watcher instance.
 */
export declare function entityEmitter(store: NgDocEntityStore, cache: NgDocCache, context: NgDocBuilderContext, project: Project, watcher: NgDocWatcher): Observable<NgDocEntity[]>;
