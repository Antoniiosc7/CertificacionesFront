"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NgDocPageDemoEntity = void 0;
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
const rxjs_1 = require("rxjs");
const helpers_1 = require("../../helpers");
const nunjucks_1 = require("../nunjucks");
const entity_1 = require("./abstractions/entity");
const cache_1 = require("./cache");
const plugins_1 = require("./plugins");
const apply_plugin_1 = require("./plugins/entity-plugins/apply.plugin");
const wrap_code_plugin_1 = require("./plugins/entity-plugins/wrap-code.plugin");
let NgDocPageDemoEntity = (() => {
    let _classDecorators = [(0, cache_1.CachedEntity)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = entity_1.NgDocEntity;
    let _instanceExtraInitializers = [];
    let _get_outputPath_decorators;
    var NgDocPageDemoEntity = _classThis = class extends _classSuper {
        constructor(store, cache, context, parent) {
            super(store, cache, context);
            this.store = (tslib_1.__runInitializers(this, _instanceExtraInitializers), store);
            this.cache = cache;
            this.context = context;
            this.parent = parent;
            this.id = `${this.parent.id}#demo`;
            this.isRoot = false;
        }
        get rootFiles() {
            return [];
        }
        get buildCandidates() {
            return [this.parent];
        }
        get outputPath() {
            return path_1.default.join(this.parent.folderPath, 'demo-assets.ts');
        }
        build() {
            const objectExpression = this.parent.objectExpression;
            if (objectExpression) {
                this.parent.refreshDependencies();
                const classDeclarations = (0, helpers_1.getDemoClassDeclarations)(objectExpression);
                const componentAssets = Object.keys(classDeclarations).reduce((acc, key) => Object.assign(acc, { [key]: (0, helpers_1.getComponentAssets)(classDeclarations[key]) }), {});
                return (0, rxjs_1.of)({
                    result: componentAssets,
                    entity: this,
                    toBuilderOutput: (demoAssets) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                        return ({
                            content: (0, nunjucks_1.renderTemplate)('./demo-assets.ts.nunj', { context: { demoAssets } }),
                            filePath: this.outputPath,
                        });
                    }),
                    postBuildPlugins: [
                        (0, apply_plugin_1.applyPlugin)((0, plugins_1.forObjectValues)(), () => [
                            (0, plugins_1.extractSnippetsPlugin)(),
                            (0, plugins_1.removeLinesPlugin)(),
                            (0, apply_plugin_1.applyPlugin)((0, plugins_1.forArrayItems)(), (asset) => [
                                (0, apply_plugin_1.applyPlugin)((0, plugins_1.forObjectValue)('code'), () => [
                                    (0, wrap_code_plugin_1.wrapCodePlugin)(asset.lang),
                                    (0, plugins_1.processHtmlPlugin)(),
                                ]),
                                (0, apply_plugin_1.applyPlugin)((0, plugins_1.forObjectValue)('filePath'), () => [(0, plugins_1.addToDependenciesPlugin)()]),
                            ]),
                        ]),
                    ],
                    postProcessPlugins: [
                        (0, apply_plugin_1.applyPlugin)((0, plugins_1.forObjectValues)(), () => [
                            // eslint-disable-next-line @typescript-eslint/no-unused-vars
                            (0, apply_plugin_1.applyPlugin)((0, plugins_1.forArrayItems)(), (_) => [
                                (0, apply_plugin_1.applyPlugin)((0, plugins_1.forObjectValue)('code'), () => [(0, plugins_1.postProcessHtmlPlugin)()]),
                            ]),
                        ]),
                    ],
                });
            }
            throw new Error(`The entity "${this.id}" is not loaded.`);
        }
    };
    tslib_1.__setFunctionName(_classThis, "NgDocPageDemoEntity");
    (() => {
        var _a;
        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        _get_outputPath_decorators = [(0, cache_1.CachedFilesGetter)()];
        tslib_1.__esDecorate(_classThis, null, _get_outputPath_decorators, { kind: "getter", name: "outputPath", static: false, private: false, access: { has: obj => "outputPath" in obj, get: obj => obj.outputPath }, metadata: _metadata }, null, _instanceExtraInitializers);
        tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NgDocPageDemoEntity = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        tslib_1.__runInitializers(_classThis, _classExtraInitializers);
    })();
    return NgDocPageDemoEntity = _classThis;
})();
exports.NgDocPageDemoEntity = NgDocPageDemoEntity;
//# sourceMappingURL=page-demo.entity.js.map