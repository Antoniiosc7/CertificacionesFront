"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NgDocApiListEntity = void 0;
const tslib_1 = require("tslib");
const path = tslib_1.__importStar(require("path"));
const rxjs_1 = require("rxjs");
const helpers_1 = require("../../helpers");
const entity_1 = require("./abstractions/entity");
const cache_1 = require("./cache");
let NgDocApiListEntity = (() => {
    let _classDecorators = [(0, cache_1.CachedEntity)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = entity_1.NgDocEntity;
    let _instanceExtraInitializers = [];
    let _get_outputPath_decorators;
    var NgDocApiListEntity = _classThis = class extends _classSuper {
        constructor(store, cache, context, parent) {
            super(store, cache, context);
            this.store = (tslib_1.__runInitializers(this, _instanceExtraInitializers), store);
            this.cache = cache;
            this.context = context;
            this.parent = parent;
            this.id = `${this.parent.id}#NgDocApiList`;
            this.isRoot = false;
            this.rootFiles = [];
            this.buildCandidates = [];
        }
        get outputPath() {
            return path.join(this.parent.folderPath, 'ng-doc.api-list.json');
        }
        build() {
            const result = this.parent.children
                .filter(helpers_1.isApiScopeEntity)
                .sort((a, b) => { var _a, _b; return ((_a = b.order) !== null && _a !== void 0 ? _a : 0) - ((_b = a.order) !== null && _b !== void 0 ? _b : 0); })
                .map((scope) => ({
                title: scope.title,
                items: scope.children.filter(helpers_1.isApiPageEntity).map((page) => {
                    var _a, _b, _c;
                    return ({
                        route: (0, helpers_1.posix)(path.join(scope.route, page.route)),
                        type: (_a = (page.declaration && (0, helpers_1.getKindType)(page.declaration))) !== null && _a !== void 0 ? _a : '',
                        name: (_c = (_b = page.declaration) === null || _b === void 0 ? void 0 : _b.getName()) !== null && _c !== void 0 ? _c : '',
                    });
                }),
            }));
            return (0, rxjs_1.of)({
                result,
                entity: this,
                toBuilderOutput: (content) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                    return ({
                        content: JSON.stringify(content, undefined, 2),
                        filePath: this.outputPath,
                    });
                }),
            });
        }
    };
    tslib_1.__setFunctionName(_classThis, "NgDocApiListEntity");
    (() => {
        var _a;
        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        _get_outputPath_decorators = [(0, cache_1.CachedFilesGetter)()];
        tslib_1.__esDecorate(_classThis, null, _get_outputPath_decorators, { kind: "getter", name: "outputPath", static: false, private: false, access: { has: obj => "outputPath" in obj, get: obj => obj.outputPath }, metadata: _metadata }, null, _instanceExtraInitializers);
        tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NgDocApiListEntity = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        tslib_1.__runInitializers(_classThis, _classExtraInitializers);
    })();
    return NgDocApiListEntity = _classThis;
})();
exports.NgDocApiListEntity = NgDocApiListEntity;
//# sourceMappingURL=api-list.entity.js.map