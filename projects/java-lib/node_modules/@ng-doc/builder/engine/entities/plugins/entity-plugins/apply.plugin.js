"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyPlugin = applyPlugin;
exports.forArrayItems = forArrayItems;
exports.forObjectValues = forObjectValues;
exports.forObjectValue = forObjectValue;
const tslib_1 = require("tslib");
const core_1 = require("@ng-doc/core");
/**
 *
 * @param fn
 * @param get
 * @param transform
 * @param plugins
 */
function applyPlugin(transform, plugins) {
    return {
        id: 'apply-plugins',
        execute: (data, entity) => tslib_1.__awaiter(this, void 0, void 0, function* () {
            const apply = (data) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                for (const plugin of plugins(data)) {
                    // eslint-disable-next-line no-await-in-loop
                    data = yield plugin.execute(data, entity);
                }
                return data;
            });
            return transform(data, apply, entity);
        }),
    };
}
/**
 *
 */
function forArrayItems() {
    return (data, apply, entity) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        for (let i = 0; i < data.length; i++) {
            data[i] = yield apply(data[i], entity);
        }
        return data;
    });
}
/**
 *
 */
function forObjectValues() {
    return (data, apply, entity) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        const keys = (0, core_1.objectKeys)(data);
        for (const k of keys) {
            data[k] = yield apply(data[k], entity);
        }
        return data;
    });
}
/**
 *
 * @param key
 */
function forObjectValue(key) {
    return (data, apply, entity) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        data[key] = yield apply(data[key], entity);
        return data;
    });
}
//# sourceMappingURL=apply.plugin.js.map