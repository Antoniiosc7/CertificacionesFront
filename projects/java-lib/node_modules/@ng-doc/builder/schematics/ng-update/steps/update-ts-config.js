"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateTsConfig = updateTsConfig;
const tslib_1 = require("tslib");
const workspace_1 = require("@schematics/angular/utility/workspace");
const utils_1 = require("../../utils");
/**
 *
 */
function updateTsConfig() {
    return (tree) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        return (0, workspace_1.updateWorkspace)((workspace) => {
            const projectName = (0, utils_1.getProjectName)(workspace);
            const project = (0, utils_1.getProject)(workspace);
            if (!project) {
                return;
            }
            const buildTarget = project.targets.get('build');
            const serveTarget = project.targets.get('serve');
            const modifier = (json) => {
                const paths = json.get(['compilerOptions', 'paths']);
                if (paths) {
                    json.modify(['compilerOptions', 'paths', `@ng-doc/generated`], [`./ng-doc/${projectName}/index.ts`]);
                    json.modify(['compilerOptions', 'paths', `@ng-doc/generated/*`], [`./ng-doc/${projectName}/*`]);
                }
            };
            if (buildTarget) {
                const tsConfigPath = buildTarget.options && buildTarget.options['tsConfig'];
                tsConfigPath && (0, utils_1.modifyTsConfigs)(tree, String(tsConfigPath), modifier);
            }
            if (serveTarget) {
                const tsConfigPath = serveTarget.options && serveTarget.options['tsConfig'];
                tsConfigPath && (0, utils_1.modifyTsConfigs)(tree, String(tsConfigPath), modifier);
            }
        });
    });
}
//# sourceMappingURL=update-ts-config.js.map