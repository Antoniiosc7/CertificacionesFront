"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatCode = formatCode;
/**
 *    Format code with Prettier
 * @param code - Code to format
 * @param codeType - Type of code
 */
function formatCode(code, codeType = 'TypeScript') {
    try {
        if (codeType) {
            const parser = getPrettierParserFromCodeType(codeType);
            const config = require('prettier').resolveConfig.sync(process.cwd(), { editorconfig: true });
            return require('prettier')
                .format(code, Object.assign(Object.assign({}, config), { parser, embeddedLanguageFormatting: 'auto' }))
                .trim();
        }
        return code.trim();
    }
    catch (e) {
        return code;
    }
}
/**
 *    Returns the parser for the given code type.
 * @param {NgDocCodeType} codeType Code type
 * @returns {string} Parser
 */
function getPrettierParserFromCodeType(codeType) {
    switch (codeType) {
        case 'CSS':
        case 'LESS':
        case 'SCSS':
        case 'SASS':
            return 'css';
        case 'HTML':
            return 'html';
        case 'TypeScript':
        case 'JavaScript':
            return 'typescript';
        case 'Markdown':
            return 'markdown';
        default:
            return undefined;
    }
}
//# sourceMappingURL=format-code.js.map