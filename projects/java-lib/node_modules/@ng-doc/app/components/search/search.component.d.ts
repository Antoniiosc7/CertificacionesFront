import { ElementRef } from '@angular/core';
import { NgDocSearchEngine } from '@ng-doc/app/classes/search-engine';
import { NgDocSearchResult } from '@ng-doc/app/interfaces';
import { NgDocHighlightPosition, StatedObservable } from '@ng-doc/ui-kit';
import { NgDocListHost } from '@ng-doc/ui-kit/classes';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class NgDocSearchComponent implements NgDocListHost {
    private readonly elementRef;
    private readonly searchEngine?;
    mod: 'input' | 'icon';
    inputElement?: ElementRef<HTMLElement>;
    searchTerm: string;
    readonly query$: BehaviorSubject<string>;
    readonly search$: StatedObservable<NgDocSearchResult[]>;
    constructor(elementRef: ElementRef<HTMLElement>, searchEngine?: NgDocSearchEngine | undefined);
    get listHostOrigin(): ElementRef<HTMLElement>;
    getPositions<T extends NgDocSearchResult, K extends keyof T['positions']>(key: K, item: T): NgDocHighlightPosition[];
    static ɵfac: i0.ɵɵFactoryDeclaration<NgDocSearchComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgDocSearchComponent, "ng-doc-search", never, { "mod": { "alias": "mod"; "required": false; }; }, {}, never, never, true, never>;
}
