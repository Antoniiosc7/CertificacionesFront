import { animate, style, transition, trigger } from '@angular/animations';
import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { NG_DOC_NIGHT_THEME } from '@ng-doc/app/constants';
import { NgDocThemeService } from '@ng-doc/app/services';
import { NgDocButtonIconComponent, NgDocIconComponent, NgDocSmoothResizeComponent, NgDocTooltipDirective, } from '@ng-doc/ui-kit';
import * as i0 from "@angular/core";
import * as i1 from "@ng-doc/app/services";
export class NgDocThemeToggleComponent {
    constructor(themeService) {
        this.themeService = themeService;
        this.themes = [
            { name: 'Auto', theme: 'auto' },
            { name: 'Light', theme: undefined },
            { name: 'Dark', theme: NG_DOC_NIGHT_THEME },
        ];
    }
    get currentTheme() {
        if (this.themeService.isAutoThemeEnabled) {
            return this.themes[0];
        }
        const theme = this.themeService.currentTheme;
        return this.themes.find(({ theme: t }) => t === theme) ?? this.themes[0];
    }
    get nextTheme() {
        if (this.themeService.isAutoThemeEnabled) {
            return this.themes[1];
        }
        const index = this.themes.findIndex(({ theme }) => theme === this.themeService.currentTheme);
        return this.themes[(index + 1) % this.themes.length];
    }
    toggleTheme() {
        const { theme } = this.nextTheme;
        if (theme === 'auto') {
            this.themeService.enableAutoTheme(undefined, NG_DOC_NIGHT_THEME);
        }
        else {
            this.themeService.set(theme?.id);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocThemeToggleComponent, deps: [{ token: i1.NgDocThemeService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocThemeToggleComponent, isStandalone: true, selector: "ng-doc-theme-toggle", ngImport: i0, template: "<button ng-doc-button-icon size=\"large\" (click)=\"toggleTheme()\" [ngDocTooltip]=\"tooltipContent\">\n\t<ng-template #tooltipContent>\n\t\t<ng-doc-smooth-resize [trigger]=\"nextTheme.name\">\n\t\t\tSet \"{{ nextTheme.name }}\" theme\n\t\t</ng-doc-smooth-resize>\n\t</ng-template>\n\t<ng-doc-icon\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\ticon=\"sun\"\n\t\t[size]=\"24\"\n\t\t*ngIf=\"nextTheme === themes[1]\"></ng-doc-icon>\n\t<ng-doc-icon\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\ticon=\"moon\"\n\t\t[size]=\"24\"\n\t\t*ngIf=\"nextTheme === themes[2]\"></ng-doc-icon>\n\t<div\n\t\tclass=\"letter\"\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\t*ngIf=\"nextTheme === themes[0]\">\n\t\tA\n\t</div>\n</button>\n", styles: [":host{display:inline-block;height:40px;width:40px}:host .letter{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);--ng-doc-font-size: 26px;--ng-doc-font-weight: 600}\n"], dependencies: [{ kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "directive", type: NgDocTooltipDirective, selector: "[ngDocTooltip]", inputs: ["ngDocTooltip", "delay", "displayOrigin", "pointerOrigin", "positions", "canOpen", "panelClass", "minHeight", "maxHeight", "height", "minWidth", "maxWidth", "width"], outputs: ["beforeOpen", "afterOpen", "beforeClose", "afterClose"], exportAs: ["ngDocTooltip"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }, { kind: "component", type: NgDocSmoothResizeComponent, selector: "ng-doc-smooth-resize", inputs: ["trigger", "animateOpacity"] }], animations: [
            trigger('switchIcon', [
                transition(':enter', [
                    style({ transform: 'translateX({{from}})', position: 'absolute', opacity: 0 }),
                    animate('225ms cubic-bezier(0.4,0.0,0.2,1)', style({ transform: 'translateX(0%)', position: 'absolute', opacity: 1 })),
                ], { params: { from: '-100%' } }),
                transition(':leave', [
                    style({ transform: 'translateX(0%)', position: 'absolute', opacity: 1 }),
                    animate('225ms cubic-bezier(0.4,0.0,0.2,1)', style({ transform: 'translateX({{to}})', position: 'absolute', opacity: 0 })),
                ], { params: { to: '-100%' } }),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocThemeToggleComponent, decorators: [{
            type: Component,
            args: [{ animations: [
                        trigger('switchIcon', [
                            transition(':enter', [
                                style({ transform: 'translateX({{from}})', position: 'absolute', opacity: 0 }),
                                animate('225ms cubic-bezier(0.4,0.0,0.2,1)', style({ transform: 'translateX(0%)', position: 'absolute', opacity: 1 })),
                            ], { params: { from: '-100%' } }),
                            transition(':leave', [
                                style({ transform: 'translateX(0%)', position: 'absolute', opacity: 1 }),
                                animate('225ms cubic-bezier(0.4,0.0,0.2,1)', style({ transform: 'translateX({{to}})', position: 'absolute', opacity: 0 })),
                            ], { params: { to: '-100%' } }),
                        ]),
                    ], selector: 'ng-doc-theme-toggle', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgDocButtonIconComponent,
                        NgDocTooltipDirective,
                        NgIf,
                        NgDocIconComponent,
                        NgDocSmoothResizeComponent,
                    ], template: "<button ng-doc-button-icon size=\"large\" (click)=\"toggleTheme()\" [ngDocTooltip]=\"tooltipContent\">\n\t<ng-template #tooltipContent>\n\t\t<ng-doc-smooth-resize [trigger]=\"nextTheme.name\">\n\t\t\tSet \"{{ nextTheme.name }}\" theme\n\t\t</ng-doc-smooth-resize>\n\t</ng-template>\n\t<ng-doc-icon\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\ticon=\"sun\"\n\t\t[size]=\"24\"\n\t\t*ngIf=\"nextTheme === themes[1]\"></ng-doc-icon>\n\t<ng-doc-icon\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\ticon=\"moon\"\n\t\t[size]=\"24\"\n\t\t*ngIf=\"nextTheme === themes[2]\"></ng-doc-icon>\n\t<div\n\t\tclass=\"letter\"\n\t\t[@switchIcon]=\"{ value: ':enter', params: { from: '-100%', to: '100%' } }\"\n\t\t*ngIf=\"nextTheme === themes[0]\">\n\t\tA\n\t</div>\n</button>\n", styles: [":host{display:inline-block;height:40px;width:40px}:host .letter{font-family:var(--ng-doc-font-family);font-variant:no-contextual;color:var(--ng-doc-text);line-height:var(--ng-doc-line-height);font-size:var(--ng-doc-font-size);font-weight:var(--ng-doc-font-weight);--ng-doc-font-size: 26px;--ng-doc-font-weight: 600}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgDocThemeService }] });
//# sourceMappingURL=data:application/json;base64,