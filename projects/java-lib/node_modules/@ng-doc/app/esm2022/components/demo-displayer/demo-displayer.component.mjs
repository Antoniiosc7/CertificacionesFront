import { Clipboard } from '@angular/cdk/clipboard';
import { NgIf, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { NgDocCodeComponent } from '@ng-doc/app/components/code';
import { NgDocCodeHighlighterDirective } from '@ng-doc/app/directives/code-highlighter';
import { NgDocButtonIconComponent, NgDocExpanderComponent, NgDocIconComponent, NgDocSmoothResizeComponent, NgDocTooltipDirective, } from '@ng-doc/ui-kit';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/clipboard";
export class NgDocDemoDisplayerComponent {
    constructor(clipboard) {
        this.clipboard = clipboard;
        this.codeContent = '';
        this.code = '';
        this.language = 'typescript';
        this.container = true;
        this.border = true;
        this.expanded = false;
        this.copyTooltipText = '';
    }
    get expandTooltipText() {
        return this.expanded ? 'Collapse' : 'Expand';
    }
    copyCode() {
        this.clipboard.copy(this.code);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoDisplayerComponent, deps: [{ token: i1.Clipboard }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocDemoDisplayerComponent, isStandalone: true, selector: "ng-doc-demo-displayer", inputs: { codeContent: "codeContent", code: "code", language: "language", container: "container", border: "border", expanded: "expanded" }, host: { properties: { "attr.data-ng-doc-border": "this.border" } }, ngImport: i0, template: "<div class=\"ng-doc-demo-wrapper\" *ngIf=\"container; else demoTemplate\">\n\t<div class=\"ng-doc-demo-container\">\n\t\t<div class=\"ng-doc-demo\">\n\t\t\t<ng-container *ngTemplateOutlet=\"demoTemplate\"></ng-container>\n\t\t</div>\n\t\t<div class=\"ng-doc-demo-controls\">\n\t\t\t<button\n\t\t\t\tclass=\"ng-doc-copy-button\"\n\t\t\t\t*ngIf=\"!codeContent\"\n\t\t\t\tng-doc-button-icon\n\t\t\t\t(click)=\"copyCode(); copyTooltipText = 'Copied!'\"\n\t\t\t\t[ngDocTooltip]=\"tooltipContent\"\n\t\t\t\t(mouseenter)=\"copyTooltipText = 'Copy to clipboard'\">\n\t\t\t\t<ng-template #tooltipContent>\n\t\t\t\t\t<ng-doc-smooth-resize [trigger]=\"copyTooltipText\">\n\t\t\t\t\t\t{{ copyTooltipText }}\n\t\t\t\t\t</ng-doc-smooth-resize>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-doc-icon icon=\"copy\"></ng-doc-icon>\n\t\t\t</button>\n\t\t\t<button ng-doc-button-icon (click)=\"expanded = !expanded\" [ngDocTooltip]=\"tooltipContent\">\n\t\t\t\t<ng-template #tooltipContent>\n\t\t\t\t\t<ng-doc-smooth-resize [trigger]=\"expandTooltipText\">\n\t\t\t\t\t\t{{ expandTooltipText }}\n\t\t\t\t\t</ng-doc-smooth-resize>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-doc-icon icon=\"code\"></ng-doc-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\t<ng-doc-expander [content]=\"codeContent ? codeContent : expanderContent\" [expanded]=\"expanded\">\n\t\t<ng-template #expanderContent>\n\t\t\t<ng-doc-code [copyButton]=\"false\">\n\t\t\t\t<pre class=\"hljs ngde\">\n\t\t\t\t\t<code class=\"ngde\" [ngDocCodeHighlighter]=\"code\" [language]=\"'html'\"></code>\n\t\t\t\t</pre>\n\t\t\t</ng-doc-code>\n\t\t</ng-template>\n\t</ng-doc-expander>\n</div>\n\n<ng-template #demoTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n", styles: [":host{display:flex;flex-direction:column;overflow:hidden;--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none}:host[data-ng-doc-border=true]{border:var(--ng-doc-demo-displayer-border);border-radius:var(--ng-doc-demo-displayer-border-radius)}:host .ng-doc-demo-wrapper{overflow:hidden}:host .ng-doc-demo-wrapper .ng-doc-demo-container{display:flex;justify-content:flex-start;width:100%;padding:calc(var(--ng-doc-base-gutter) * 2);background:var(--ng-doc-demo-displayer-background, var(--ng-doc-base-0))}:host .ng-doc-demo-wrapper .ng-doc-demo-container .ng-doc-demo{overflow:hidden;width:100%}:host .ng-doc-demo-wrapper .ng-doc-demo-container .ng-doc-demo-controls{flex-shrink:0;margin-left:auto}:host ng-doc-code{border-top:1px solid var(--ng-doc-border-color)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "directive", type: NgDocTooltipDirective, selector: "[ngDocTooltip]", inputs: ["ngDocTooltip", "delay", "displayOrigin", "pointerOrigin", "positions", "canOpen", "panelClass", "minHeight", "maxHeight", "height", "minWidth", "maxWidth", "width"], outputs: ["beforeOpen", "afterOpen", "beforeClose", "afterClose"], exportAs: ["ngDocTooltip"] }, { kind: "component", type: NgDocSmoothResizeComponent, selector: "ng-doc-smooth-resize", inputs: ["trigger", "animateOpacity"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }, { kind: "component", type: NgDocExpanderComponent, selector: "ng-doc-expander", inputs: ["expanded", "content", "from"] }, { kind: "component", type: NgDocCodeComponent, selector: "ng-doc-code", inputs: ["html", "copyButton", "name", "icon", "lineNumbers"] }, { kind: "directive", type: NgDocCodeHighlighterDirective, selector: "code[ngDocCodeHighlighter]", inputs: ["ngDocCodeHighlighter", "html", "language"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocDemoDisplayerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-demo-displayer', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf,
                        NgTemplateOutlet,
                        NgDocButtonIconComponent,
                        NgDocTooltipDirective,
                        NgDocSmoothResizeComponent,
                        NgDocIconComponent,
                        NgDocExpanderComponent,
                        NgDocCodeComponent,
                        NgDocCodeHighlighterDirective,
                    ], template: "<div class=\"ng-doc-demo-wrapper\" *ngIf=\"container; else demoTemplate\">\n\t<div class=\"ng-doc-demo-container\">\n\t\t<div class=\"ng-doc-demo\">\n\t\t\t<ng-container *ngTemplateOutlet=\"demoTemplate\"></ng-container>\n\t\t</div>\n\t\t<div class=\"ng-doc-demo-controls\">\n\t\t\t<button\n\t\t\t\tclass=\"ng-doc-copy-button\"\n\t\t\t\t*ngIf=\"!codeContent\"\n\t\t\t\tng-doc-button-icon\n\t\t\t\t(click)=\"copyCode(); copyTooltipText = 'Copied!'\"\n\t\t\t\t[ngDocTooltip]=\"tooltipContent\"\n\t\t\t\t(mouseenter)=\"copyTooltipText = 'Copy to clipboard'\">\n\t\t\t\t<ng-template #tooltipContent>\n\t\t\t\t\t<ng-doc-smooth-resize [trigger]=\"copyTooltipText\">\n\t\t\t\t\t\t{{ copyTooltipText }}\n\t\t\t\t\t</ng-doc-smooth-resize>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-doc-icon icon=\"copy\"></ng-doc-icon>\n\t\t\t</button>\n\t\t\t<button ng-doc-button-icon (click)=\"expanded = !expanded\" [ngDocTooltip]=\"tooltipContent\">\n\t\t\t\t<ng-template #tooltipContent>\n\t\t\t\t\t<ng-doc-smooth-resize [trigger]=\"expandTooltipText\">\n\t\t\t\t\t\t{{ expandTooltipText }}\n\t\t\t\t\t</ng-doc-smooth-resize>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-doc-icon icon=\"code\"></ng-doc-icon>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\t<ng-doc-expander [content]=\"codeContent ? codeContent : expanderContent\" [expanded]=\"expanded\">\n\t\t<ng-template #expanderContent>\n\t\t\t<ng-doc-code [copyButton]=\"false\">\n\t\t\t\t<pre class=\"hljs ngde\">\n\t\t\t\t\t<code class=\"ngde\" [ngDocCodeHighlighter]=\"code\" [language]=\"'html'\"></code>\n\t\t\t\t</pre>\n\t\t\t</ng-doc-code>\n\t\t</ng-template>\n\t</ng-doc-expander>\n</div>\n\n<ng-template #demoTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n", styles: [":host{display:flex;flex-direction:column;overflow:hidden;--ng-doc-code-margin: 0;--ng-doc-code-border-radius: 0;--ng-doc-code-border: none}:host[data-ng-doc-border=true]{border:var(--ng-doc-demo-displayer-border);border-radius:var(--ng-doc-demo-displayer-border-radius)}:host .ng-doc-demo-wrapper{overflow:hidden}:host .ng-doc-demo-wrapper .ng-doc-demo-container{display:flex;justify-content:flex-start;width:100%;padding:calc(var(--ng-doc-base-gutter) * 2);background:var(--ng-doc-demo-displayer-background, var(--ng-doc-base-0))}:host .ng-doc-demo-wrapper .ng-doc-demo-container .ng-doc-demo{overflow:hidden;width:100%}:host .ng-doc-demo-wrapper .ng-doc-demo-container .ng-doc-demo-controls{flex-shrink:0;margin-left:auto}:host ng-doc-code{border-top:1px solid var(--ng-doc-border-color)}\n"] }]
        }], ctorParameters: () => [{ type: i1.Clipboard }], propDecorators: { codeContent: [{
                type: Input
            }], code: [{
                type: Input
            }], language: [{
                type: Input
            }], container: [{
                type: Input
            }], border: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-ng-doc-border']
            }], expanded: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVtby1kaXNwbGF5ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hcHAvY29tcG9uZW50cy9kZW1vLWRpc3BsYXllci9kZW1vLWRpc3BsYXllci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC9jb21wb25lbnRzL2RlbW8tZGlzcGxheWVyL2RlbW8tZGlzcGxheWVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3hGLE9BQU8sRUFDTix3QkFBd0IsRUFFeEIsc0JBQXNCLEVBQ3RCLGtCQUFrQixFQUNsQiwwQkFBMEIsRUFDMUIscUJBQXFCLEdBQ3JCLE1BQU0sZ0JBQWdCLENBQUM7OztBQW9CeEIsTUFBTSxPQUFPLDJCQUEyQjtJQXNCdkMsWUFBNkIsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztRQXBCakQsZ0JBQVcsR0FBaUIsRUFBRSxDQUFDO1FBRy9CLFNBQUksR0FBVyxFQUFFLENBQUM7UUFHbEIsYUFBUSxHQUFXLFlBQVksQ0FBQztRQUdoQyxjQUFTLEdBQVksSUFBSSxDQUFDO1FBSTFCLFdBQU0sR0FBWSxJQUFJLENBQUM7UUFHdkIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUUxQixvQkFBZSxHQUFXLEVBQUUsQ0FBQztJQUV1QixDQUFDO0lBRXJELElBQWMsaUJBQWlCO1FBQzlCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7SUFDOUMsQ0FBQztJQUVELFFBQVE7UUFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs4R0E5QlcsMkJBQTJCO2tHQUEzQiwyQkFBMkIsaVNDaEN4Qyw4cERBNENBLGsxQkR2QkUsSUFBSSw2RkFDSixnQkFBZ0Isb0pBQ2hCLHdCQUF3QiwySEFDeEIscUJBQXFCLDBVQUNyQiwwQkFBMEIsd0dBQzFCLGtCQUFrQixnR0FDbEIsc0JBQXNCLHFHQUN0QixrQkFBa0IsdUhBQ2xCLDZCQUE2Qjs7MkZBR2xCLDJCQUEyQjtrQkFsQnZDLFNBQVM7K0JBQ0MsdUJBQXVCLG1CQUdoQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUDt3QkFDUixJQUFJO3dCQUNKLGdCQUFnQjt3QkFDaEIsd0JBQXdCO3dCQUN4QixxQkFBcUI7d0JBQ3JCLDBCQUEwQjt3QkFDMUIsa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLGtCQUFrQjt3QkFDbEIsNkJBQTZCO3FCQUM3Qjs4RUFJRCxXQUFXO3NCQURWLEtBQUs7Z0JBSU4sSUFBSTtzQkFESCxLQUFLO2dCQUlOLFFBQVE7c0JBRFAsS0FBSztnQkFJTixTQUFTO3NCQURSLEtBQUs7Z0JBS04sTUFBTTtzQkFGTCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLHlCQUF5QjtnQkFJdEMsUUFBUTtzQkFEUCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpcGJvYXJkIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NsaXBib2FyZCc7XG5pbXBvcnQgeyBOZ0lmLCBOZ1RlbXBsYXRlT3V0bGV0IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdEb2NDb2RlQ29tcG9uZW50IH0gZnJvbSAnQG5nLWRvYy9hcHAvY29tcG9uZW50cy9jb2RlJztcbmltcG9ydCB7IE5nRG9jQ29kZUhpZ2hsaWdodGVyRGlyZWN0aXZlIH0gZnJvbSAnQG5nLWRvYy9hcHAvZGlyZWN0aXZlcy9jb2RlLWhpZ2hsaWdodGVyJztcbmltcG9ydCB7XG5cdE5nRG9jQnV0dG9uSWNvbkNvbXBvbmVudCxcblx0TmdEb2NDb250ZW50LFxuXHROZ0RvY0V4cGFuZGVyQ29tcG9uZW50LFxuXHROZ0RvY0ljb25Db21wb25lbnQsXG5cdE5nRG9jU21vb3RoUmVzaXplQ29tcG9uZW50LFxuXHROZ0RvY1Rvb2x0aXBEaXJlY3RpdmUsXG59IGZyb20gJ0BuZy1kb2MvdWkta2l0JztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbmctZG9jLWRlbW8tZGlzcGxheWVyJyxcblx0dGVtcGxhdGVVcmw6ICcuL2RlbW8tZGlzcGxheWVyLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vZGVtby1kaXNwbGF5ZXIuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtcblx0XHROZ0lmLFxuXHRcdE5nVGVtcGxhdGVPdXRsZXQsXG5cdFx0TmdEb2NCdXR0b25JY29uQ29tcG9uZW50LFxuXHRcdE5nRG9jVG9vbHRpcERpcmVjdGl2ZSxcblx0XHROZ0RvY1Ntb290aFJlc2l6ZUNvbXBvbmVudCxcblx0XHROZ0RvY0ljb25Db21wb25lbnQsXG5cdFx0TmdEb2NFeHBhbmRlckNvbXBvbmVudCxcblx0XHROZ0RvY0NvZGVDb21wb25lbnQsXG5cdFx0TmdEb2NDb2RlSGlnaGxpZ2h0ZXJEaXJlY3RpdmUsXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jRGVtb0Rpc3BsYXllckNvbXBvbmVudCB7XG5cdEBJbnB1dCgpXG5cdGNvZGVDb250ZW50OiBOZ0RvY0NvbnRlbnQgPSAnJztcblxuXHRASW5wdXQoKVxuXHRjb2RlOiBzdHJpbmcgPSAnJztcblxuXHRASW5wdXQoKVxuXHRsYW5ndWFnZTogc3RyaW5nID0gJ3R5cGVzY3JpcHQnO1xuXG5cdEBJbnB1dCgpXG5cdGNvbnRhaW5lcjogYm9vbGVhbiA9IHRydWU7XG5cblx0QElucHV0KClcblx0QEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbmctZG9jLWJvcmRlcicpXG5cdGJvcmRlcjogYm9vbGVhbiA9IHRydWU7XG5cblx0QElucHV0KClcblx0ZXhwYW5kZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHRjb3B5VG9vbHRpcFRleHQ6IHN0cmluZyA9ICcnO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgY2xpcGJvYXJkOiBDbGlwYm9hcmQpIHt9XG5cblx0cHJvdGVjdGVkIGdldCBleHBhbmRUb29sdGlwVGV4dCgpOiBzdHJpbmcge1xuXHRcdHJldHVybiB0aGlzLmV4cGFuZGVkID8gJ0NvbGxhcHNlJyA6ICdFeHBhbmQnO1xuXHR9XG5cblx0Y29weUNvZGUoKTogdm9pZCB7XG5cdFx0dGhpcy5jbGlwYm9hcmQuY29weSh0aGlzLmNvZGUpO1xuXHR9XG59XG4iLCI8ZGl2IGNsYXNzPVwibmctZG9jLWRlbW8td3JhcHBlclwiICpuZ0lmPVwiY29udGFpbmVyOyBlbHNlIGRlbW9UZW1wbGF0ZVwiPlxuXHQ8ZGl2IGNsYXNzPVwibmctZG9jLWRlbW8tY29udGFpbmVyXCI+XG5cdFx0PGRpdiBjbGFzcz1cIm5nLWRvYy1kZW1vXCI+XG5cdFx0XHQ8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiZGVtb1RlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+XG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cIm5nLWRvYy1kZW1vLWNvbnRyb2xzXCI+XG5cdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdGNsYXNzPVwibmctZG9jLWNvcHktYnV0dG9uXCJcblx0XHRcdFx0Km5nSWY9XCIhY29kZUNvbnRlbnRcIlxuXHRcdFx0XHRuZy1kb2MtYnV0dG9uLWljb25cblx0XHRcdFx0KGNsaWNrKT1cImNvcHlDb2RlKCk7IGNvcHlUb29sdGlwVGV4dCA9ICdDb3BpZWQhJ1wiXG5cdFx0XHRcdFtuZ0RvY1Rvb2x0aXBdPVwidG9vbHRpcENvbnRlbnRcIlxuXHRcdFx0XHQobW91c2VlbnRlcik9XCJjb3B5VG9vbHRpcFRleHQgPSAnQ29weSB0byBjbGlwYm9hcmQnXCI+XG5cdFx0XHRcdDxuZy10ZW1wbGF0ZSAjdG9vbHRpcENvbnRlbnQ+XG5cdFx0XHRcdFx0PG5nLWRvYy1zbW9vdGgtcmVzaXplIFt0cmlnZ2VyXT1cImNvcHlUb29sdGlwVGV4dFwiPlxuXHRcdFx0XHRcdFx0e3sgY29weVRvb2x0aXBUZXh0IH19XG5cdFx0XHRcdFx0PC9uZy1kb2Mtc21vb3RoLXJlc2l6ZT5cblx0XHRcdFx0PC9uZy10ZW1wbGF0ZT5cblx0XHRcdFx0PG5nLWRvYy1pY29uIGljb249XCJjb3B5XCI+PC9uZy1kb2MtaWNvbj5cblx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0PGJ1dHRvbiBuZy1kb2MtYnV0dG9uLWljb24gKGNsaWNrKT1cImV4cGFuZGVkID0gIWV4cGFuZGVkXCIgW25nRG9jVG9vbHRpcF09XCJ0b29sdGlwQ29udGVudFwiPlxuXHRcdFx0XHQ8bmctdGVtcGxhdGUgI3Rvb2x0aXBDb250ZW50PlxuXHRcdFx0XHRcdDxuZy1kb2Mtc21vb3RoLXJlc2l6ZSBbdHJpZ2dlcl09XCJleHBhbmRUb29sdGlwVGV4dFwiPlxuXHRcdFx0XHRcdFx0e3sgZXhwYW5kVG9vbHRpcFRleHQgfX1cblx0XHRcdFx0XHQ8L25nLWRvYy1zbW9vdGgtcmVzaXplPlxuXHRcdFx0XHQ8L25nLXRlbXBsYXRlPlxuXHRcdFx0XHQ8bmctZG9jLWljb24gaWNvbj1cImNvZGVcIj48L25nLWRvYy1pY29uPlxuXHRcdFx0PC9idXR0b24+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8bmctZG9jLWV4cGFuZGVyIFtjb250ZW50XT1cImNvZGVDb250ZW50ID8gY29kZUNvbnRlbnQgOiBleHBhbmRlckNvbnRlbnRcIiBbZXhwYW5kZWRdPVwiZXhwYW5kZWRcIj5cblx0XHQ8bmctdGVtcGxhdGUgI2V4cGFuZGVyQ29udGVudD5cblx0XHRcdDxuZy1kb2MtY29kZSBbY29weUJ1dHRvbl09XCJmYWxzZVwiPlxuXHRcdFx0XHQ8cHJlIGNsYXNzPVwiaGxqcyBuZ2RlXCI+XG5cdFx0XHRcdFx0PGNvZGUgY2xhc3M9XCJuZ2RlXCIgW25nRG9jQ29kZUhpZ2hsaWdodGVyXT1cImNvZGVcIiBbbGFuZ3VhZ2VdPVwiJ2h0bWwnXCI+PC9jb2RlPlxuXHRcdFx0XHQ8L3ByZT5cblx0XHRcdDwvbmctZG9jLWNvZGU+XG5cdFx0PC9uZy10ZW1wbGF0ZT5cblx0PC9uZy1kb2MtZXhwYW5kZXI+XG48L2Rpdj5cblxuPG5nLXRlbXBsYXRlICNkZW1vVGVtcGxhdGU+XG5cdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvbmctdGVtcGxhdGU+XG4iXX0=