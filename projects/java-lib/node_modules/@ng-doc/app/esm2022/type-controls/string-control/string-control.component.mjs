import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { NgDocButtonIconComponent, NgDocFocusableDirective, NgDocIconComponent, NgDocInputStringDirective, NgDocInputWrapperComponent, } from '@ng-doc/ui-kit';
import { DIControl, DIControlSilencerDirective } from 'di-controls';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class NgDocStringControlComponent extends DIControl {
    constructor() {
        super();
    }
    changeModel(value) {
        this.updateModel(value === null && this.default ? this.default : value);
    }
    writeValue(value) {
        super.writeValue(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocStringControlComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.0", type: NgDocStringControlComponent, isStandalone: true, selector: "ng-doc-string-control", inputs: { default: "default" }, usesInheritance: true, ngImport: i0, template: "<ng-doc-input-wrapper [rightContent]=\"rightContent\" diControlSilencer>\n\t<input ngDocInputString [ngModel]=\"model()\" (ngModelChange)=\"changeModel($event)\" />\n\t<ng-template #rightContent>\n\t\t<button\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t[ngDocFocusable]=\"false\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[rounded]=\"false\"\n\t\t\t(click)=\"updateModel(default ?? null)\"\n\t\t\t(focusout)=\"touch()\"\n\t\t\t*ngIf=\"model() && model() !== default\">\n\t\t\t<ng-doc-icon icon=\"x\"></ng-doc-icon>\n\t\t</button>\n\t</ng-template>\n</ng-doc-input-wrapper>\n", styles: [":host{display:block;width:100%}\n"], dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: NgDocInputWrapperComponent, selector: "ng-doc-input-wrapper", inputs: ["blurContent", "blurContext", "leftContent", "rightContent", "align"] }, { kind: "directive", type: NgDocInputStringDirective, selector: "input[ngDocInputString]" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgDocButtonIconComponent, selector: "button[ng-doc-button-icon], a[ng-doc-button-icon]", inputs: ["size", "rounded"] }, { kind: "directive", type: NgDocFocusableDirective, selector: "[ngDocFocusable]", inputs: ["ngDocFocusable"], exportAs: ["ngDocFocusable"] }, { kind: "component", type: NgDocIconComponent, selector: "ng-doc-icon", inputs: ["icon", "customIcon", "size"] }, { kind: "directive", type: DIControlSilencerDirective, selector: "[diControlSilencer]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocStringControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-doc-string-control', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        FormsModule,
                        NgDocInputWrapperComponent,
                        NgDocInputStringDirective,
                        NgIf,
                        NgDocButtonIconComponent,
                        NgDocFocusableDirective,
                        NgDocIconComponent,
                        DIControlSilencerDirective,
                    ], template: "<ng-doc-input-wrapper [rightContent]=\"rightContent\" diControlSilencer>\n\t<input ngDocInputString [ngModel]=\"model()\" (ngModelChange)=\"changeModel($event)\" />\n\t<ng-template #rightContent>\n\t\t<button\n\t\t\tng-doc-button-icon\n\t\t\tsize=\"large\"\n\t\t\t[ngDocFocusable]=\"false\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[rounded]=\"false\"\n\t\t\t(click)=\"updateModel(default ?? null)\"\n\t\t\t(focusout)=\"touch()\"\n\t\t\t*ngIf=\"model() && model() !== default\">\n\t\t\t<ng-doc-icon icon=\"x\"></ng-doc-icon>\n\t\t</button>\n\t</ng-template>\n</ng-doc-input-wrapper>\n", styles: [":host{display:block;width:100%}\n"] }]
        }], ctorParameters: () => [], propDecorators: { default: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nLWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hcHAvdHlwZS1jb250cm9scy9zdHJpbmctY29udHJvbC9zdHJpbmctY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FwcC90eXBlLWNvbnRyb2xzL3N0cmluZy1jb250cm9sL3N0cmluZy1jb250cm9sLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUNOLHdCQUF3QixFQUN4Qix1QkFBdUIsRUFDdkIsa0JBQWtCLEVBQ2xCLHlCQUF5QixFQUN6QiwwQkFBMEIsR0FDMUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sYUFBYSxDQUFDOzs7QUFtQnBFLE1BQU0sT0FBTywyQkFDWixTQUFRLFNBQWlCO0lBTXpCO1FBQ0MsS0FBSyxFQUFFLENBQUM7SUFDVCxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQW9CO1FBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRVEsVUFBVSxDQUFDLEtBQW9CO1FBQ3ZDLEtBQUssQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQzs4R0FqQlcsMkJBQTJCO2tHQUEzQiwyQkFBMkIsd0lDOUJ4Qyx1a0JBZ0JBLDBGRElFLFdBQVcsK21CQUNYLDBCQUEwQixpSkFDMUIseUJBQXlCLG9FQUN6QixJQUFJLDZGQUNKLHdCQUF3QiwySEFDeEIsdUJBQXVCLHVIQUN2QixrQkFBa0IsZ0dBQ2xCLDBCQUEwQjs7MkZBR2YsMkJBQTJCO2tCQWpCdkMsU0FBUzsrQkFDQyx1QkFBdUIsbUJBR2hCLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQO3dCQUNSLFdBQVc7d0JBQ1gsMEJBQTBCO3dCQUMxQix5QkFBeUI7d0JBQ3pCLElBQUk7d0JBQ0osd0JBQXdCO3dCQUN4Qix1QkFBdUI7d0JBQ3ZCLGtCQUFrQjt3QkFDbEIsMEJBQTBCO3FCQUMxQjt3REFPRCxPQUFPO3NCQUROLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nRG9jVHlwZUNvbnRyb2wgfSBmcm9tICdAbmctZG9jL2FwcC9pbnRlcmZhY2VzJztcbmltcG9ydCB7XG5cdE5nRG9jQnV0dG9uSWNvbkNvbXBvbmVudCxcblx0TmdEb2NGb2N1c2FibGVEaXJlY3RpdmUsXG5cdE5nRG9jSWNvbkNvbXBvbmVudCxcblx0TmdEb2NJbnB1dFN0cmluZ0RpcmVjdGl2ZSxcblx0TmdEb2NJbnB1dFdyYXBwZXJDb21wb25lbnQsXG59IGZyb20gJ0BuZy1kb2MvdWkta2l0JztcbmltcG9ydCB7IERJQ29udHJvbCwgRElDb250cm9sU2lsZW5jZXJEaXJlY3RpdmUgfSBmcm9tICdkaS1jb250cm9scyc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ25nLWRvYy1zdHJpbmctY29udHJvbCcsXG5cdHRlbXBsYXRlVXJsOiAnLi9zdHJpbmctY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL3N0cmluZy1jb250cm9sLmNvbXBvbmVudC5zY3NzJ10sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbXG5cdFx0Rm9ybXNNb2R1bGUsXG5cdFx0TmdEb2NJbnB1dFdyYXBwZXJDb21wb25lbnQsXG5cdFx0TmdEb2NJbnB1dFN0cmluZ0RpcmVjdGl2ZSxcblx0XHROZ0lmLFxuXHRcdE5nRG9jQnV0dG9uSWNvbkNvbXBvbmVudCxcblx0XHROZ0RvY0ZvY3VzYWJsZURpcmVjdGl2ZSxcblx0XHROZ0RvY0ljb25Db21wb25lbnQsXG5cdFx0RElDb250cm9sU2lsZW5jZXJEaXJlY3RpdmUsXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nRG9jU3RyaW5nQ29udHJvbENvbXBvbmVudFxuXHRleHRlbmRzIERJQ29udHJvbDxzdHJpbmc+XG5cdGltcGxlbWVudHMgTmdEb2NUeXBlQ29udHJvbDxzdHJpbmc+XG57XG5cdEBJbnB1dCgpXG5cdGRlZmF1bHQ/OiBzdHJpbmc7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdGNoYW5nZU1vZGVsKHZhbHVlOiBzdHJpbmcgfCBudWxsKTogdm9pZCB7XG5cdFx0dGhpcy51cGRhdGVNb2RlbCh2YWx1ZSA9PT0gbnVsbCAmJiB0aGlzLmRlZmF1bHQgPyB0aGlzLmRlZmF1bHQgOiB2YWx1ZSk7XG5cdH1cblxuXHRvdmVycmlkZSB3cml0ZVZhbHVlKHZhbHVlOiBzdHJpbmcgfCBudWxsKSB7XG5cdFx0c3VwZXIud3JpdGVWYWx1ZSh2YWx1ZSk7XG5cdH1cbn1cbiIsIjxuZy1kb2MtaW5wdXQtd3JhcHBlciBbcmlnaHRDb250ZW50XT1cInJpZ2h0Q29udGVudFwiIGRpQ29udHJvbFNpbGVuY2VyPlxuXHQ8aW5wdXQgbmdEb2NJbnB1dFN0cmluZyBbbmdNb2RlbF09XCJtb2RlbCgpXCIgKG5nTW9kZWxDaGFuZ2UpPVwiY2hhbmdlTW9kZWwoJGV2ZW50KVwiIC8+XG5cdDxuZy10ZW1wbGF0ZSAjcmlnaHRDb250ZW50PlxuXHRcdDxidXR0b25cblx0XHRcdG5nLWRvYy1idXR0b24taWNvblxuXHRcdFx0c2l6ZT1cImxhcmdlXCJcblx0XHRcdFtuZ0RvY0ZvY3VzYWJsZV09XCJmYWxzZVwiXG5cdFx0XHRbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuXHRcdFx0W3JvdW5kZWRdPVwiZmFsc2VcIlxuXHRcdFx0KGNsaWNrKT1cInVwZGF0ZU1vZGVsKGRlZmF1bHQgPz8gbnVsbClcIlxuXHRcdFx0KGZvY3Vzb3V0KT1cInRvdWNoKClcIlxuXHRcdFx0Km5nSWY9XCJtb2RlbCgpICYmIG1vZGVsKCkgIT09IGRlZmF1bHRcIj5cblx0XHRcdDxuZy1kb2MtaWNvbiBpY29uPVwieFwiPjwvbmctZG9jLWljb24+XG5cdFx0PC9idXR0b24+XG5cdDwvbmctdGVtcGxhdGU+XG48L25nLWRvYy1pbnB1dC13cmFwcGVyPlxuIl19