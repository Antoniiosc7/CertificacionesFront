import * as i0 from '@angular/core';
import { Directive, Input, HostBinding } from '@angular/core';
import highlight from 'highlight.js/lib/core';
import xml from 'highlight.js/lib/languages/xml';

highlight.registerLanguage('html', xml);
highlight.registerLanguage('xml', xml);
class NgDocCodeHighlighterDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.code = '';
        this.html = '';
        this.language = 'typescript';
        this.highlightJsClass = true;
    }
    ngOnChanges() {
        if (this.code) {
            const result = highlight.highlight(this.code, { language: this.language });
            this.elementRef.nativeElement.innerHTML = result.value ?? this.html;
        }
        else {
            this.elementRef.nativeElement.innerHTML = this.html;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCodeHighlighterDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.1.0", type: NgDocCodeHighlighterDirective, isStandalone: true, selector: "code[ngDocCodeHighlighter]", inputs: { code: ["ngDocCodeHighlighter", "code"], html: "html", language: "language" }, host: { properties: { "class.hljs": "this.highlightJsClass" } }, usesOnChanges: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: NgDocCodeHighlighterDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'code[ngDocCodeHighlighter]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { code: [{
                type: Input,
                args: ['ngDocCodeHighlighter']
            }], html: [{
                type: Input
            }], language: [{
                type: Input
            }], highlightJsClass: [{
                type: HostBinding,
                args: ['class.hljs']
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { NgDocCodeHighlighterDirective };
//# sourceMappingURL=ng-doc-app-directives-code-highlighter.mjs.map
