{"version":3,"file":"ng-doc-app-providers-playground-demo.mjs","sources":["../../../../libs/app/providers/playground-demo/provide-playground-demo.ts","../../../../libs/app/providers/playground-demo/ng-doc-app-providers-playground-demo.ts"],"sourcesContent":["import { InjectionToken, Provider } from '@angular/core';\nimport { Constructor } from '@ng-doc/core';\n\nconst tokenStore: Map<string, InjectionToken<unknown>> = new Map<string, InjectionToken<unknown>>();\n\n/**\n *\n * @param type\n * @param control\n * @param options\n * @param playgroundId\n * @param selector\n * @param component\n */\nexport function providePlaygroundDemo(\n\tplaygroundId: string,\n\tcomponent: Constructor<unknown>,\n): Provider {\n\tconst token: InjectionToken<unknown> =\n\t\ttokenStore.get(playgroundId) ??\n\t\tnew InjectionToken<unknown>(`NG_DOC_PLAYGROUND_DEMO_${playgroundId}`);\n\n\ttokenStore.set(playgroundId, token);\n\n\treturn {\n\t\tprovide: token,\n\t\tuseValue: component,\n\t\tmulti: true,\n\t};\n}\n\n/**\n * Returns the token for the given playground id.\n * @param playgroundId\n */\nexport function getPlaygroundDemoToken<T>(playgroundId: string): InjectionToken<T[]> | undefined {\n\treturn tokenStore.get(playgroundId) as InjectionToken<T[]> | undefined;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;AAGA,MAAM,UAAU,GAAyC,IAAI,GAAG,EAAmC,CAAC;AAEpG;;;;;;;;AAQG;AACa,SAAA,qBAAqB,CACpC,YAAoB,EACpB,SAA+B,EAAA;AAE/B,IAAA,MAAM,KAAK,GACV,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC;AAC5B,QAAA,IAAI,cAAc,CAAU,CAAA,uBAAA,EAA0B,YAAY,CAAA,CAAE,CAAC,CAAC;AAEvE,IAAA,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IAEpC,OAAO;AACN,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,QAAQ,EAAE,SAAS;AACnB,QAAA,KAAK,EAAE,IAAI;KACX,CAAC;AACH,CAAC;AAED;;;AAGG;AACG,SAAU,sBAAsB,CAAI,YAAoB,EAAA;AAC7D,IAAA,OAAO,UAAU,CAAC,GAAG,CAAC,YAAY,CAAoC,CAAC;AACxE;;ACrCA;;AAEG;;;;"}